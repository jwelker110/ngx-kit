{"files":[{"fileName":"lib/collection-lib.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { UiAccordionModule } from './ui-accordion/ui-accordion.module';\r\nimport { UiAlertModule } from './ui-alert/ui-alert.module';\r\nimport { UiAutocompleteModule } from './ui-autocomplete/ui-autocomplete.module';\r\nimport { UiBadgeModule } from './ui-badge/ui-badge.module';\r\nimport { UiBreadcrumbsModule } from './ui-breadcrumbs/ui-breadcrumbs.module';\r\nimport { UiButtonModule } from './ui-button/ui-button.module';\r\nimport { UiCarouselModule } from './ui-carousel/ui-carousel.module';\r\nimport { UiCheckboxModule } from './ui-checkbox/ui-checkbox.module';\r\nimport { UiCustomSelectModule } from './ui-custom-select/ui-custom-select.module';\r\nimport { UiDatePickerModule } from './ui-date-picker/ui-date-picker.module';\r\nimport { UiDialogModule } from './ui-dialog/ui-dialog.module';\r\nimport { UiDrawerModule } from './ui-drawer/ui-drawer.module';\r\nimport { UiDropdownModule } from './ui-dropdown/ui-dropdown.module';\r\nimport { UiFileModule } from './ui-file/ui-file.module';\r\nimport { UiFormModule } from './ui-form/ui-form.module';\r\nimport { UiLoadingBarModule } from './ui-loading-bar/ui-loading-bar.module';\r\nimport { UiModalModule } from './ui-modal/ui-modal.module';\r\nimport { UiNotificationModule } from './ui-notification/ui-notification.module';\r\nimport { UiPopupModule } from './ui-popup/ui-popup.module';\r\nimport { UiRadioModule } from './ui-radio/ui-radio.module';\r\nimport { UiRatingModule } from './ui-rating/ui-rating.module';\r\nimport { UiScrollModule } from './ui-scroll/ui-scroll.module';\r\nimport { UiSelectModule } from './ui-select/ui-select.module';\r\nimport { UiVerticalMenuModule } from './ui-vertical-menu/ui-vertical-menu.module';\r\nimport { UiSliderModule } from './ui-slider/ui-slider.module';\r\nimport { UiTabsModule } from './ui-tabs/ui-tabs.module';\r\nimport { UiTextModule } from './ui-text/ui-text.module';\r\nimport { UiToggleModule } from './ui-toggle/ui-toggle.module';\r\nimport { UiTooltipModule } from './ui-tooltip/ui-tooltip.module';\r\n\r\nconst lib = [\r\n  UiAccordionModule,\r\n  UiAlertModule,\r\n  UiAutocompleteModule,\r\n  UiBadgeModule,\r\n  UiBreadcrumbsModule,\r\n  UiButtonModule,\r\n  UiCarouselModule,\r\n  UiCheckboxModule,\r\n  UiCustomSelectModule,\r\n  UiDatePickerModule,\r\n  UiDialogModule,\r\n  UiDrawerModule,\r\n  UiDropdownModule,\r\n  UiFileModule,\r\n  UiFormModule,\r\n  UiLoadingBarModule,\r\n  UiModalModule,\r\n  UiNotificationModule,\r\n  UiPopupModule,\r\n  UiRadioModule,\r\n  UiRatingModule,\r\n  UiScrollModule,\r\n  UiSelectModule,\r\n  UiSliderModule,\r\n  UiVerticalMenuModule,\r\n  UiTabsModule,\r\n  UiTextModule,\r\n  UiToggleModule,\r\n  UiTooltipModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ...lib,\r\n  ],\r\n  declarations: [],\r\n  exports: [\r\n    ...lib,\r\n  ],\r\n})\r\nexport class CollectionLibModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ...lib,\r\n  ],\r\n  declarations: [],\r\n  exports: [\r\n    ...lib,\r\n  ],\r\n})"],"modifiers":["export"],"name":"CollectionLibModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    ...lib,\r\n  ]"}}}]},{"fileName":"lib/demo.module.ts","type":"ts","text":"import { NgModule } from '@angular/core';\r\nimport { Type } from '@angular/core/src/type';\r\nimport { UiAccordionDemoComponent } from './ui-accordion/demo/ui-accordion-demo.component';\r\nimport { UiAccordionDemoModule } from './ui-accordion/demo/ui-accordion-demo.module';\r\nimport { UiAlertDemoComponent } from './ui-alert/demo/ui-alert-demo.component';\r\nimport { UiAlertDemoModule } from './ui-alert/demo/ui-alert-demo.module';\r\nimport { UiAutocompleteDemoComponent } from './ui-autocomplete/demo/ui-autocomplete-demo.component';\r\nimport { UiAutocompleteDemoModule } from './ui-autocomplete/demo/ui-autocomplete-demo.module';\r\nimport { UiBadgeDemoComponent } from './ui-badge/demo/ui-badge-demo.component';\r\nimport { UiBadgeDemoModule } from './ui-badge/demo/ui-badge-demo.module';\r\nimport { UiBreadcrumbsDemoComponent } from './ui-breadcrumbs/demo/ui-breadcrumbs-demo.component';\r\nimport { UiBreadcrumbsDemoModule } from './ui-breadcrumbs/demo/ui-breadcrumbs-demo.module';\r\nimport { UiButtonDemoComponent } from './ui-button/demo/ui-button-demo.component';\r\nimport { UiButtonDemoModule } from './ui-button/demo/ui-button-demo.module';\r\nimport { UiCarouselDemoComponent } from './ui-carousel/demo/ui-carousel-demo.component';\r\nimport { UiCarouselDemoModule } from './ui-carousel/demo/ui-carousel-demo.module';\r\nimport { UiCheckboxDemoComponent } from './ui-checkbox/demo/ui-checkbox-demo.component';\r\nimport { UiCheckboxDemoModule } from './ui-checkbox/demo/ui-checkbox-demo.module';\r\nimport { UiCustomSelectDemoComponent } from './ui-custom-select/demo/ui-custom-select-demo.component';\r\nimport { UiCustomSelectDemoModule } from './ui-custom-select/demo/ui-custom-select-demo.module';\r\nimport { UiDatePickerDemoComponent } from './ui-date-picker/demo/ui-date-picker-demo.component';\r\nimport { UiDatePickerDemoModule } from './ui-date-picker/demo/ui-date-picker-demo.module';\r\nimport { UiDialogDemoComponent } from './ui-dialog/demo/ui-dialog-demo.component';\r\nimport { UiDialogDemoModule } from './ui-dialog/demo/ui-dialog-demo.module';\r\nimport { UiDrawerDemoComponent } from './ui-drawer/demo/ui-drawer-demo.component';\r\nimport { UiDrawerDemoModule } from './ui-drawer/demo/ui-drawer-demo.module';\r\nimport { UiDropdownDemoComponent } from './ui-dropdown/demo/ui-dropdown-demo.component';\r\nimport { UiDropdownDemoModule } from './ui-dropdown/demo/ui-dropdown-demo.module';\r\nimport { UiFileDemoComponent } from './ui-file/demo/ui-file-demo.component';\r\nimport { UiFileDemoModule } from './ui-file/demo/ui-file-demo.module';\r\nimport { UiFormDemoComponent } from './ui-form/demo/ui-form-demo.component';\r\nimport { UiFormDemoModule } from './ui-form/demo/ui-form-demo.module';\r\nimport { UiLoadingBarDemoComponent } from './ui-loading-bar/demo/ui-loading-bar-demo.component';\r\nimport { UiLoadingBarDemoModule } from './ui-loading-bar/demo/ui-loading-bar-demo.module';\r\nimport { UiModalDemoComponent } from './ui-modal/demo/ui-modal-demo.component';\r\nimport { UiModalDemoModule } from './ui-modal/demo/ui-modal-demo.module';\r\nimport { UiNotificationDemoComponent } from './ui-notification/demo/ui-notification-demo.component';\r\nimport { UiNotificationDemoModule } from './ui-notification/demo/ui-notification-demo.module';\r\nimport { UiPopupDemoComponent } from './ui-popup/demo/ui-popup-demo.component';\r\nimport { UiPopupDemoModule } from './ui-popup/demo/ui-popup-demo.module';\r\nimport { UiRadioDemoComponent } from './ui-radio/demo/ui-radio-demo.component';\r\nimport { UiRadioDemoModule } from './ui-radio/demo/ui-radio-demo.module';\r\nimport { UiRatingDemoComponent } from './ui-rating/demo/ui-rating-demo.component';\r\nimport { UiRatingDemoModule } from './ui-rating/demo/ui-rating-demo.module';\r\nimport { UiScrollDemoComponent } from './ui-scroll/demo/ui-scroll-demo.component';\r\nimport { UiScrollDemoModule } from './ui-scroll/demo/ui-scroll-demo.module';\r\nimport { UiSelectDemoComponent } from './ui-select/demo/ui-select-demo.component';\r\nimport { UiSelectDemoModule } from './ui-select/demo/ui-select-demo.module';\r\nimport { UiSliderDemoComponent } from './ui-slider/demo/ui-slider-demo.component';\r\nimport { UiSliderDemoModule } from './ui-slider/demo/ui-slider-demo.module';\r\nimport { UiTabsDemoComponent } from './ui-tabs/demo/ui-tabs-demo.component';\r\nimport { UiTabsDemoModule } from './ui-tabs/demo/ui-tabs-demo.module';\r\nimport { UiTextDemoComponent } from './ui-text/demo/ui-text-demo.component';\r\nimport { UiTextDemoModule } from './ui-text/demo/ui-text-demo.module';\r\nimport { UiToggleDemoComponent } from './ui-toggle/demo/ui-toggle-demo.component';\r\nimport { UiToggleDemoModule } from './ui-toggle/demo/ui-toggle-demo.module';\r\nimport { UiTooltipDemoComponent } from './ui-tooltip/demo/ui-tooltip-demo.component';\r\nimport { UiTooltipDemoModule } from './ui-tooltip/demo/ui-tooltip-demo.module';\r\nimport { UiVerticalMenuDemoComponent } from './ui-vertical-menu/demo/ui-vertical-menu-demo.component';\r\nimport { UiVerticalMenuDemoModule } from './ui-vertical-menu/demo/ui-vertical-menu-demo.module';\r\n\r\n/**\r\n * Provides correct demo-components linking for website.\r\n */\r\nexport const demoComponentsRef: [string, Type<any>][] = [\r\n  ['UiAccordionDemoComponent', UiAccordionDemoComponent],\r\n  ['UiAlertDemoComponent', UiAlertDemoComponent],\r\n  ['UiAutocompleteDemoComponent', UiAutocompleteDemoComponent],\r\n  ['UiBadgeDemoComponent', UiBadgeDemoComponent],\r\n  ['UiBreadcrumbsDemoComponent', UiBreadcrumbsDemoComponent],\r\n  ['UiButtonDemoComponent', UiButtonDemoComponent],\r\n  ['UiCarouselDemoComponent', UiCarouselDemoComponent],\r\n  ['UiCheckboxDemoComponent', UiCheckboxDemoComponent],\r\n  ['UiCustomSelectDemoComponent', UiCustomSelectDemoComponent],\r\n  ['UiDatePickerDemoComponent', UiDatePickerDemoComponent],\r\n  ['UiDialogDemoComponent', UiDialogDemoComponent],\r\n  ['UiDrawerDemoComponent', UiDrawerDemoComponent],\r\n  ['UiDropdownDemoComponent', UiDropdownDemoComponent],\r\n  ['UiFileDemoComponent', UiFileDemoComponent],\r\n  ['UiFormDemoComponent', UiFormDemoComponent],\r\n  ['UiLoadingBarDemoComponent', UiLoadingBarDemoComponent],\r\n  ['UiModalDemoComponent', UiModalDemoComponent],\r\n  ['UiNotificationDemoComponent', UiNotificationDemoComponent],\r\n  ['UiPopupDemoComponent', UiPopupDemoComponent],\r\n  ['UiRadioDemoComponent', UiRadioDemoComponent],\r\n  ['UiRatingDemoComponent', UiRatingDemoComponent],\r\n  ['UiScrollDemoComponent', UiScrollDemoComponent],\r\n  ['UiSelectDemoComponent', UiSelectDemoComponent],\r\n  ['UiSliderDemoComponent', UiSliderDemoComponent],\r\n  ['UiTabsDemoComponent', UiTabsDemoComponent],\r\n  ['UiTextDemoComponent', UiTextDemoComponent],\r\n  ['UiToggleDemoComponent', UiToggleDemoComponent],\r\n  ['UiTooltipDemoComponent', UiTooltipDemoComponent],\r\n  ['UiVerticalMenuDemoComponent', UiVerticalMenuDemoComponent],\r\n];\r\n\r\n@NgModule({\r\n  imports: [],\r\n  exports: [\r\n    UiAccordionDemoModule,\r\n    UiAlertDemoModule,\r\n    UiAutocompleteDemoModule,\r\n    UiBadgeDemoModule,\r\n    UiBreadcrumbsDemoModule,\r\n    UiButtonDemoModule,\r\n    UiCarouselDemoModule,\r\n    UiCheckboxDemoModule,\r\n    UiCustomSelectDemoModule,\r\n    UiDatePickerDemoModule,\r\n    UiDialogDemoModule,\r\n    UiDrawerDemoModule,\r\n    UiDropdownDemoModule,\r\n    UiFileDemoModule,\r\n    UiFormDemoModule,\r\n    UiLoadingBarDemoModule,\r\n    UiModalDemoModule,\r\n    UiNotificationDemoModule,\r\n    UiPopupDemoModule,\r\n    UiRadioDemoModule,\r\n    UiRatingDemoModule,\r\n    UiScrollDemoModule,\r\n    UiSelectDemoModule,\r\n    UiSliderDemoModule,\r\n    UiTabsDemoModule,\r\n    UiTextDemoModule,\r\n    UiToggleDemoModule,\r\n    UiTooltipDemoModule,\r\n    UiVerticalMenuDemoModule,\r\n  ],\r\n})\r\nexport class DemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [],\r\n  exports: [\r\n    UiAccordionDemoModule,\r\n    UiAlertDemoModule,\r\n    UiAutocompleteDemoModule,\r\n    UiBadgeDemoModule,\r\n    UiBreadcrumbsDemoModule,\r\n    UiButtonDemoModule,\r\n    UiCarouselDemoModule,\r\n    UiCheckboxDemoModule,\r\n    UiCustomSelectDemoModule,\r\n    UiDatePickerDemoModule,\r\n    UiDialogDemoModule,\r\n    UiDrawerDemoModule,\r\n    UiDropdownDemoModule,\r\n    UiFileDemoModule,\r\n    UiFormDemoModule,\r\n    UiLoadingBarDemoModule,\r\n    UiModalDemoModule,\r\n    UiNotificationDemoModule,\r\n    UiPopupDemoModule,\r\n    UiRadioDemoModule,\r\n    UiRatingDemoModule,\r\n    UiScrollDemoModule,\r\n    UiSelectDemoModule,\r\n    UiSliderDemoModule,\r\n    UiTabsDemoModule,\r\n    UiTextDemoModule,\r\n    UiToggleDemoModule,\r\n    UiTooltipDemoModule,\r\n    UiVerticalMenuDemoModule,\r\n  ],\r\n})"],"modifiers":["export"],"name":"DemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    UiAccordionDemoModule,\r\n    UiAlertDemoModule,\r\n    UiAutocompleteDemoModule,\r\n    UiBadgeDemoModule,\r\n    UiBreadcrumbsDemoModule,\r\n    UiButtonDemoModule,\r\n    UiCarouselDemoModule,\r\n    UiCheckboxDemoModule,\r\n    UiCustomSelectDemoModule,\r\n    UiDatePickerDemoModule,\r\n    UiDialogDemoModule,\r\n    UiDrawerDemoModule,\r\n    UiDropdownDemoModule,\r\n    UiFileDemoModule,\r\n    UiFormDemoModule,\r\n    UiLoadingBarDemoModule,\r\n    UiModalDemoModule,\r\n    UiNotificationDemoModule,\r\n    UiPopupDemoModule,\r\n    UiRadioDemoModule,\r\n    UiRatingDemoModule,\r\n    UiScrollDemoModule,\r\n    UiSelectDemoModule,\r\n    UiSliderDemoModule,\r\n    UiTabsDemoModule,\r\n    UiTextDemoModule,\r\n    UiToggleDemoModule,\r\n    UiTooltipDemoModule,\r\n    UiVerticalMenuDemoModule,\r\n  ]"}}}]},{"fileName":"lib/ui-accordion/demo/ui-accordion-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-accordion-demo.component.html',\n})\nexport class UiAccordionDemoComponent {\n  panels = [\n    {title: 'Panel 1', content: 'Panel 1 content'},\n    {title: 'Panel 2', content: 'Panel 2 content'},\n    {title: 'Panel 3', content: 'Panel 3 content'},\n  ];\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-accordion-demo.component.html',\n})"],"modifiers":["export"],"name":"UiAccordionDemoComponent","members":[{"kind":150,"name":"panels","jsDoc":[],"isInternal":false,"initializer":"[\n    {title: 'Panel 1', content: 'Panel 1 content'},\n    {title: 'Panel 2', content: 'Panel 2 content'},\n    {title: 'Panel 3', content: 'Panel 3 content'},\n  ]","text":"panels = [\n    {title: 'Panel 1', content: 'Panel 1 content'},\n    {title: 'Panel 2', content: 'Panel 2 content'},\n    {title: 'Panel 3', content: 'Panel 3 content'},\n  ];","signature":"panels = [\n    {title: 'Panel 1', content: 'Panel 1 content'},\n    {title: 'Panel 2', content: 'Panel 2 content'},\n    {title: 'Panel 3', content: 'Panel 3 content'},\n  ]"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-accordion/demo/ui-accordion-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { UiAccordionModule } from '../ui-accordion.module';\r\nimport { UiAccordionDemoComponent } from './ui-accordion-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiAccordionModule,\r\n  ],\r\n  declarations: [\r\n    UiAccordionDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiAccordionDemoComponent,\r\n  ],\r\n})\r\nexport class UiAccordionDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiAccordionModule,\r\n  ],\r\n  declarations: [\r\n    UiAccordionDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiAccordionDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiAccordionDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-accordion/ui-accordion-content/ui-accordion-content.component.ts","type":"ts","text":"import { animate, style, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectionStrategy, Component, HostBinding, } from '@angular/core';\r\n\r\n/**\r\n * Accordion content holder.\r\n */\r\n@Component({\r\n  selector: 'ui-accordion-content',\r\n  template: `\r\n    <div class=\"content\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./ui-accordion-content.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('collapse', [\r\n      transition(':enter', [\r\n        style({height: 0}),\r\n        animate('200ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({height: '*'})),\r\n      ]),\r\n      transition(':leave', [\r\n        style({height: '*'}),\r\n        animate('200ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({height: 0})),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class UiAccordionContentComponent {\r\n  @HostBinding('@collapse') collapseTrigger = true;\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"comment":"Accordion content holder.","tags":[]}],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-accordion-content',\r\n  template: `\r\n    <div class=\"content\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./ui-accordion-content.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('collapse', [\r\n      transition(':enter', [\r\n        style({height: 0}),\r\n        animate('200ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({height: '*'})),\r\n      ]),\r\n      transition(':leave', [\r\n        style({height: '*'}),\r\n        animate('200ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({height: 0})),\r\n      ]),\r\n    ]),\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiAccordionContentComponent","members":[{"kind":150,"name":"collapseTrigger","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('@collapse')"],"initializer":"true","text":"@HostBinding('@collapse') collapseTrigger = true;","signature":"@HostBinding('@collapse') collapseTrigger = true"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-accordion-content'"}}}]},{"fileName":"lib/ui-accordion/ui-accordion-panel/ui-accordion-panel.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component, } from '@angular/core';\r\nimport { KitCollapseItemService } from '@ngx-kit/core';\r\n\r\n/**\r\n * Accordion panel.\r\n */\r\n@Component({\r\n  selector: 'ui-accordion-panel',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-accordion-panel.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitCollapseItemService,\r\n  ],\r\n})\r\nexport class UiAccordionPanelComponent {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"comment":"Accordion panel.","tags":[]}],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-accordion-panel',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-accordion-panel.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitCollapseItemService,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiAccordionPanelComponent","members":[],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-accordion-panel'"}}}]},{"fileName":"lib/ui-accordion/ui-accordion-title/ui-accordion-title.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component, HostListener, } from '@angular/core';\r\nimport { KitCollapseItemService } from '@ngx-kit/core';\r\n\r\n/**\r\n * Accordion title.\r\n */\r\n@Component({\r\n  selector: 'ui-accordion-title',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-accordion-title.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UiAccordionTitleComponent {\r\n  constructor(private item: KitCollapseItemService) {\r\n  }\r\n\r\n  @HostListener('click')\r\n  clickHandler() {\r\n    this.item.toggle();\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"comment":"Accordion title.","tags":[]}],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-accordion-title',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-accordion-title.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})"],"modifiers":["export"],"name":"UiAccordionTitleComponent","members":[{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private item: KitCollapseItemService"],"text":"constructor(private item: KitCollapseItemService) {\r\n  }","signature":"constructor(private item: KitCollapseItemService)"},{"kind":152,"name":"clickHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('click')"],"parameters":[],"text":"@HostListener('click')\r\n  clickHandler() {\r\n    this.item.toggle();\r\n  }","signature":"@HostListener('click') clickHandler()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-accordion-title'"}}}]},{"fileName":"lib/ui-accordion/ui-accordion.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { KitCollapseModule } from '@ngx-kit/core';\nimport { UiAccordionContentComponent } from './ui-accordion-content/ui-accordion-content.component';\nimport { UiAccordionPanelComponent } from './ui-accordion-panel/ui-accordion-panel.component';\nimport { UiAccordionTitleComponent } from './ui-accordion-title/ui-accordion-title.component';\nimport { UiAccordionComponent } from './ui-accordion/ui-accordion.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    KitCollapseModule,\n  ],\n  declarations: [\n    UiAccordionComponent,\n    UiAccordionPanelComponent,\n    UiAccordionTitleComponent,\n    UiAccordionContentComponent,\n  ],\n  exports: [\n    KitCollapseModule,\n    UiAccordionComponent,\n    UiAccordionPanelComponent,\n    UiAccordionTitleComponent,\n    UiAccordionContentComponent,\n  ],\n})\nexport class UiAccordionModule {\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\n  imports: [\n    CommonModule,\n    KitCollapseModule,\n  ],\n  declarations: [\n    UiAccordionComponent,\n    UiAccordionPanelComponent,\n    UiAccordionTitleComponent,\n    UiAccordionContentComponent,\n  ],\n  exports: [\n    KitCollapseModule,\n    UiAccordionComponent,\n    UiAccordionPanelComponent,\n    UiAccordionTitleComponent,\n    UiAccordionContentComponent,\n  ],\n})"],"modifiers":["export"],"name":"UiAccordionModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\n    KitCollapseModule,\n    UiAccordionComponent,\n    UiAccordionPanelComponent,\n    UiAccordionTitleComponent,\n    UiAccordionContentComponent,\n  ]"}}}]},{"fileName":"lib/ui-accordion/ui-accordion.ts","type":"ts","text":"export * from './ui-accordion/ui-accordion.component';\r\nexport * from './ui-accordion-content/ui-accordion-content.component';\r\nexport * from './ui-accordion-panel/ui-accordion-panel.component';\r\nexport * from './ui-accordion-title/ui-accordion-title.component';\r\nexport * from './ui-accordion.module';\r\n","declars":[]},{"fileName":"lib/ui-accordion/ui-accordion/ui-accordion.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, SimpleChanges, } from '@angular/core';\r\nimport { KitCollapseHostService } from '@ngx-kit/core';\r\n\r\n/**\r\n * Main accordion component.\r\n */\r\n@Component({\r\n  selector: 'ui-accordion',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-accordion.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitCollapseHostService,\r\n  ],\r\n})\r\nexport class UiAccordionComponent implements OnInit, OnChanges {\r\n  /**\r\n   * Automatically open first panel.\r\n   */\r\n  @Input() activateFirst = false;\r\n\r\n  /**\r\n   * Allow few panels open at a time.\r\n   */\r\n  @Input() multiple = false;\r\n\r\n  constructor(private host: KitCollapseHostService) {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['multiple']) {\r\n      this.host.multiple = this.multiple;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.activateFirst) {\r\n      this.host.activateFirst();\r\n    }\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"comment":"Main accordion component.","tags":[]}],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-accordion',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-accordion.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitCollapseHostService,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiAccordionComponent","members":[{"kind":150,"name":"activateFirst","jsDoc":[{"comment":"Automatically open first panel.","tags":[]}],"isInternal":false,"decorators":["@Input()"],"initializer":"false","text":"@Input() activateFirst = false;","signature":"@Input() activateFirst = false"},{"kind":150,"name":"multiple","jsDoc":[{"comment":"Allow few panels open at a time.","tags":[]}],"isInternal":false,"decorators":["@Input()"],"initializer":"false","text":"@Input() multiple = false;","signature":"@Input() multiple = false"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private host: KitCollapseHostService"],"text":"constructor(private host: KitCollapseHostService) {\r\n  }","signature":"constructor(private host: KitCollapseHostService)"},{"kind":152,"name":"ngOnChanges","jsDoc":[],"isInternal":false,"parameters":["changes: SimpleChanges"],"text":"ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['multiple']) {\r\n      this.host.multiple = this.multiple;\r\n    }\r\n  }","signature":"ngOnChanges(changes: SimpleChanges)"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n    if (this.activateFirst) {\r\n      this.host.activateFirst();\r\n    }\r\n  }","signature":"ngOnInit()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-accordion'"}}}]},{"fileName":"lib/ui-alert/demo/ui-alert-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-alert-demo.component.html',\n})\nexport class UiAlertDemoComponent {\n  isOpen = true;\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-alert-demo.component.html',\n})"],"modifiers":["export"],"name":"UiAlertDemoComponent","members":[{"kind":150,"name":"isOpen","jsDoc":[],"isInternal":false,"initializer":"true","text":"isOpen = true;","signature":"isOpen = true"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-alert/demo/ui-alert-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { UiAlertModule } from '../ui-alert.module';\r\nimport { UiAlertDemoComponent } from './ui-alert-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiAlertModule,\r\n  ],\r\n  declarations: [\r\n    UiAlertDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiAlertDemoComponent,\r\n  ],\r\n})\r\nexport class UiAlertDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiAlertModule,\r\n  ],\r\n  declarations: [\r\n    UiAlertDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiAlertDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiAlertDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-alert/ui-alert-title/ui-alert-title.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component, TemplateRef, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ui-alert-title',\r\n  template: `\r\n    <ng-template #content>\r\n      <ng-content></ng-content>\r\n    </ng-template>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UiAlertTitleComponent {\r\n  @ViewChild('content') contentRef: TemplateRef<any>;\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-alert-title',\r\n  template: `\r\n    <ng-template #content>\r\n      <ng-content></ng-content>\r\n    </ng-template>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})"],"modifiers":["export"],"name":"UiAlertTitleComponent","members":[{"kind":150,"name":"contentRef","jsDoc":[],"isInternal":false,"decorators":["@ViewChild('content')"],"type":"TemplateRef<any>","text":"@ViewChild('content') contentRef: TemplateRef<any>;","signature":"@ViewChild('content') contentRef: TemplateRef<any>"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-alert-title'"}}}]},{"fileName":"lib/ui-alert/ui-alert.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { KitClassModule } from '@ngx-kit/core';\r\nimport { UiAlertTitleComponent } from './ui-alert-title/ui-alert-title.component';\r\nimport { UiAlertComponent } from './ui-alert/ui-alert.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitClassModule,\r\n  ],\r\n  declarations: [\r\n    UiAlertComponent,\r\n    UiAlertTitleComponent,\r\n  ],\r\n  exports: [\r\n    UiAlertComponent,\r\n    UiAlertTitleComponent,\r\n  ],\r\n})\r\nexport class UiAlertModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitClassModule,\r\n  ],\r\n  declarations: [\r\n    UiAlertComponent,\r\n    UiAlertTitleComponent,\r\n  ],\r\n  exports: [\r\n    UiAlertComponent,\r\n    UiAlertTitleComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiAlertModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    UiAlertComponent,\r\n    UiAlertTitleComponent,\r\n  ]"}}}]},{"fileName":"lib/ui-alert/ui-alert.ts","type":"ts","text":"export * from './ui-alert/ui-alert.component';\r\nexport * from './ui-alert-title/ui-alert-title.component';\r\nexport * from './ui-alert.module';\r\n","declars":[]},{"fileName":"lib/ui-alert/ui-alert/ui-alert.component.ts","type":"ts","text":"import { animate, animation, style, transition, trigger, useAnimation, } from '@angular/animations';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n} from '@angular/core';\nimport { UiAlertTitleComponent } from '../ui-alert-title/ui-alert-title.component';\n\nconst fadeOut = animation([\n  style({opacity: 1}),\n  animate(250, style({opacity: 0})),\n]);\n\n@Component({\n  selector: 'ui-alert',\n  templateUrl: './ui-alert.component.html',\n  styleUrls: ['./ui-alert.component.scss'],\n  animations: [\n    trigger(\n      'fadeOut', [\n        transition(':leave', useAnimation(fadeOut)),\n      ],\n    ),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UiAlertComponent {\n  /**\n   * Display closing link that hides alert.\n   */\n  @Input() closable: boolean;\n\n  /**\n   * Alert close.\n   */\n  @Output() close = new EventEmitter<null>();\n\n  @Input() color = 'default';\n\n  @Input() isOpen = true;\n\n  /**\n   * Open state changes (including close event).\n   */\n  @Output() isOpenChange = new EventEmitter<boolean>();\n\n  @ContentChild(forwardRef(() => UiAlertTitleComponent)) title: UiAlertTitleComponent;\n\n  closeAlert() {\n    this.isOpen = false;\n    this.close.next(null);\n    this.isOpenChange.next(false);\n  }\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\n  selector: 'ui-alert',\n  templateUrl: './ui-alert.component.html',\n  styleUrls: ['./ui-alert.component.scss'],\n  animations: [\n    trigger(\n      'fadeOut', [\n        transition(':leave', useAnimation(fadeOut)),\n      ],\n    ),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})"],"modifiers":["export"],"name":"UiAlertComponent","members":[{"kind":150,"name":"closable","jsDoc":[{"comment":"Display closing link that hides alert.","tags":[]}],"isInternal":false,"decorators":["@Input()"],"type":"boolean","text":"@Input() closable: boolean;","signature":"@Input() closable: boolean"},{"kind":150,"name":"close","jsDoc":[{"comment":"Alert close.","tags":[]}],"isInternal":false,"decorators":["@Output()"],"initializer":"new EventEmitter<null>()","text":"@Output() close = new EventEmitter<null>();","signature":"@Output() close = new EventEmitter<null>()"},{"kind":150,"name":"color","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"initializer":"'default'","text":"@Input() color = 'default';","signature":"@Input() color = 'default'"},{"kind":150,"name":"isOpen","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"initializer":"true","text":"@Input() isOpen = true;","signature":"@Input() isOpen = true"},{"kind":150,"name":"isOpenChange","jsDoc":[{"comment":"Open state changes (including close event).","tags":[]}],"isInternal":false,"decorators":["@Output()"],"initializer":"new EventEmitter<boolean>()","text":"@Output() isOpenChange = new EventEmitter<boolean>();","signature":"@Output() isOpenChange = new EventEmitter<boolean>()"},{"kind":150,"name":"title","jsDoc":[],"isInternal":false,"decorators":["@ContentChild(forwardRef(() => UiAlertTitleComponent))"],"type":"UiAlertTitleComponent","text":"@ContentChild(forwardRef(() => UiAlertTitleComponent)) title: UiAlertTitleComponent;","signature":"@ContentChild(forwardRef(() => UiAlertTitleComponent)) title: UiAlertTitleComponent"},{"kind":152,"name":"closeAlert","jsDoc":[],"isInternal":false,"parameters":[],"text":"closeAlert() {\n    this.isOpen = false;\n    this.close.next(null);\n    this.isOpenChange.next(false);\n  }","signature":"closeAlert()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-alert'"}}}]},{"fileName":"lib/ui-autocomplete/demo/ui-autocomplete-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\nimport { UiAutocompleteOptionObject } from '../meta';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-autocomplete-demo.component.html',\n})\nexport class UiAutocompleteDemoComponent {\n  value1: string;\n\n  value2: string;\n\n  value3: string;\n\n  value4: string;\n\n  value5: string;\n\n  value6: string;\n\n  options: string[];\n\n  data: string[] = [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December',\n  ];\n\n  objOptions: UiAutocompleteOptionObject[];\n\n  objData: UiAutocompleteOptionObject[] = [\n    {value: '2018/01', label: 'January'},\n    {value: '2018/02', label: 'February'},\n    {value: '2018/03', label: 'March'},\n    {value: '2018/04', label: 'April'},\n    {value: '2018/05', label: 'May'},\n    {value: '2018/06', label: 'June'},\n    {value: '2018/07', label: 'July'},\n    {value: '2018/08', label: 'August'},\n    {value: '2018/09', label: 'September'},\n    {value: '2018/10', label: 'October'},\n    {value: '2018/11', label: 'November'},\n    {value: '2018/12', label: 'December'},\n  ];\n\n  searchOptions(query: string) {\n    this.options = query\n      ? this.data.filter(d => d.toLocaleLowerCase().indexOf(query.toLocaleLowerCase().trim()) !== -1)\n      : [];\n  }\n\n  searchObjOptions(query: string) {\n    this.objOptions = query\n      ? this.objData.filter(d => d.label.toLocaleLowerCase().indexOf(query.toLocaleLowerCase().trim()) !== -1)\n      : [];\n  }\n\n  searchFocusOptions(query: string) {\n    this.options = query\n      ? this.data.filter(d => d.toLocaleLowerCase().indexOf(query.toLocaleLowerCase().trim()) !== -1)\n      : [...this.data];\n  }\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-autocomplete-demo.component.html',\n})"],"modifiers":["export"],"name":"UiAutocompleteDemoComponent","members":[{"kind":150,"name":"value1","jsDoc":[],"isInternal":false,"type":"string","text":"value1: string;","signature":"value1: string"},{"kind":150,"name":"value2","jsDoc":[],"isInternal":false,"type":"string","text":"value2: string;","signature":"value2: string"},{"kind":150,"name":"value3","jsDoc":[],"isInternal":false,"type":"string","text":"value3: string;","signature":"value3: string"},{"kind":150,"name":"value4","jsDoc":[],"isInternal":false,"type":"string","text":"value4: string;","signature":"value4: string"},{"kind":150,"name":"value5","jsDoc":[],"isInternal":false,"type":"string","text":"value5: string;","signature":"value5: string"},{"kind":150,"name":"value6","jsDoc":[],"isInternal":false,"type":"string","text":"value6: string;","signature":"value6: string"},{"kind":150,"name":"options","jsDoc":[],"isInternal":false,"type":"string[]","text":"options: string[];","signature":"options: string[]"},{"kind":150,"name":"data","jsDoc":[],"isInternal":false,"type":"string[]","initializer":"[\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December',\n  ]","text":"data: string[] = [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December',\n  ];","signature":"data: string[] = [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December',\n  ]"},{"kind":150,"name":"objOptions","jsDoc":[],"isInternal":false,"type":"UiAutocompleteOptionObject[]","text":"objOptions: UiAutocompleteOptionObject[];","signature":"objOptions: UiAutocompleteOptionObject[]"},{"kind":150,"name":"objData","jsDoc":[],"isInternal":false,"type":"UiAutocompleteOptionObject[]","initializer":"[\n    {value: '2018/01', label: 'January'},\n    {value: '2018/02', label: 'February'},\n    {value: '2018/03', label: 'March'},\n    {value: '2018/04', label: 'April'},\n    {value: '2018/05', label: 'May'},\n    {value: '2018/06', label: 'June'},\n    {value: '2018/07', label: 'July'},\n    {value: '2018/08', label: 'August'},\n    {value: '2018/09', label: 'September'},\n    {value: '2018/10', label: 'October'},\n    {value: '2018/11', label: 'November'},\n    {value: '2018/12', label: 'December'},\n  ]","text":"objData: UiAutocompleteOptionObject[] = [\n    {value: '2018/01', label: 'January'},\n    {value: '2018/02', label: 'February'},\n    {value: '2018/03', label: 'March'},\n    {value: '2018/04', label: 'April'},\n    {value: '2018/05', label: 'May'},\n    {value: '2018/06', label: 'June'},\n    {value: '2018/07', label: 'July'},\n    {value: '2018/08', label: 'August'},\n    {value: '2018/09', label: 'September'},\n    {value: '2018/10', label: 'October'},\n    {value: '2018/11', label: 'November'},\n    {value: '2018/12', label: 'December'},\n  ];","signature":"objData: UiAutocompleteOptionObject[] = [\n    {value: '2018/01', label: 'January'},\n    {value: '2018/02', label: 'February'},\n    {value: '2018/03', label: 'March'},\n    {value: '2018/04', label: 'April'},\n    {value: '2018/05', label: 'May'},\n    {value: '2018/06', label: 'June'},\n    {value: '2018/07', label: 'July'},\n    {value: '2018/08', label: 'August'},\n    {value: '2018/09', label: 'September'},\n    {value: '2018/10', label: 'October'},\n    {value: '2018/11', label: 'November'},\n    {value: '2018/12', label: 'December'},\n  ]"},{"kind":152,"name":"searchOptions","jsDoc":[],"isInternal":false,"parameters":["query: string"],"text":"searchOptions(query: string) {\n    this.options = query\n      ? this.data.filter(d => d.toLocaleLowerCase().indexOf(query.toLocaleLowerCase().trim()) !== -1)\n      : [];\n  }","signature":"searchOptions(query: string)"},{"kind":152,"name":"searchObjOptions","jsDoc":[],"isInternal":false,"parameters":["query: string"],"text":"searchObjOptions(query: string) {\n    this.objOptions = query\n      ? this.objData.filter(d => d.label.toLocaleLowerCase().indexOf(query.toLocaleLowerCase().trim()) !== -1)\n      : [];\n  }","signature":"searchObjOptions(query: string)"},{"kind":152,"name":"searchFocusOptions","jsDoc":[],"isInternal":false,"parameters":["query: string"],"text":"searchFocusOptions(query: string) {\n    this.options = query\n      ? this.data.filter(d => d.toLocaleLowerCase().indexOf(query.toLocaleLowerCase().trim()) !== -1)\n      : [...this.data];\n  }","signature":"searchFocusOptions(query: string)"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-autocomplete/demo/ui-autocomplete-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { UiAutocompleteModule } from '../ui-autocomplete.module';\r\nimport { UiAutocompleteDemoComponent } from './ui-autocomplete-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiAutocompleteModule,\r\n  ],\r\n  declarations: [\r\n    UiAutocompleteDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiAutocompleteDemoComponent,\r\n  ],\r\n})\r\nexport class UiAutocompleteDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiAutocompleteModule,\r\n  ],\r\n  declarations: [\r\n    UiAutocompleteDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiAutocompleteDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiAutocompleteDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-autocomplete/meta.ts","type":"ts","text":"export type UiAutocompleteOption = string | UiAutocompleteOptionObject;\r\n\r\nexport interface UiAutocompleteOptionObject {\r\n  value: any;\r\n  label: string;\r\n}\r\n","declars":[{"kind":232,"kindString":"typeAlias","jsDoc":[],"isInternal":false,"name":"UiAutocompleteOption","type":"string | UiAutocompleteOptionObject","text":"export type UiAutocompleteOption = string | UiAutocompleteOptionObject;"},{"kind":231,"kindString":"interface","jsDoc":[],"isInternal":false,"name":"UiAutocompleteOptionObject","members":[{"kind":149,"jsDoc":[],"isInternal":false,"name":"value","type":"any","text":"value: any;","signature":"value(): any"},{"kind":149,"jsDoc":[],"isInternal":false,"name":"label","type":"string","text":"label: string;","signature":"label(): string"}]}]},{"fileName":"lib/ui-autocomplete/ui-autocomplete-options/ui-autocomplete-options.component.ts","type":"ts","text":"import { animate, animateChild, query, style, transition, trigger } from '@angular/animations';\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { isString, KitFocusListenerService } from '@ngx-kit/core';\r\nimport { UiAutocompleteOption } from '../meta';\r\n\r\n@Component({\r\n  selector: 'ui-autocomplete-options',\r\n  templateUrl: './ui-autocomplete-options.component.html',\r\n  styleUrls: ['./ui-autocomplete-options.component.scss'],\r\n  animations: [\r\n    trigger('host', [\r\n      transition(':enter, :leave', [\r\n        query('@*', animateChild(), {optional: true}),\r\n      ]),\r\n    ]),\r\n    trigger('fade', [\r\n      transition(':enter', [\r\n        style({\r\n          opacity: 0,\r\n          transform: 'scaleY(0.5)',\r\n        }),\r\n        animate('150ms ease-out', style({\r\n          opacity: 1,\r\n          transform: 'scaleY(1)',\r\n        })),\r\n      ]),\r\n      transition(':leave', [\r\n        style({opacity: 1}),\r\n        animate('150ms ease-in', style({\r\n          opacity: 0,\r\n          transform: 'scaleY(0.5)',\r\n        })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class UiAutocompleteOptionsComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() anchor: HTMLElement;\r\n\r\n  @Input() options: UiAutocompleteOption[] = [];\r\n\r\n  @Input() selected: number;\r\n\r\n  @Input() optionTemplate: TemplateRef<any>;\r\n\r\n  @Output() select = new EventEmitter<any>();\r\n\r\n  @HostBinding('@host') hostTrigger = true;\r\n\r\n  optionsLabels: string[] = [];\r\n\r\n  constructor(\r\n    private elRef: ElementRef,\r\n    private focusListener: KitFocusListenerService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Register in blur service\r\n    this.focusListener.add(this.elRef.nativeElement);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if ('options' in changes) {\r\n      this.optionsLabels = this.options.map(o => isString(o) ? o : o.label);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.focusListener.remove(this.elRef.nativeElement);\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-autocomplete-options',\r\n  templateUrl: './ui-autocomplete-options.component.html',\r\n  styleUrls: ['./ui-autocomplete-options.component.scss'],\r\n  animations: [\r\n    trigger('host', [\r\n      transition(':enter, :leave', [\r\n        query('@*', animateChild(), {optional: true}),\r\n      ]),\r\n    ]),\r\n    trigger('fade', [\r\n      transition(':enter', [\r\n        style({\r\n          opacity: 0,\r\n          transform: 'scaleY(0.5)',\r\n        }),\r\n        animate('150ms ease-out', style({\r\n          opacity: 1,\r\n          transform: 'scaleY(1)',\r\n        })),\r\n      ]),\r\n      transition(':leave', [\r\n        style({opacity: 1}),\r\n        animate('150ms ease-in', style({\r\n          opacity: 0,\r\n          transform: 'scaleY(0.5)',\r\n        })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiAutocompleteOptionsComponent","members":[{"kind":150,"name":"anchor","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"HTMLElement","text":"@Input() anchor: HTMLElement;","signature":"@Input() anchor: HTMLElement"},{"kind":150,"name":"options","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"UiAutocompleteOption[]","initializer":"[]","text":"@Input() options: UiAutocompleteOption[] = [];","signature":"@Input() options: UiAutocompleteOption[] = []"},{"kind":150,"name":"selected","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"number","text":"@Input() selected: number;","signature":"@Input() selected: number"},{"kind":150,"name":"optionTemplate","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"TemplateRef<any>","text":"@Input() optionTemplate: TemplateRef<any>;","signature":"@Input() optionTemplate: TemplateRef<any>"},{"kind":150,"name":"select","jsDoc":[],"isInternal":false,"decorators":["@Output()"],"initializer":"new EventEmitter<any>()","text":"@Output() select = new EventEmitter<any>();","signature":"@Output() select = new EventEmitter<any>()"},{"kind":150,"name":"hostTrigger","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('@host')"],"initializer":"true","text":"@HostBinding('@host') hostTrigger = true;","signature":"@HostBinding('@host') hostTrigger = true"},{"kind":150,"name":"optionsLabels","jsDoc":[],"isInternal":false,"type":"string[]","initializer":"[]","text":"optionsLabels: string[] = [];","signature":"optionsLabels: string[] = []"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private elRef: ElementRef","private focusListener: KitFocusListenerService"],"text":"constructor(\r\n    private elRef: ElementRef,\r\n    private focusListener: KitFocusListenerService,\r\n  ) {\r\n  }","signature":"constructor(private elRef: ElementRef, private focusListener: KitFocusListenerService)"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n    // Register in blur service\r\n    this.focusListener.add(this.elRef.nativeElement);\r\n  }","signature":"ngOnInit()"},{"kind":152,"name":"ngOnChanges","jsDoc":[],"isInternal":false,"parameters":["changes: SimpleChanges"],"text":"ngOnChanges(changes: SimpleChanges) {\r\n    if ('options' in changes) {\r\n      this.optionsLabels = this.options.map(o => isString(o) ? o : o.label);\r\n    }\r\n  }","signature":"ngOnChanges(changes: SimpleChanges)"},{"kind":152,"name":"ngOnDestroy","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnDestroy() {\r\n    this.focusListener.remove(this.elRef.nativeElement);\r\n  }","signature":"ngOnDestroy()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-autocomplete-options'"}}}]},{"fileName":"lib/ui-autocomplete/ui-autocomplete.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { KitOverlayService, KitPositionModule, KitValueAccessorModule } from '@ngx-kit/core';\r\nimport { UiAutocompleteOptionsComponent } from './ui-autocomplete-options/ui-autocomplete-options.component';\r\nimport { UiAutocompleteDirective } from './ui-autocomplete/ui-autocomplete.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitPositionModule,\r\n  ],\r\n  declarations: [\r\n    UiAutocompleteDirective,\r\n    UiAutocompleteOptionsComponent,\r\n  ],\r\n  exports: [\r\n    UiAutocompleteDirective,\r\n    KitValueAccessorModule,\r\n  ],\r\n  entryComponents: [\r\n    UiAutocompleteOptionsComponent,\r\n  ],\r\n  providers: [\r\n    KitOverlayService,\r\n  ],\r\n})\r\nexport class UiAutocompleteModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitPositionModule,\r\n  ],\r\n  declarations: [\r\n    UiAutocompleteDirective,\r\n    UiAutocompleteOptionsComponent,\r\n  ],\r\n  exports: [\r\n    UiAutocompleteDirective,\r\n    KitValueAccessorModule,\r\n  ],\r\n  entryComponents: [\r\n    UiAutocompleteOptionsComponent,\r\n  ],\r\n  providers: [\r\n    KitOverlayService,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiAutocompleteModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    UiAutocompleteDirective,\r\n    KitValueAccessorModule,\r\n  ]","providers":"[\r\n    KitOverlayService,\r\n  ]"}}}]},{"fileName":"lib/ui-autocomplete/ui-autocomplete.ts","type":"ts","text":"export * from './ui-autocomplete/ui-autocomplete.directive';\r\nexport * from './ui-autocomplete.module';\r\nexport * from './meta';\r\n","declars":[]},{"fileName":"lib/ui-autocomplete/ui-autocomplete/ui-autocomplete.directive.ts","type":"ts","text":"import {\r\n  ChangeDetectorRef,\r\n  ComponentFactoryResolver,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  HostBinding,\r\n  HostListener,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport {\r\n  isString,\r\n  isUndefined,\r\n  KitFocusListenerService,\r\n  KitModelInterceptor,\r\n  KitOverlayComponentRef,\r\n  KitOverlayService,\r\n} from '@ngx-kit/core';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, filter, take, takeUntil } from 'rxjs/operators';\r\nimport { UiAutocompleteOption } from '../meta';\r\nimport { UiAutocompleteOptionsComponent } from '../ui-autocomplete-options/ui-autocomplete-options.component';\r\n\r\n@Directive({\r\n  selector: '[uiAutocomplete]',\r\n  exportAs: 'uiAutocomplete',\r\n  providers: [\r\n    {\r\n      provide: KitModelInterceptor,\r\n      useExisting: forwardRef(() => UiAutocompleteDirective),\r\n    },\r\n    KitFocusListenerService,\r\n  ],\r\n})\r\nexport class UiAutocompleteDirective implements KitModelInterceptor, OnInit, OnChanges, OnDestroy {\r\n  @Input() uiAutocomplete: void;\r\n\r\n  /**\r\n   * Array of options to suggest.\r\n   */\r\n  @Input() options: UiAutocompleteOption[];\r\n\r\n  /**\r\n   * `ngModel` will be updated only after option submit.\r\n   */\r\n  @Input() selectMode = false;\r\n\r\n  /**\r\n   * Emit `(search)` with current value on focus.\r\n   */\r\n  @Input() emitSearchOnFocus = false;\r\n\r\n  /**\r\n   * Delay for `(search)` output in milliseconds.\r\n   */\r\n  @Input() debounce = 0;\r\n\r\n  /**\r\n   * Custom option template.\r\n   */\r\n  @Input() optionTemplate: TemplateRef<any>;\r\n\r\n  /**\r\n   * Emits when user input a value.\r\n   */\r\n  @Output() search = new EventEmitter<string>();\r\n\r\n  /**\r\n   * Emits when user select an option.\r\n   */\r\n  @Output() select = new EventEmitter<UiAutocompleteOption>();\r\n\r\n  @HostBinding('attr.autocomplete') autocompleteBinding = 'off';\r\n\r\n  readonly viewStateChanges = new Subject<string>();\r\n\r\n  readonly modelStateChanges = new Subject<any>();\r\n\r\n  private optionsRef: KitOverlayComponentRef<UiAutocompleteOptionsComponent> | null;\r\n\r\n  private selectedOption: number;\r\n\r\n  private inputs = new Subject<string>();\r\n\r\n  private changed = false;\r\n\r\n  private focused = false;\r\n\r\n  private viewState: string;\r\n\r\n  private modelState: any;\r\n\r\n  private destroy = new Subject<void>();\r\n\r\n  constructor(\r\n    private overlay: KitOverlayService,\r\n    private elRef: ElementRef,\r\n    private cfr: ComponentFactoryResolver,\r\n    private cdr: ChangeDetectorRef,\r\n    private vcr: ViewContainerRef,\r\n    private focusListener: KitFocusListenerService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Register in blur service\r\n    this.focusListener.add(this.elRef.nativeElement);\r\n    // Handle blur (the service helps to track focus of options list)\r\n    this.focusListener.blur\r\n      .pipe(takeUntil(this.destroy))\r\n      .subscribe(() => {\r\n        this.focused = false;\r\n        // Update state if no options has been selected\r\n        if (this.changed && this.selectMode) {\r\n          if (this.modelState && this.viewState) {\r\n            // If field not clear, restore initial value\r\n            this.checkViewState();\r\n          } else {\r\n            // Clean up states\r\n            this.viewState = '';\r\n            this.modelState = null;\r\n            this.viewStateChanges.next(this.viewState);\r\n            this.modelStateChanges.next(this.modelState);\r\n          }\r\n        }\r\n        // Hide options\r\n        if (this.optionsRef) {\r\n          this.optionsRef.componentRef.destroy();\r\n        }\r\n        // Reset changed mark\r\n        this.changed = false;\r\n      });\r\n    // `(search)` output emitter.\r\n    this.inputs\r\n      .pipe(\r\n        debounceTime(this.debounce),\r\n        filter(() => this.focused),\r\n      )\r\n      .subscribe((value: string) => {\r\n        this.search.emit(value);\r\n      });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if ('options' in changes) {\r\n      if (!this.changed) {\r\n        this.checkViewState();\r\n      }\r\n      this.checkOptionsPopup();\r\n      this.passOptions();\r\n    }\r\n    if ('optionTemplate' in changes) {\r\n      if (this.optionsRef) {\r\n        this.optionsRef.input({\r\n          optionTemplate: this.optionTemplate,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy.next();\r\n  }\r\n\r\n  @HostListener('keydown.arrowdown', ['$event']) arrowdownHandler(event: any) {\r\n    if (this.optionsRef) {\r\n      event.preventDefault();\r\n      if (this.selectedOption < this.options.length - 1) {\r\n        this.selectedOption++;\r\n        this.optionsRef.input({selected: this.selectedOption});\r\n      }\r\n    }\r\n  }\r\n\r\n  @HostListener('keydown.arrowup', ['$event']) arrowupHandler(event: any) {\r\n    if (this.optionsRef) {\r\n      event.preventDefault();\r\n      if (this.selectedOption > 0) {\r\n        this.selectedOption--;\r\n        this.optionsRef.input({selected: this.selectedOption});\r\n      }\r\n    }\r\n  }\r\n\r\n  @HostListener('keydown.enter', ['$event']) enterHandler(event: any) {\r\n    if (this.optionsRef) {\r\n      event.preventDefault();\r\n      if (this.options && !isUndefined(this.options[this.selectedOption])) {\r\n        this.selectOption(this.selectedOption);\r\n      }\r\n    }\r\n  }\r\n\r\n  @HostListener('keydown.esc') escHandler() {\r\n    if (this.optionsRef) {\r\n      this.optionsRef.componentRef.destroy();\r\n    }\r\n  }\r\n\r\n  @HostListener('focus') focusHandler() {\r\n    this.focused = true;\r\n    if (this.emitSearchOnFocus) {\r\n      this.changed = true;\r\n      this.search.emit(this.viewState);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle input changing by user.\r\n   */\r\n  input(value: string, event: any) {\r\n    this.inputs.next(value);\r\n    this.changed = true;\r\n    this.viewState = value;\r\n    if (!this.selectMode) {\r\n      this.modelState = value;\r\n      this.modelStateChanges.next(value);\r\n    }\r\n  }\r\n\r\n  keyDown(event: any) {\r\n  }\r\n\r\n  /**\r\n   * Handle external modal changing.\r\n   */\r\n  writeValue(value: any) {\r\n    this.modelState = value;\r\n    this.checkViewState();\r\n  }\r\n\r\n  private selectOption(index: number) {\r\n    const option = this.options[index];\r\n    this.viewState = isString(option) ? option : option.label;\r\n    this.modelState = isString(option) ? option : option.value;\r\n    this.viewStateChanges.next(this.viewState);\r\n    this.modelStateChanges.next(this.modelState);\r\n    this.select.emit(option);\r\n    this.changed = false;\r\n    // close options popup\r\n    if (this.optionsRef) {\r\n      this.optionsRef.componentRef.destroy();\r\n    }\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  private checkViewState() {\r\n    // request options for correct label displaying\r\n    const option = this.options && this.options.length > 0\r\n      ? this.options.find(o => isString(o) ? o === this.modelState : o.value === this.modelState)\r\n      : null;\r\n    this.viewState = option ? isString(option) ? option : option.label : this.viewState;\r\n    this.viewStateChanges.next(this.viewState);\r\n  }\r\n\r\n  private checkOptionsPopup() {\r\n    if (this.optionsRef) {\r\n      // check if need to hide\r\n      if (!this.changed || (!this.options || this.options.length === 0)) {\r\n        this.optionsRef.componentRef.destroy();\r\n      }\r\n    } else {\r\n      // check if need to show\r\n      if (this.changed && this.options && this.options.length > 0) {\r\n        this.showOptions();\r\n      }\r\n    }\r\n  }\r\n\r\n  private showOptions() {\r\n    if (!this.optionsRef) {\r\n      this.optionsRef = this.overlay.hostComponent({\r\n        component: UiAutocompleteOptionsComponent,\r\n        viewContainerRef: this.vcr,\r\n      });\r\n      if (this.optionsRef) {\r\n        this.optionsRef.input({anchor: this.elRef.nativeElement});\r\n        // handle destroy\r\n        this.optionsRef.componentRef.onDestroy(() => {\r\n          this.optionsRef = null;\r\n        });\r\n        // handle select\r\n        this.optionsRef.componentRef.instance.select\r\n          .pipe(take(1))\r\n          .subscribe(index => {\r\n            this.selectOption(index);\r\n          });\r\n        this.passOptions();\r\n      }\r\n    }\r\n  }\r\n\r\n  private passOptions() {\r\n    if (this.optionsRef) {\r\n      this.optionsRef.input({\r\n        options: this.options,\r\n        selected: this.selectedOption = 0,\r\n        optionTemplate: this.optionTemplate,\r\n      });\r\n    }\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Directive({\r\n  selector: '[uiAutocomplete]',\r\n  exportAs: 'uiAutocomplete',\r\n  providers: [\r\n    {\r\n      provide: KitModelInterceptor,\r\n      useExisting: forwardRef(() => UiAutocompleteDirective),\r\n    },\r\n    KitFocusListenerService,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiAutocompleteDirective","members":[{"kind":150,"name":"uiAutocomplete","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"void","text":"@Input() uiAutocomplete: void;","signature":"@Input() uiAutocomplete: void"},{"kind":150,"name":"options","jsDoc":[{"comment":"Array of options to suggest.","tags":[]}],"isInternal":false,"decorators":["@Input()"],"type":"UiAutocompleteOption[]","text":"@Input() options: UiAutocompleteOption[];","signature":"@Input() options: UiAutocompleteOption[]"},{"kind":150,"name":"selectMode","jsDoc":[{"comment":"`ngModel` will be updated only after option submit.","tags":[]}],"isInternal":false,"decorators":["@Input()"],"initializer":"false","text":"@Input() selectMode = false;","signature":"@Input() selectMode = false"},{"kind":150,"name":"emitSearchOnFocus","jsDoc":[{"comment":"Emit `(search)` with current value on focus.","tags":[]}],"isInternal":false,"decorators":["@Input()"],"initializer":"false","text":"@Input() emitSearchOnFocus = false;","signature":"@Input() emitSearchOnFocus = false"},{"kind":150,"name":"debounce","jsDoc":[{"comment":"Delay for `(search)` output in milliseconds.","tags":[]}],"isInternal":false,"decorators":["@Input()"],"initializer":"0","text":"@Input() debounce = 0;","signature":"@Input() debounce = 0"},{"kind":150,"name":"optionTemplate","jsDoc":[{"comment":"Custom option template.","tags":[]}],"isInternal":false,"decorators":["@Input()"],"type":"TemplateRef<any>","text":"@Input() optionTemplate: TemplateRef<any>;","signature":"@Input() optionTemplate: TemplateRef<any>"},{"kind":150,"name":"search","jsDoc":[{"comment":"Emits when user input a value.","tags":[]}],"isInternal":false,"decorators":["@Output()"],"initializer":"new EventEmitter<string>()","text":"@Output() search = new EventEmitter<string>();","signature":"@Output() search = new EventEmitter<string>()"},{"kind":150,"name":"select","jsDoc":[{"comment":"Emits when user select an option.","tags":[]}],"isInternal":false,"decorators":["@Output()"],"initializer":"new EventEmitter<UiAutocompleteOption>()","text":"@Output() select = new EventEmitter<UiAutocompleteOption>();","signature":"@Output() select = new EventEmitter<UiAutocompleteOption>()"},{"kind":150,"name":"autocompleteBinding","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('attr.autocomplete')"],"initializer":"'off'","text":"@HostBinding('attr.autocomplete') autocompleteBinding = 'off';","signature":"@HostBinding('attr.autocomplete') autocompleteBinding = 'off'"},{"kind":150,"name":"viewStateChanges","jsDoc":[],"isInternal":false,"modifiers":["readonly"],"initializer":"new Subject<string>()","text":"readonly viewStateChanges = new Subject<string>();","signature":"readonly viewStateChanges = new Subject<string>()"},{"kind":150,"name":"modelStateChanges","jsDoc":[],"isInternal":false,"modifiers":["readonly"],"initializer":"new Subject<any>()","text":"readonly modelStateChanges = new Subject<any>();","signature":"readonly modelStateChanges = new Subject<any>()"},{"kind":150,"name":"optionsRef","jsDoc":[],"isInternal":false,"modifiers":["private"],"type":"KitOverlayComponentRef<UiAutocompleteOptionsComponent> | null","text":"private optionsRef: KitOverlayComponentRef<UiAutocompleteOptionsComponent> | null;","signature":"private optionsRef: KitOverlayComponentRef<UiAutocompleteOptionsComponent> | null"},{"kind":150,"name":"selectedOption","jsDoc":[],"isInternal":false,"modifiers":["private"],"type":"number","text":"private selectedOption: number;","signature":"private selectedOption: number"},{"kind":150,"name":"inputs","jsDoc":[],"isInternal":false,"modifiers":["private"],"initializer":"new Subject<string>()","text":"private inputs = new Subject<string>();","signature":"private inputs = new Subject<string>()"},{"kind":150,"name":"changed","jsDoc":[],"isInternal":false,"modifiers":["private"],"initializer":"false","text":"private changed = false;","signature":"private changed = false"},{"kind":150,"name":"focused","jsDoc":[],"isInternal":false,"modifiers":["private"],"initializer":"false","text":"private focused = false;","signature":"private focused = false"},{"kind":150,"name":"viewState","jsDoc":[],"isInternal":false,"modifiers":["private"],"type":"string","text":"private viewState: string;","signature":"private viewState: string"},{"kind":150,"name":"modelState","jsDoc":[],"isInternal":false,"modifiers":["private"],"type":"any","text":"private modelState: any;","signature":"private modelState: any"},{"kind":150,"name":"destroy","jsDoc":[],"isInternal":false,"modifiers":["private"],"initializer":"new Subject<void>()","text":"private destroy = new Subject<void>();","signature":"private destroy = new Subject<void>()"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private overlay: KitOverlayService","private elRef: ElementRef","private cfr: ComponentFactoryResolver","private cdr: ChangeDetectorRef","private vcr: ViewContainerRef","private focusListener: KitFocusListenerService"],"text":"constructor(\r\n    private overlay: KitOverlayService,\r\n    private elRef: ElementRef,\r\n    private cfr: ComponentFactoryResolver,\r\n    private cdr: ChangeDetectorRef,\r\n    private vcr: ViewContainerRef,\r\n    private focusListener: KitFocusListenerService,\r\n  ) {\r\n  }","signature":"constructor(private overlay: KitOverlayService, private elRef: ElementRef, private cfr: ComponentFactoryResolver, private cdr: ChangeDetectorRef, private vcr: ViewContainerRef, private focusListener: KitFocusListenerService)"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n    // Register in blur service\r\n    this.focusListener.add(this.elRef.nativeElement);\r\n    // Handle blur (the service helps to track focus of options list)\r\n    this.focusListener.blur\r\n      .pipe(takeUntil(this.destroy))\r\n      .subscribe(() => {\r\n        this.focused = false;\r\n        // Update state if no options has been selected\r\n        if (this.changed && this.selectMode) {\r\n          if (this.modelState && this.viewState) {\r\n            // If field not clear, restore initial value\r\n            this.checkViewState();\r\n          } else {\r\n            // Clean up states\r\n            this.viewState = '';\r\n            this.modelState = null;\r\n            this.viewStateChanges.next(this.viewState);\r\n            this.modelStateChanges.next(this.modelState);\r\n          }\r\n        }\r\n        // Hide options\r\n        if (this.optionsRef) {\r\n          this.optionsRef.componentRef.destroy();\r\n        }\r\n        // Reset changed mark\r\n        this.changed = false;\r\n      });\r\n    // `(search)` output emitter.\r\n    this.inputs\r\n      .pipe(\r\n        debounceTime(this.debounce),\r\n        filter(() => this.focused),\r\n      )\r\n      .subscribe((value: string) => {\r\n        this.search.emit(value);\r\n      });\r\n  }","signature":"ngOnInit()"},{"kind":152,"name":"ngOnChanges","jsDoc":[],"isInternal":false,"parameters":["changes: SimpleChanges"],"text":"ngOnChanges(changes: SimpleChanges) {\r\n    if ('options' in changes) {\r\n      if (!this.changed) {\r\n        this.checkViewState();\r\n      }\r\n      this.checkOptionsPopup();\r\n      this.passOptions();\r\n    }\r\n    if ('optionTemplate' in changes) {\r\n      if (this.optionsRef) {\r\n        this.optionsRef.input({\r\n          optionTemplate: this.optionTemplate,\r\n        });\r\n      }\r\n    }\r\n  }","signature":"ngOnChanges(changes: SimpleChanges)"},{"kind":152,"name":"ngOnDestroy","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnDestroy() {\r\n    this.destroy.next();\r\n  }","signature":"ngOnDestroy()"},{"kind":152,"name":"arrowdownHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('keydown.arrowdown', ['$event'])"],"parameters":["event: any"],"text":"@HostListener('keydown.arrowdown', ['$event']) arrowdownHandler(event: any) {\r\n    if (this.optionsRef) {\r\n      event.preventDefault();\r\n      if (this.selectedOption < this.options.length - 1) {\r\n        this.selectedOption++;\r\n        this.optionsRef.input({selected: this.selectedOption});\r\n      }\r\n    }\r\n  }","signature":"@HostListener('keydown.arrowdown', ['$event']) arrowdownHandler(event: any)"},{"kind":152,"name":"arrowupHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('keydown.arrowup', ['$event'])"],"parameters":["event: any"],"text":"@HostListener('keydown.arrowup', ['$event']) arrowupHandler(event: any) {\r\n    if (this.optionsRef) {\r\n      event.preventDefault();\r\n      if (this.selectedOption > 0) {\r\n        this.selectedOption--;\r\n        this.optionsRef.input({selected: this.selectedOption});\r\n      }\r\n    }\r\n  }","signature":"@HostListener('keydown.arrowup', ['$event']) arrowupHandler(event: any)"},{"kind":152,"name":"enterHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('keydown.enter', ['$event'])"],"parameters":["event: any"],"text":"@HostListener('keydown.enter', ['$event']) enterHandler(event: any) {\r\n    if (this.optionsRef) {\r\n      event.preventDefault();\r\n      if (this.options && !isUndefined(this.options[this.selectedOption])) {\r\n        this.selectOption(this.selectedOption);\r\n      }\r\n    }\r\n  }","signature":"@HostListener('keydown.enter', ['$event']) enterHandler(event: any)"},{"kind":152,"name":"escHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('keydown.esc')"],"parameters":[],"text":"@HostListener('keydown.esc') escHandler() {\r\n    if (this.optionsRef) {\r\n      this.optionsRef.componentRef.destroy();\r\n    }\r\n  }","signature":"@HostListener('keydown.esc') escHandler()"},{"kind":152,"name":"focusHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('focus')"],"parameters":[],"text":"@HostListener('focus') focusHandler() {\r\n    this.focused = true;\r\n    if (this.emitSearchOnFocus) {\r\n      this.changed = true;\r\n      this.search.emit(this.viewState);\r\n    }\r\n  }","signature":"@HostListener('focus') focusHandler()"},{"kind":152,"name":"input","jsDoc":[{"comment":"Handle input changing by user.","tags":[]}],"isInternal":false,"parameters":["value: string","event: any"],"text":"input(value: string, event: any) {\r\n    this.inputs.next(value);\r\n    this.changed = true;\r\n    this.viewState = value;\r\n    if (!this.selectMode) {\r\n      this.modelState = value;\r\n      this.modelStateChanges.next(value);\r\n    }\r\n  }","signature":"input(value: string, event: any)"},{"kind":152,"name":"keyDown","jsDoc":[],"isInternal":false,"parameters":["event: any"],"text":"keyDown(event: any) {\r\n  }","signature":"keyDown(event: any)"},{"kind":152,"name":"writeValue","jsDoc":[{"comment":"Handle external modal changing.","tags":[]}],"isInternal":false,"parameters":["value: any"],"text":"writeValue(value: any) {\r\n    this.modelState = value;\r\n    this.checkViewState();\r\n  }","signature":"writeValue(value: any)"},{"kind":152,"name":"selectOption","jsDoc":[],"isInternal":false,"modifiers":["private"],"parameters":["index: number"],"text":"private selectOption(index: number) {\r\n    const option = this.options[index];\r\n    this.viewState = isString(option) ? option : option.label;\r\n    this.modelState = isString(option) ? option : option.value;\r\n    this.viewStateChanges.next(this.viewState);\r\n    this.modelStateChanges.next(this.modelState);\r\n    this.select.emit(option);\r\n    this.changed = false;\r\n    // close options popup\r\n    if (this.optionsRef) {\r\n      this.optionsRef.componentRef.destroy();\r\n    }\r\n    this.cdr.detectChanges();\r\n  }","signature":"private selectOption(index: number)"},{"kind":152,"name":"checkViewState","jsDoc":[],"isInternal":false,"modifiers":["private"],"parameters":[],"text":"private checkViewState() {\r\n    // request options for correct label displaying\r\n    const option = this.options && this.options.length > 0\r\n      ? this.options.find(o => isString(o) ? o === this.modelState : o.value === this.modelState)\r\n      : null;\r\n    this.viewState = option ? isString(option) ? option : option.label : this.viewState;\r\n    this.viewStateChanges.next(this.viewState);\r\n  }","signature":"private checkViewState()"},{"kind":152,"name":"checkOptionsPopup","jsDoc":[],"isInternal":false,"modifiers":["private"],"parameters":[],"text":"private checkOptionsPopup() {\r\n    if (this.optionsRef) {\r\n      // check if need to hide\r\n      if (!this.changed || (!this.options || this.options.length === 0)) {\r\n        this.optionsRef.componentRef.destroy();\r\n      }\r\n    } else {\r\n      // check if need to show\r\n      if (this.changed && this.options && this.options.length > 0) {\r\n        this.showOptions();\r\n      }\r\n    }\r\n  }","signature":"private checkOptionsPopup()"},{"kind":152,"name":"showOptions","jsDoc":[],"isInternal":false,"modifiers":["private"],"parameters":[],"text":"private showOptions() {\r\n    if (!this.optionsRef) {\r\n      this.optionsRef = this.overlay.hostComponent({\r\n        component: UiAutocompleteOptionsComponent,\r\n        viewContainerRef: this.vcr,\r\n      });\r\n      if (this.optionsRef) {\r\n        this.optionsRef.input({anchor: this.elRef.nativeElement});\r\n        // handle destroy\r\n        this.optionsRef.componentRef.onDestroy(() => {\r\n          this.optionsRef = null;\r\n        });\r\n        // handle select\r\n        this.optionsRef.componentRef.instance.select\r\n          .pipe(take(1))\r\n          .subscribe(index => {\r\n            this.selectOption(index);\r\n          });\r\n        this.passOptions();\r\n      }\r\n    }\r\n  }","signature":"private showOptions()"},{"kind":152,"name":"passOptions","jsDoc":[],"isInternal":false,"modifiers":["private"],"parameters":[],"text":"private passOptions() {\r\n    if (this.optionsRef) {\r\n      this.optionsRef.input({\r\n        options: this.options,\r\n        selected: this.selectedOption = 0,\r\n        optionTemplate: this.optionTemplate,\r\n      });\r\n    }\r\n  }","signature":"private passOptions()"}],"ngMeta":{"type":"Directive","decorator":{"selector":"'[uiAutocomplete]'","exportAs":"'uiAutocomplete'"}}}]},{"fileName":"lib/ui-badge/demo/ui-badge-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-badge-demo.component.html',\n})\nexport class UiBadgeDemoComponent {\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-badge-demo.component.html',\n})"],"modifiers":["export"],"name":"UiBadgeDemoComponent","members":[],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-badge/demo/ui-badge-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { UiBadgeModule } from '../ui-badge.module';\r\nimport { UiBadgeDemoComponent } from './ui-badge-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiBadgeModule,\r\n  ],\r\n  declarations: [\r\n    UiBadgeDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiBadgeDemoComponent,\r\n  ],\r\n})\r\nexport class UiBadgeDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiBadgeModule,\r\n  ],\r\n  declarations: [\r\n    UiBadgeDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiBadgeDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiBadgeDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-badge/meta.ts","type":"ts","text":"export type UiBadgeColor = 'default' | 'primary';\r\nexport type UiBadgePosition = 'inline' | 'top-right' | 'bottom-right' | 'bottom-left' | 'top-left';\r\nexport type UiBadgeSize = 's' | 'm' | 'l';\r\n","declars":[{"kind":232,"kindString":"typeAlias","jsDoc":[],"isInternal":false,"name":"UiBadgeColor","type":"'default' | 'primary'","text":"export type UiBadgeColor = 'default' | 'primary';"},{"kind":232,"kindString":"typeAlias","jsDoc":[],"isInternal":false,"name":"UiBadgePosition","type":"'inline' | 'top-right' | 'bottom-right' | 'bottom-left' | 'top-left'","text":"export type UiBadgePosition = 'inline' | 'top-right' | 'bottom-right' | 'bottom-left' | 'top-left';"},{"kind":232,"kindString":"typeAlias","jsDoc":[],"isInternal":false,"name":"UiBadgeSize","type":"'s' | 'm' | 'l'","text":"export type UiBadgeSize = 's' | 'm' | 'l';"}]},{"fileName":"lib/ui-badge/ui-badge.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { UiBadgeComponent } from './ui-badge/ui-badge.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [\r\n    UiBadgeComponent,\r\n  ],\r\n  exports: [\r\n    UiBadgeComponent,\r\n  ],\r\n})\r\nexport class UiBadgeModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [\r\n    UiBadgeComponent,\r\n  ],\r\n  exports: [\r\n    UiBadgeComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiBadgeModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    UiBadgeComponent,\r\n  ]"}}}]},{"fileName":"lib/ui-badge/ui-badge.ts","type":"ts","text":"export * from './ui-badge/ui-badge.component';\r\nexport * from './ui-badge.module';\r\nexport * from './meta';\r\n","declars":[]},{"fileName":"lib/ui-badge/ui-badge/ui-badge.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit } from '@angular/core';\r\nimport { KitClassService } from '@ngx-kit/core';\r\nimport { UiBadgeColor, UiBadgePosition, UiBadgeSize } from '../meta';\r\n\r\n/**\r\n * @todo overflowCount - max count\r\n * @todo showZero\r\n */\r\n@Component({\r\n  selector: 'ui-badge',\r\n  template: `\r\n    {{ count }}\r\n  `,\r\n  styleUrls: ['./ui-badge.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [KitClassService],\r\n})\r\nexport class UiBadgeComponent implements OnInit, OnChanges {\r\n  @Input() color: UiBadgeColor = 'default';\r\n\r\n  /**\r\n   * Number displayed on badge.\r\n   */\r\n  @Input() count: number;\r\n\r\n  /**\r\n   * If use corner position, do not forget to set relative position to parent.\r\n   */\r\n  @Input() position: UiBadgePosition = 'inline';\r\n\r\n  @Input() size: UiBadgeSize = 'm';\r\n\r\n  constructor(private kitClass: KitClassService) {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.kitClass.apply({\r\n      size: this.size,\r\n      position: this.position,\r\n      color: this.color,\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"todo","value":"overflowCount - max count"},{"name":"todo","value":"showZero"}]}],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-badge',\r\n  template: `\r\n    {{ count }}\r\n  `,\r\n  styleUrls: ['./ui-badge.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [KitClassService],\r\n})"],"modifiers":["export"],"name":"UiBadgeComponent","members":[{"kind":150,"name":"color","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"UiBadgeColor","initializer":"'default'","text":"@Input() color: UiBadgeColor = 'default';","signature":"@Input() color: UiBadgeColor = 'default'"},{"kind":150,"name":"count","jsDoc":[{"comment":"Number displayed on badge.","tags":[]}],"isInternal":false,"decorators":["@Input()"],"type":"number","text":"@Input() count: number;","signature":"@Input() count: number"},{"kind":150,"name":"position","jsDoc":[{"comment":"If use corner position, do not forget to set relative position to parent.","tags":[]}],"isInternal":false,"decorators":["@Input()"],"type":"UiBadgePosition","initializer":"'inline'","text":"@Input() position: UiBadgePosition = 'inline';","signature":"@Input() position: UiBadgePosition = 'inline'"},{"kind":150,"name":"size","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"UiBadgeSize","initializer":"'m'","text":"@Input() size: UiBadgeSize = 'm';","signature":"@Input() size: UiBadgeSize = 'm'"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private kitClass: KitClassService"],"text":"constructor(private kitClass: KitClassService) {\r\n  }","signature":"constructor(private kitClass: KitClassService)"},{"kind":152,"name":"ngOnChanges","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnChanges() {\r\n    this.kitClass.apply({\r\n      size: this.size,\r\n      position: this.position,\r\n      color: this.color,\r\n    });\r\n  }","signature":"ngOnChanges()"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n  }","signature":"ngOnInit()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-badge'"}}}]},{"fileName":"lib/ui-breadcrumbs/demo/ui-breadcrumbs-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\nimport { KitIconsRegistryService } from '@ngx-kit/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-breadcrumbs-demo.component.html',\n})\nexport class UiBreadcrumbsDemoComponent {\n  constructor(private icons: KitIconsRegistryService) {\n    this.icons.add({\n      name: 'star', xml: `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 8 8\">\n        <path d=\"M4 0l-1 3h-3l2.5 2-1 3 2.5-2 2.5 2-1-3 2.5-2h-3l-1-3z\" />\n      </svg>\n    `,\n    });\n  }\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-breadcrumbs-demo.component.html',\n})"],"modifiers":["export"],"name":"UiBreadcrumbsDemoComponent","members":[{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private icons: KitIconsRegistryService"],"text":"constructor(private icons: KitIconsRegistryService) {\n    this.icons.add({\n      name: 'star', xml: `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 8 8\">\n        <path d=\"M4 0l-1 3h-3l2.5 2-1 3 2.5-2 2.5 2-1-3 2.5-2h-3l-1-3z\" />\n      </svg>\n    `,\n    });\n  }","signature":"constructor(private icons: KitIconsRegistryService)"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-breadcrumbs/demo/ui-breadcrumbs-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiBreadcrumbsModule } from '../ui-breadcrumbs.module';\nimport { UiBreadcrumbsDemoComponent } from './ui-breadcrumbs-demo.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    UiBreadcrumbsModule,\n  ],\n  declarations: [\n    UiBreadcrumbsDemoComponent,\n  ],\n  entryComponents: [\n    UiBreadcrumbsDemoComponent,\n  ],\n})\nexport class UiBreadcrumbsDemoModule {\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\n  imports: [\n    CommonModule,\n    UiBreadcrumbsModule,\n  ],\n  declarations: [\n    UiBreadcrumbsDemoComponent,\n  ],\n  entryComponents: [\n    UiBreadcrumbsDemoComponent,\n  ],\n})"],"modifiers":["export"],"name":"UiBreadcrumbsDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-breadcrumbs/ui-breadcrumbs-item/ui-breadcrumbs-item.component.ts","type":"ts","text":"import { Component, Input } from '@angular/core';\r\n\r\n/**\r\n * Breadcrumbs item.\r\n */\r\n@Component({\r\n  selector: 'ui-breadcrumbs-item,[uiBreadcrumbsItem]',\r\n  templateUrl: './ui-breadcrumbs-item.component.html',\r\n  styleUrls: ['./ui-breadcrumbs-item.component.scss'],\r\n})\r\nexport class UiBreadcrumbsItemComponent {\r\n  @Input() icon: string;\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"comment":"Breadcrumbs item.","tags":[]}],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-breadcrumbs-item,[uiBreadcrumbsItem]',\r\n  templateUrl: './ui-breadcrumbs-item.component.html',\r\n  styleUrls: ['./ui-breadcrumbs-item.component.scss'],\r\n})"],"modifiers":["export"],"name":"UiBreadcrumbsItemComponent","members":[{"kind":150,"name":"icon","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"string","text":"@Input() icon: string;","signature":"@Input() icon: string"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-breadcrumbs-item,[uiBreadcrumbsItem]'"}}}]},{"fileName":"lib/ui-breadcrumbs/ui-breadcrumbs.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { KitIconsModule, KitRefModule } from '@ngx-kit/core';\r\nimport { UiBreadcrumbsItemComponent } from './ui-breadcrumbs-item/ui-breadcrumbs-item.component';\r\nimport { UiBreadcrumbsComponent } from './ui-breadcrumbs/ui-breadcrumbs.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitIconsModule,\r\n  ],\r\n  declarations: [\r\n    UiBreadcrumbsComponent,\r\n    UiBreadcrumbsItemComponent,\r\n  ],\r\n  exports: [\r\n    KitRefModule,\r\n    UiBreadcrumbsComponent,\r\n    UiBreadcrumbsItemComponent,\r\n  ],\r\n})\r\nexport class UiBreadcrumbsModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitIconsModule,\r\n  ],\r\n  declarations: [\r\n    UiBreadcrumbsComponent,\r\n    UiBreadcrumbsItemComponent,\r\n  ],\r\n  exports: [\r\n    KitRefModule,\r\n    UiBreadcrumbsComponent,\r\n    UiBreadcrumbsItemComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiBreadcrumbsModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    KitRefModule,\r\n    UiBreadcrumbsComponent,\r\n    UiBreadcrumbsItemComponent,\r\n  ]"}}}]},{"fileName":"lib/ui-breadcrumbs/ui-breadcrumbs.ts","type":"ts","text":"export * from './ui-breadcrumbs/ui-breadcrumbs.component';\r\nexport * from './ui-breadcrumbs-item/ui-breadcrumbs-item.component';\r\nexport * from './ui-breadcrumbs.module';\r\n","declars":[]},{"fileName":"lib/ui-breadcrumbs/ui-breadcrumbs/ui-breadcrumbs.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component, ContentChildren, QueryList } from '@angular/core';\nimport { KitRefDirective } from '@ngx-kit/core';\n\n/**\n * Main breadcrumbs component.\n */\n@Component({\n  selector: 'ui-breadcrumbs',\n  templateUrl: './ui-breadcrumbs.component.html',\n  styleUrls: ['./ui-breadcrumbs.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UiBreadcrumbsComponent {\n  @ContentChildren(KitRefDirective) items: QueryList<KitRefDirective>;\n\n  constructor() {\n  }\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"comment":"Main breadcrumbs component.","tags":[]}],"isInternal":false,"isDemo":false,"decorators":["@Component({\n  selector: 'ui-breadcrumbs',\n  templateUrl: './ui-breadcrumbs.component.html',\n  styleUrls: ['./ui-breadcrumbs.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})"],"modifiers":["export"],"name":"UiBreadcrumbsComponent","members":[{"kind":150,"name":"items","jsDoc":[],"isInternal":false,"decorators":["@ContentChildren(KitRefDirective)"],"type":"QueryList<KitRefDirective>","text":"@ContentChildren(KitRefDirective) items: QueryList<KitRefDirective>;","signature":"@ContentChildren(KitRefDirective) items: QueryList<KitRefDirective>"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":[],"text":"constructor() {\n  }","signature":"constructor()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-breadcrumbs'"}}}]},{"fileName":"lib/ui-button/demo/ui-button-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\nimport { KitIconsRegistryService } from '@ngx-kit/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-button-demo.component.html',\n  styleUrls: ['./ui-button-demo.component.scss'],\n})\nexport class UiButtonDemoComponent {\n  checkboxModel1 = false;\n\n  checkboxModel2 = false;\n\n  checkboxModel3 = false;\n\n  radioModel = 1;\n\n  constructor(private icons: KitIconsRegistryService) {\n    this.icons.add({\n      name: 'star', xml: `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 8 8\">\n        <path d=\"M4 0l-1 3h-3l2.5 2-1 3 2.5-2 2.5 2-1-3 2.5-2h-3l-1-3z\" />\n      </svg>\n    `,\n    });\n  }\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-button-demo.component.html',\n  styleUrls: ['./ui-button-demo.component.scss'],\n})"],"modifiers":["export"],"name":"UiButtonDemoComponent","members":[{"kind":150,"name":"checkboxModel1","jsDoc":[],"isInternal":false,"initializer":"false","text":"checkboxModel1 = false;","signature":"checkboxModel1 = false"},{"kind":150,"name":"checkboxModel2","jsDoc":[],"isInternal":false,"initializer":"false","text":"checkboxModel2 = false;","signature":"checkboxModel2 = false"},{"kind":150,"name":"checkboxModel3","jsDoc":[],"isInternal":false,"initializer":"false","text":"checkboxModel3 = false;","signature":"checkboxModel3 = false"},{"kind":150,"name":"radioModel","jsDoc":[],"isInternal":false,"initializer":"1","text":"radioModel = 1;","signature":"radioModel = 1"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private icons: KitIconsRegistryService"],"text":"constructor(private icons: KitIconsRegistryService) {\n    this.icons.add({\n      name: 'star', xml: `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 8 8\">\n        <path d=\"M4 0l-1 3h-3l2.5 2-1 3 2.5-2 2.5 2-1-3 2.5-2h-3l-1-3z\" />\n      </svg>\n    `,\n    });\n  }","signature":"constructor(private icons: KitIconsRegistryService)"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-button/demo/ui-button-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { UiButtonModule } from '../ui-button.module';\r\nimport { UiButtonDemoComponent } from './ui-button-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiButtonModule,\r\n  ],\r\n  declarations: [\r\n    UiButtonDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiButtonDemoComponent,\r\n  ],\r\n})\r\nexport class UiButtonDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiButtonModule,\r\n  ],\r\n  declarations: [\r\n    UiButtonDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiButtonDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiButtonDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-button/meta.ts","type":"ts","text":"export type UiButtonColor = 'default' | 'primary';\r\nexport type UiButtonSize = 's' | 'm' | 'l';\r\nexport type UiButtonGroupDirection = 'row' | 'column';\r\n","declars":[{"kind":232,"kindString":"typeAlias","jsDoc":[],"isInternal":false,"name":"UiButtonColor","type":"'default' | 'primary'","text":"export type UiButtonColor = 'default' | 'primary';"},{"kind":232,"kindString":"typeAlias","jsDoc":[],"isInternal":false,"name":"UiButtonSize","type":"'s' | 'm' | 'l'","text":"export type UiButtonSize = 's' | 'm' | 'l';"},{"kind":232,"kindString":"typeAlias","jsDoc":[],"isInternal":false,"name":"UiButtonGroupDirection","type":"'row' | 'column'","text":"export type UiButtonGroupDirection = 'row' | 'column';"}]},{"fileName":"lib/ui-button/ui-button-group/ui-button-group.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, } from '@angular/core';\r\nimport { KitClassService } from '@ngx-kit/core';\r\nimport { UiButtonGroupDirection } from '../meta';\r\n\r\n@Component({\r\n  selector: 'ui-button-group',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  styleUrls: ['./ui-button-group.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitClassService,\r\n  ],\r\n})\r\nexport class UiButtonGroupComponent implements OnInit, OnChanges {\r\n  @Input() direction: UiButtonGroupDirection = 'row';\r\n\r\n  constructor(private kitClass: KitClassService) {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.applyClass();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.applyClass();\r\n  }\r\n\r\n  private applyClass() {\r\n    this.kitClass.apply({\r\n      direction: this.direction,\r\n    });\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-button-group',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  styleUrls: ['./ui-button-group.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitClassService,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiButtonGroupComponent","members":[{"kind":150,"name":"direction","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"UiButtonGroupDirection","initializer":"'row'","text":"@Input() direction: UiButtonGroupDirection = 'row';","signature":"@Input() direction: UiButtonGroupDirection = 'row'"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private kitClass: KitClassService"],"text":"constructor(private kitClass: KitClassService) {\r\n  }","signature":"constructor(private kitClass: KitClassService)"},{"kind":152,"name":"ngOnChanges","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnChanges() {\r\n    this.applyClass();\r\n  }","signature":"ngOnChanges()"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n    this.applyClass();\r\n  }","signature":"ngOnInit()"},{"kind":152,"name":"applyClass","jsDoc":[],"isInternal":false,"modifiers":["private"],"parameters":[],"text":"private applyClass() {\r\n    this.kitClass.apply({\r\n      direction: this.direction,\r\n    });\r\n  }","signature":"private applyClass()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-button-group'"}}}]},{"fileName":"lib/ui-button/ui-button.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { KitCheckModule, KitIconsModule } from '@ngx-kit/core';\r\nimport { UiButtonGroupComponent } from './ui-button-group/ui-button-group.component';\r\nimport { UiButtonComponent } from './ui-button/ui-button.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitIconsModule,\r\n  ],\r\n  declarations: [\r\n    UiButtonComponent,\r\n    UiButtonGroupComponent,\r\n  ],\r\n  exports: [\r\n    KitCheckModule,\r\n    UiButtonComponent,\r\n    UiButtonGroupComponent,\r\n  ],\r\n})\r\nexport class UiButtonModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitIconsModule,\r\n  ],\r\n  declarations: [\r\n    UiButtonComponent,\r\n    UiButtonGroupComponent,\r\n  ],\r\n  exports: [\r\n    KitCheckModule,\r\n    UiButtonComponent,\r\n    UiButtonGroupComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiButtonModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    KitCheckModule,\r\n    UiButtonComponent,\r\n    UiButtonGroupComponent,\r\n  ]"}}}]},{"fileName":"lib/ui-button/ui-button.ts","type":"ts","text":"export * from './meta';\r\nexport * from './ui-button.module';\r\nexport * from './ui-button/ui-button.component';\r\nexport * from './ui-button-group/ui-button-group.component';\r\n","declars":[]},{"fileName":"lib/ui-button/ui-button/ui-button.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, Optional } from '@angular/core';\r\nimport { KitClassService } from '@ngx-kit/core';\r\nimport { UiButtonColor, UiButtonSize } from '../meta';\r\nimport { UiButtonGroupComponent } from '../ui-button-group/ui-button-group.component';\r\n\r\n@Component({\r\n  // tslint:disable-next-line\r\n  selector: 'button[uiButton],a[uiButton]',\r\n  templateUrl: './ui-button.component.html',\r\n  styleUrls: ['./ui-button.component.scss'],\r\n  providers: [\r\n    KitClassService,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UiButtonComponent implements OnInit, OnChanges {\r\n  @Input() color: UiButtonColor = 'default';\r\n\r\n  @Input() disabled = false;\r\n\r\n  @Input() uiButton: void;\r\n\r\n  @Input() size: UiButtonSize = 'm';\r\n\r\n  @Input() icon: string;\r\n\r\n  constructor(\r\n    private kitClass: KitClassService,\r\n    @Optional() private group: UiButtonGroupComponent,\r\n  ) {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.applyClass();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.applyClass();\r\n  }\r\n\r\n  private applyClass() {\r\n    this.kitClass.apply({\r\n      disabled: this.disabled,\r\n      color: this.color,\r\n      size: this.size,\r\n      groupDirection: !!this.group ? this.group.direction : null,\r\n    });\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  // tslint:disable-next-line\r\n  selector: 'button[uiButton],a[uiButton]',\r\n  templateUrl: './ui-button.component.html',\r\n  styleUrls: ['./ui-button.component.scss'],\r\n  providers: [\r\n    KitClassService,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})"],"modifiers":["export"],"name":"UiButtonComponent","members":[{"kind":150,"name":"color","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"UiButtonColor","initializer":"'default'","text":"@Input() color: UiButtonColor = 'default';","signature":"@Input() color: UiButtonColor = 'default'"},{"kind":150,"name":"disabled","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"initializer":"false","text":"@Input() disabled = false;","signature":"@Input() disabled = false"},{"kind":150,"name":"uiButton","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"void","text":"@Input() uiButton: void;","signature":"@Input() uiButton: void"},{"kind":150,"name":"size","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"UiButtonSize","initializer":"'m'","text":"@Input() size: UiButtonSize = 'm';","signature":"@Input() size: UiButtonSize = 'm'"},{"kind":150,"name":"icon","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"string","text":"@Input() icon: string;","signature":"@Input() icon: string"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private kitClass: KitClassService","@Optional() private group: UiButtonGroupComponent"],"text":"constructor(\r\n    private kitClass: KitClassService,\r\n    @Optional() private group: UiButtonGroupComponent,\r\n  ) {\r\n  }","signature":"constructor(private kitClass: KitClassService, @Optional() private group: UiButtonGroupComponent)"},{"kind":152,"name":"ngOnChanges","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnChanges() {\r\n    this.applyClass();\r\n  }","signature":"ngOnChanges()"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n    this.applyClass();\r\n  }","signature":"ngOnInit()"},{"kind":152,"name":"applyClass","jsDoc":[],"isInternal":false,"modifiers":["private"],"parameters":[],"text":"private applyClass() {\r\n    this.kitClass.apply({\r\n      disabled: this.disabled,\r\n      color: this.color,\r\n      size: this.size,\r\n      groupDirection: !!this.group ? this.group.direction : null,\r\n    });\r\n  }","signature":"private applyClass()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'button[uiButton],a[uiButton]'"}}}]},{"fileName":"lib/ui-carousel/demo/ui-carousel-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-carousel-demo.component.html',\n})\nexport class UiCarouselDemoComponent {\n  slides = [\n    {color: '#F7A1A1', content: 'Slide 1 Content'},\n    {color: '#00D791', content: 'Slide 2 Content'},\n    {color: '#24B7EC', content: 'Slide 3 Content'},\n  ];\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-carousel-demo.component.html',\n})"],"modifiers":["export"],"name":"UiCarouselDemoComponent","members":[{"kind":150,"name":"slides","jsDoc":[],"isInternal":false,"initializer":"[\n    {color: '#F7A1A1', content: 'Slide 1 Content'},\n    {color: '#00D791', content: 'Slide 2 Content'},\n    {color: '#24B7EC', content: 'Slide 3 Content'},\n  ]","text":"slides = [\n    {color: '#F7A1A1', content: 'Slide 1 Content'},\n    {color: '#00D791', content: 'Slide 2 Content'},\n    {color: '#24B7EC', content: 'Slide 3 Content'},\n  ];","signature":"slides = [\n    {color: '#F7A1A1', content: 'Slide 1 Content'},\n    {color: '#00D791', content: 'Slide 2 Content'},\n    {color: '#24B7EC', content: 'Slide 3 Content'},\n  ]"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-carousel/demo/ui-carousel-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { UiCarouselModule } from '../ui-carousel.module';\r\nimport { UiCarouselDemoComponent } from './ui-carousel-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiCarouselModule,\r\n  ],\r\n  declarations: [\r\n    UiCarouselDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiCarouselDemoComponent,\r\n  ],\r\n})\r\nexport class UiCarouselDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiCarouselModule,\r\n  ],\r\n  declarations: [\r\n    UiCarouselDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiCarouselDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiCarouselDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-carousel/ui-carousel-slide/ui-carousel-slide.component.ts","type":"ts","text":"import { animate, style, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\r\nimport { KitSlideDirection, KitSlideHostService } from '@ngx-kit/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'ui-carousel-slide',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-carousel-slide.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('slide', [\r\n      // entering\r\n      transition('void => prev', [\r\n        style({transform: 'translateX(-100%)'}),\r\n        animate('250ms cubic-bezier(0.0, 0.0, 0.2, 1)'),\r\n      ]),\r\n      transition('void => next', [\r\n        style({transform: 'translateX(100%)'}),\r\n        animate('250ms cubic-bezier(0.0, 0.0, 0.2, 1)'),\r\n      ]),\r\n      // leaving\r\n      transition('prev => void', [\r\n        style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          right: 0,\r\n          left: 0,\r\n        }),\r\n        animate('250ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({transform: 'translateX(100%)'})),\r\n      ]),\r\n      transition('next => void', [\r\n        style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          right: 0,\r\n          left: 0,\r\n        }),\r\n        animate('250ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({transform: 'translateX(-100%)'})),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class UiCarouselSlideComponent implements OnDestroy {\r\n  @HostBinding('@slide') slideTrigger: KitSlideDirection;\r\n\r\n  private destroy = new Subject<void>();\r\n\r\n  constructor(\r\n    private host: KitSlideHostService,\r\n    private cdr: ChangeDetectorRef,\r\n  ) {\r\n    this.host.directionChanges\r\n      .pipe(takeUntil(this.destroy))\r\n      .subscribe(d => {\r\n        this.slideTrigger = d;\r\n        this.cdr.detectChanges();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy.next();\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-carousel-slide',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-carousel-slide.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('slide', [\r\n      // entering\r\n      transition('void => prev', [\r\n        style({transform: 'translateX(-100%)'}),\r\n        animate('250ms cubic-bezier(0.0, 0.0, 0.2, 1)'),\r\n      ]),\r\n      transition('void => next', [\r\n        style({transform: 'translateX(100%)'}),\r\n        animate('250ms cubic-bezier(0.0, 0.0, 0.2, 1)'),\r\n      ]),\r\n      // leaving\r\n      transition('prev => void', [\r\n        style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          right: 0,\r\n          left: 0,\r\n        }),\r\n        animate('250ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({transform: 'translateX(100%)'})),\r\n      ]),\r\n      transition('next => void', [\r\n        style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          right: 0,\r\n          left: 0,\r\n        }),\r\n        animate('250ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({transform: 'translateX(-100%)'})),\r\n      ]),\r\n    ]),\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiCarouselSlideComponent","members":[{"kind":150,"name":"slideTrigger","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('@slide')"],"type":"KitSlideDirection","text":"@HostBinding('@slide') slideTrigger: KitSlideDirection;","signature":"@HostBinding('@slide') slideTrigger: KitSlideDirection"},{"kind":150,"name":"destroy","jsDoc":[],"isInternal":false,"modifiers":["private"],"initializer":"new Subject<void>()","text":"private destroy = new Subject<void>();","signature":"private destroy = new Subject<void>()"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private host: KitSlideHostService","private cdr: ChangeDetectorRef"],"text":"constructor(\r\n    private host: KitSlideHostService,\r\n    private cdr: ChangeDetectorRef,\r\n  ) {\r\n    this.host.directionChanges\r\n      .pipe(takeUntil(this.destroy))\r\n      .subscribe(d => {\r\n        this.slideTrigger = d;\r\n        this.cdr.detectChanges();\r\n      });\r\n  }","signature":"constructor(private host: KitSlideHostService, private cdr: ChangeDetectorRef)"},{"kind":152,"name":"ngOnDestroy","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnDestroy() {\r\n    this.destroy.next();\r\n  }","signature":"ngOnDestroy()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-carousel-slide'"}}}]},{"fileName":"lib/ui-carousel/ui-carousel.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { KitSlideModule } from '@ngx-kit/core';\r\nimport { UiCarouselSlideComponent } from './ui-carousel-slide/ui-carousel-slide.component';\r\nimport { UiCarouselComponent } from './ui-carousel/ui-carousel.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitSlideModule,\r\n  ],\r\n  declarations: [\r\n    UiCarouselComponent,\r\n    UiCarouselSlideComponent,\r\n  ],\r\n  exports: [\r\n    KitSlideModule,\r\n    UiCarouselComponent,\r\n    UiCarouselSlideComponent,\r\n  ],\r\n})\r\nexport class UiCarouselModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitSlideModule,\r\n  ],\r\n  declarations: [\r\n    UiCarouselComponent,\r\n    UiCarouselSlideComponent,\r\n  ],\r\n  exports: [\r\n    KitSlideModule,\r\n    UiCarouselComponent,\r\n    UiCarouselSlideComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiCarouselModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    KitSlideModule,\r\n    UiCarouselComponent,\r\n    UiCarouselSlideComponent,\r\n  ]"}}}]},{"fileName":"lib/ui-carousel/ui-carousel.ts","type":"ts","text":"export * from './ui-carousel.module';\r\nexport * from './ui-carousel/ui-carousel.component';\r\nexport * from './ui-carousel-slide/ui-carousel-slide.component';\r\n","declars":[]},{"fileName":"lib/ui-carousel/ui-carousel/ui-carousel.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component, HostListener, Input } from '@angular/core';\r\nimport { KitSlideHostService } from '@ngx-kit/core';\r\n\r\n@Component({\r\n  selector: 'ui-carousel',\r\n  template: `\r\n    <div class=\"wrapper\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./ui-carousel.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitSlideHostService,\r\n  ],\r\n})\r\nexport class UiCarouselComponent {\r\n  @Input() cycle = true;\r\n\r\n  constructor(\r\n    private host: KitSlideHostService,\r\n  ) {\r\n  }\r\n\r\n  @HostListener('swipeleft') swipeleftHandler() {\r\n    this.host.next(this.cycle);\r\n  }\r\n\r\n  @HostListener('swiperight') swiperightHandler() {\r\n    this.host.prev(this.cycle);\r\n  }\r\n\r\n  @HostListener('tap') tapHandler() {\r\n    this.host.prev(this.cycle);\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-carousel',\r\n  template: `\r\n    <div class=\"wrapper\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./ui-carousel.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitSlideHostService,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiCarouselComponent","members":[{"kind":150,"name":"cycle","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"initializer":"true","text":"@Input() cycle = true;","signature":"@Input() cycle = true"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private host: KitSlideHostService"],"text":"constructor(\r\n    private host: KitSlideHostService,\r\n  ) {\r\n  }","signature":"constructor(private host: KitSlideHostService)"},{"kind":152,"name":"swipeleftHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('swipeleft')"],"parameters":[],"text":"@HostListener('swipeleft') swipeleftHandler() {\r\n    this.host.next(this.cycle);\r\n  }","signature":"@HostListener('swipeleft') swipeleftHandler()"},{"kind":152,"name":"swiperightHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('swiperight')"],"parameters":[],"text":"@HostListener('swiperight') swiperightHandler() {\r\n    this.host.prev(this.cycle);\r\n  }","signature":"@HostListener('swiperight') swiperightHandler()"},{"kind":152,"name":"tapHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('tap')"],"parameters":[],"text":"@HostListener('tap') tapHandler() {\r\n    this.host.prev(this.cycle);\r\n  }","signature":"@HostListener('tap') tapHandler()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-carousel'"}}}]},{"fileName":"lib/ui-checkbox/demo/ui-checkbox-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-checkbox-demo.component.html',\n})\nexport class UiCheckboxDemoComponent {\n  checkboxModel = false;\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-checkbox-demo.component.html',\n})"],"modifiers":["export"],"name":"UiCheckboxDemoComponent","members":[{"kind":150,"name":"checkboxModel","jsDoc":[],"isInternal":false,"initializer":"false","text":"checkboxModel = false;","signature":"checkboxModel = false"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-checkbox/demo/ui-checkbox-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { UiCheckboxModule } from '../ui-checkbox.module';\r\nimport { UiCheckboxDemoComponent } from './ui-checkbox-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiCheckboxModule,\r\n  ],\r\n  declarations: [\r\n    UiCheckboxDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiCheckboxDemoComponent,\r\n  ],\r\n})\r\nexport class UiCheckboxDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiCheckboxModule,\r\n  ],\r\n  declarations: [\r\n    UiCheckboxDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiCheckboxDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiCheckboxDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-checkbox/ui-checkbox.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { UiCheckboxComponent } from './ui-checkbox/ui-checkbox.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    UiCheckboxComponent,\r\n  ],\r\n  exports: [\r\n    UiCheckboxComponent,\r\n  ],\r\n})\r\nexport class UiCheckboxModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    UiCheckboxComponent,\r\n  ],\r\n  exports: [\r\n    UiCheckboxComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiCheckboxModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    UiCheckboxComponent,\r\n  ]"}}}]},{"fileName":"lib/ui-checkbox/ui-checkbox.ts","type":"ts","text":"export * from './ui-checkbox.module';\r\nexport * from './ui-checkbox/ui-checkbox.component';\r\n","declars":[]},{"fileName":"lib/ui-checkbox/ui-checkbox/ui-checkbox.component.ts","type":"ts","text":"import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Host,\r\n  HostBinding,\r\n  HostListener,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Optional,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { isUndefined, KitNgControlDirective, uuid } from '@ngx-kit/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line\r\n  selector: 'input[type=\"checkbox\"][uiCheckbox]',\r\n  templateUrl: './ui-checkbox.component.html',\r\n  styleUrls: ['./ui-checkbox.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UiCheckboxComponent implements OnInit, OnChanges, AfterViewInit {\r\n  @Input() uiText: void;\r\n\r\n  @Input() id: string;\r\n\r\n  @Input('disabled') disabledInput: boolean;\r\n\r\n  @ViewChild('checkTemplate') checkTemplate: TemplateRef<any>;\r\n\r\n  @HostBinding('attr.id') idBinding = uuid();\r\n\r\n  focused = false;\r\n\r\n  hasErrors = false;\r\n\r\n  disabled = false;\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private vcr: ViewContainerRef,\r\n    private elRef: ElementRef,\r\n    @Optional() @Host() private control: KitNgControlDirective,\r\n    @Optional() @Host() private ngControl: NgControl,\r\n  ) {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if ('id' in changes) {\r\n      this.idBinding = this.id;\r\n    }\r\n    if ('disabledInput' in changes) {\r\n      this.disabled = !(this.disabledInput === false);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.control) {\r\n      this.idBinding = this.control.id;\r\n      this.control.errorStateChanges.subscribe(errors => {\r\n        this.hasErrors = !errors || errors.length > 0;\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n    if (this.ngControl && this.ngControl.valueChanges) {\r\n      this.ngControl.valueChanges.subscribe(() => {\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n    if (this.ngControl && this.ngControl.statusChanges) {\r\n      this.ngControl.statusChanges.subscribe(() => {\r\n        if (isUndefined(this.disabledInput)) {\r\n          this.disabled = !!this.ngControl.disabled;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const viewRef = this.vcr.createEmbeddedView(this.checkTemplate);\r\n    // ViewRef extends ChangeDetectionRef, needed for bindings update after projecting.\r\n    viewRef['detectChanges']();\r\n  }\r\n\r\n  @HostListener('focus') focusHandler() {\r\n    this.focused = true;\r\n  }\r\n\r\n  @HostListener('blur') blurHandler() {\r\n    this.focused = false;\r\n  }\r\n\r\n  isChecked(): boolean {\r\n    return this.elRef.nativeElement.checked;\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  // tslint:disable-next-line\r\n  selector: 'input[type=\"checkbox\"][uiCheckbox]',\r\n  templateUrl: './ui-checkbox.component.html',\r\n  styleUrls: ['./ui-checkbox.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})"],"modifiers":["export"],"name":"UiCheckboxComponent","members":[{"kind":150,"name":"uiText","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"void","text":"@Input() uiText: void;","signature":"@Input() uiText: void"},{"kind":150,"name":"id","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"string","text":"@Input() id: string;","signature":"@Input() id: string"},{"kind":150,"name":"disabledInput","jsDoc":[],"isInternal":false,"decorators":["@Input('disabled')"],"type":"boolean","text":"@Input('disabled') disabledInput: boolean;","signature":"@Input('disabled') disabledInput: boolean"},{"kind":150,"name":"checkTemplate","jsDoc":[],"isInternal":false,"decorators":["@ViewChild('checkTemplate')"],"type":"TemplateRef<any>","text":"@ViewChild('checkTemplate') checkTemplate: TemplateRef<any>;","signature":"@ViewChild('checkTemplate') checkTemplate: TemplateRef<any>"},{"kind":150,"name":"idBinding","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('attr.id')"],"initializer":"uuid()","text":"@HostBinding('attr.id') idBinding = uuid();","signature":"@HostBinding('attr.id') idBinding = uuid()"},{"kind":150,"name":"focused","jsDoc":[],"isInternal":false,"initializer":"false","text":"focused = false;","signature":"focused = false"},{"kind":150,"name":"hasErrors","jsDoc":[],"isInternal":false,"initializer":"false","text":"hasErrors = false;","signature":"hasErrors = false"},{"kind":150,"name":"disabled","jsDoc":[],"isInternal":false,"initializer":"false","text":"disabled = false;","signature":"disabled = false"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private cdr: ChangeDetectorRef","private vcr: ViewContainerRef","private elRef: ElementRef","@Optional() @Host() private control: KitNgControlDirective","@Optional() @Host() private ngControl: NgControl"],"text":"constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private vcr: ViewContainerRef,\r\n    private elRef: ElementRef,\r\n    @Optional() @Host() private control: KitNgControlDirective,\r\n    @Optional() @Host() private ngControl: NgControl,\r\n  ) {\r\n  }","signature":"constructor(private cdr: ChangeDetectorRef, private vcr: ViewContainerRef, private elRef: ElementRef, @Optional() @Host() private control: KitNgControlDirective, @Optional() @Host() private ngControl: NgControl)"},{"kind":152,"name":"ngOnChanges","jsDoc":[],"isInternal":false,"parameters":["changes: SimpleChanges"],"text":"ngOnChanges(changes: SimpleChanges) {\r\n    if ('id' in changes) {\r\n      this.idBinding = this.id;\r\n    }\r\n    if ('disabledInput' in changes) {\r\n      this.disabled = !(this.disabledInput === false);\r\n    }\r\n  }","signature":"ngOnChanges(changes: SimpleChanges)"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n    if (this.control) {\r\n      this.idBinding = this.control.id;\r\n      this.control.errorStateChanges.subscribe(errors => {\r\n        this.hasErrors = !errors || errors.length > 0;\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n    if (this.ngControl && this.ngControl.valueChanges) {\r\n      this.ngControl.valueChanges.subscribe(() => {\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n    if (this.ngControl && this.ngControl.statusChanges) {\r\n      this.ngControl.statusChanges.subscribe(() => {\r\n        if (isUndefined(this.disabledInput)) {\r\n          this.disabled = !!this.ngControl.disabled;\r\n        }\r\n      });\r\n    }\r\n  }","signature":"ngOnInit()"},{"kind":152,"name":"ngAfterViewInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngAfterViewInit() {\r\n    const viewRef = this.vcr.createEmbeddedView(this.checkTemplate);\r\n    // ViewRef extends ChangeDetectionRef, needed for bindings update after projecting.\r\n    viewRef['detectChanges']();\r\n  }","signature":"ngAfterViewInit()"},{"kind":152,"name":"focusHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('focus')"],"parameters":[],"text":"@HostListener('focus') focusHandler() {\r\n    this.focused = true;\r\n  }","signature":"@HostListener('focus') focusHandler()"},{"kind":152,"name":"blurHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('blur')"],"parameters":[],"text":"@HostListener('blur') blurHandler() {\r\n    this.focused = false;\r\n  }","signature":"@HostListener('blur') blurHandler()"},{"kind":152,"name":"isChecked","jsDoc":[],"isInternal":false,"parameters":[],"type":"boolean","text":"isChecked(): boolean {\r\n    return this.elRef.nativeElement.checked;\r\n  }","signature":"isChecked(): boolean"}],"ngMeta":{"type":"Component","decorator":{"selector":"'input[type=\"checkbox\"][uiCheckbox]'"}}}]},{"fileName":"lib/ui-custom-select/demo/ui-custom-select-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-custom-select-demo.component.html',\n})\nexport class UiCustomSelectDemoComponent {\n  model = 1;\n\n  options = [\n    {\n      label: 'Option 1',\n      value: 1,\n    },\n    {\n      label: 'Option 2',\n      value: 2,\n    },\n    {\n      label: 'Option 3',\n      value: 3,\n    },\n    {\n      label: 'Option 4',\n      value: 4,\n    },\n  ];\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-custom-select-demo.component.html',\n})"],"modifiers":["export"],"name":"UiCustomSelectDemoComponent","members":[{"kind":150,"name":"model","jsDoc":[],"isInternal":false,"initializer":"1","text":"model = 1;","signature":"model = 1"},{"kind":150,"name":"options","jsDoc":[],"isInternal":false,"initializer":"[\n    {\n      label: 'Option 1',\n      value: 1,\n    },\n    {\n      label: 'Option 2',\n      value: 2,\n    },\n    {\n      label: 'Option 3',\n      value: 3,\n    },\n    {\n      label: 'Option 4',\n      value: 4,\n    },\n  ]","text":"options = [\n    {\n      label: 'Option 1',\n      value: 1,\n    },\n    {\n      label: 'Option 2',\n      value: 2,\n    },\n    {\n      label: 'Option 3',\n      value: 3,\n    },\n    {\n      label: 'Option 4',\n      value: 4,\n    },\n  ];","signature":"options = [\n    {\n      label: 'Option 1',\n      value: 1,\n    },\n    {\n      label: 'Option 2',\n      value: 2,\n    },\n    {\n      label: 'Option 3',\n      value: 3,\n    },\n    {\n      label: 'Option 4',\n      value: 4,\n    },\n  ]"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-custom-select/demo/ui-custom-select-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { UiCustomSelectModule } from '../ui-custom-select.module';\r\nimport { UiCustomSelectDemoComponent } from './ui-custom-select-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiCustomSelectModule,\r\n  ],\r\n  declarations: [\r\n    UiCustomSelectDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiCustomSelectDemoComponent,\r\n  ],\r\n})\r\nexport class UiCustomSelectDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiCustomSelectModule,\r\n  ],\r\n  declarations: [\r\n    UiCustomSelectDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiCustomSelectDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiCustomSelectDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-custom-select/meta.ts","type":"ts","text":"export interface UiCustomSelectOption {\r\n  label: string;\r\n  value: any;\r\n}\r\n","declars":[{"kind":231,"kindString":"interface","jsDoc":[],"isInternal":false,"name":"UiCustomSelectOption","members":[{"kind":149,"jsDoc":[],"isInternal":false,"name":"label","type":"string","text":"label: string;","signature":"label(): string"},{"kind":149,"jsDoc":[],"isInternal":false,"name":"value","type":"any","text":"value: any;","signature":"value(): any"}]}]},{"fileName":"lib/ui-custom-select/ui-custom-select.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { KitOutsideClickModule, KitOverlayModule, KitPositionModule } from '@ngx-kit/core';\nimport { UiCustomSelectComponent } from './ui-custom-select/ui-custom-select.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    KitOverlayModule,\n    KitPositionModule,\n    KitOutsideClickModule,\n  ],\n  declarations: [\n    UiCustomSelectComponent,\n  ],\n  exports: [\n    UiCustomSelectComponent,\n  ],\n})\nexport class UiCustomSelectModule {\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\n  imports: [\n    CommonModule,\n    KitOverlayModule,\n    KitPositionModule,\n    KitOutsideClickModule,\n  ],\n  declarations: [\n    UiCustomSelectComponent,\n  ],\n  exports: [\n    UiCustomSelectComponent,\n  ],\n})"],"modifiers":["export"],"name":"UiCustomSelectModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\n    UiCustomSelectComponent,\n  ]"}}}]},{"fileName":"lib/ui-custom-select/ui-custom-select.ts","type":"ts","text":"export * from './ui-custom-select.module';\r\nexport * from './ui-custom-select/ui-custom-select.component';\r\n","declars":[]},{"fileName":"lib/ui-custom-select/ui-custom-select/ui-custom-select.component.ts","type":"ts","text":"import { animate, animateChild, query, style, transition, trigger } from '@angular/animations';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { KitOverlayToggleDirective } from '@ngx-kit/core';\nimport { Subject } from 'rxjs';\nimport { UiCustomSelectOption } from '../meta';\n\nexport const uiCustomSelectValueAccessor: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => UiCustomSelectComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'ui-custom-select',\n  templateUrl: './ui-custom-select.component.html',\n  styleUrls: ['./ui-custom-select.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [uiCustomSelectValueAccessor],\n  animations: [\n    trigger('popupHost', [\n      transition(':enter, :leave', [\n        query('@*', animateChild(), {optional: true}),\n      ]),\n    ]),\n    trigger('popup', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n          transform: 'translateY(-5px)',\n        }),\n        animate('100ms', style({\n          opacity: 1,\n          transform: 'translateY(0)',\n        })),\n      ]),\n      transition(':leave', [\n        style({opacity: 1}),\n        animate('100ms', style({\n          opacity: 0,\n          transform: 'translateY(-5px)',\n        })),\n      ]),\n    ]),\n  ],\n})\nexport class UiCustomSelectComponent implements OnInit, ControlValueAccessor {\n  @Input() options: UiCustomSelectOption[] = [];\n\n  @ViewChild('toggle') toggle: KitOverlayToggleDirective;\n\n  viewState: any;\n\n  private changes = new Subject<any>();\n\n  private disabled = false;\n\n  private state: any;\n\n  private touches = new Subject<void>();\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private el: ElementRef,\n  ) {\n  }\n\n  get nativeEl() {\n    return this.el.nativeElement;\n  }\n\n  ngOnInit() {\n  }\n\n  registerOnChange(fn: any) {\n    this.changes.subscribe(fn);\n  }\n\n  registerOnTouched(fn: any) {\n    this.touches.subscribe(fn);\n  }\n\n  select(value: any) {\n    this.state = value;\n    this.changes.next(this.state);\n    this.updateViewState();\n    this.toggle.close();\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  writeValue(rawValue: any): void {\n    this.state = rawValue;\n    this.updateViewState();\n    this.cdr.detectChanges();\n  }\n\n  private updateViewState() {\n    this.viewState = this.options.find(o => o.value === this.state);\n  }\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\n  selector: 'ui-custom-select',\n  templateUrl: './ui-custom-select.component.html',\n  styleUrls: ['./ui-custom-select.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [uiCustomSelectValueAccessor],\n  animations: [\n    trigger('popupHost', [\n      transition(':enter, :leave', [\n        query('@*', animateChild(), {optional: true}),\n      ]),\n    ]),\n    trigger('popup', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n          transform: 'translateY(-5px)',\n        }),\n        animate('100ms', style({\n          opacity: 1,\n          transform: 'translateY(0)',\n        })),\n      ]),\n      transition(':leave', [\n        style({opacity: 1}),\n        animate('100ms', style({\n          opacity: 0,\n          transform: 'translateY(-5px)',\n        })),\n      ]),\n    ]),\n  ],\n})"],"modifiers":["export"],"name":"UiCustomSelectComponent","members":[{"kind":150,"name":"options","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"UiCustomSelectOption[]","initializer":"[]","text":"@Input() options: UiCustomSelectOption[] = [];","signature":"@Input() options: UiCustomSelectOption[] = []"},{"kind":150,"name":"toggle","jsDoc":[],"isInternal":false,"decorators":["@ViewChild('toggle')"],"type":"KitOverlayToggleDirective","text":"@ViewChild('toggle') toggle: KitOverlayToggleDirective;","signature":"@ViewChild('toggle') toggle: KitOverlayToggleDirective"},{"kind":150,"name":"viewState","jsDoc":[],"isInternal":false,"type":"any","text":"viewState: any;","signature":"viewState: any"},{"kind":150,"name":"changes","jsDoc":[],"isInternal":false,"modifiers":["private"],"initializer":"new Subject<any>()","text":"private changes = new Subject<any>();","signature":"private changes = new Subject<any>()"},{"kind":150,"name":"disabled","jsDoc":[],"isInternal":false,"modifiers":["private"],"initializer":"false","text":"private disabled = false;","signature":"private disabled = false"},{"kind":150,"name":"state","jsDoc":[],"isInternal":false,"modifiers":["private"],"type":"any","text":"private state: any;","signature":"private state: any"},{"kind":150,"name":"touches","jsDoc":[],"isInternal":false,"modifiers":["private"],"initializer":"new Subject<void>()","text":"private touches = new Subject<void>();","signature":"private touches = new Subject<void>()"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private cdr: ChangeDetectorRef","private el: ElementRef"],"text":"constructor(\n    private cdr: ChangeDetectorRef,\n    private el: ElementRef,\n  ) {\n  }","signature":"constructor(private cdr: ChangeDetectorRef, private el: ElementRef)"},{"kind":154,"name":"nativeEl","jsDoc":[],"isInternal":false,"parameters":[],"text":"get nativeEl() {\n    return this.el.nativeElement;\n  }","signature":"get nativeEl()"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\n  }","signature":"ngOnInit()"},{"kind":152,"name":"registerOnChange","jsDoc":[],"isInternal":false,"parameters":["fn: any"],"text":"registerOnChange(fn: any) {\n    this.changes.subscribe(fn);\n  }","signature":"registerOnChange(fn: any)"},{"kind":152,"name":"registerOnTouched","jsDoc":[],"isInternal":false,"parameters":["fn: any"],"text":"registerOnTouched(fn: any) {\n    this.touches.subscribe(fn);\n  }","signature":"registerOnTouched(fn: any)"},{"kind":152,"name":"select","jsDoc":[],"isInternal":false,"parameters":["value: any"],"text":"select(value: any) {\n    this.state = value;\n    this.changes.next(this.state);\n    this.updateViewState();\n    this.toggle.close();\n  }","signature":"select(value: any)"},{"kind":152,"name":"setDisabledState","jsDoc":[],"isInternal":false,"parameters":["isDisabled: boolean"],"type":"void","text":"setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }","signature":"setDisabledState(isDisabled: boolean): void"},{"kind":152,"name":"writeValue","jsDoc":[],"isInternal":false,"parameters":["rawValue: any"],"type":"void","text":"writeValue(rawValue: any): void {\n    this.state = rawValue;\n    this.updateViewState();\n    this.cdr.detectChanges();\n  }","signature":"writeValue(rawValue: any): void"},{"kind":152,"name":"updateViewState","jsDoc":[],"isInternal":false,"modifiers":["private"],"parameters":[],"text":"private updateViewState() {\n    this.viewState = this.options.find(o => o.value === this.state);\n  }","signature":"private updateViewState()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-custom-select'"}}}]},{"fileName":"lib/ui-date-picker/demo/ui-date-picker-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-date-picker-demo.component.html',\n})\nexport class UiDatePickerDemoComponent {\n  model = new Date();\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-date-picker-demo.component.html',\n})"],"modifiers":["export"],"name":"UiDatePickerDemoComponent","members":[{"kind":150,"name":"model","jsDoc":[],"isInternal":false,"initializer":"new Date()","text":"model = new Date();","signature":"model = new Date()"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-date-picker/demo/ui-date-picker-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { UiDatePickerModule } from '../ui-date-picker.module';\r\nimport { UiDatePickerDemoComponent } from './ui-date-picker-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiDatePickerModule,\r\n  ],\r\n  declarations: [\r\n    UiDatePickerDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiDatePickerDemoComponent,\r\n  ],\r\n})\r\nexport class UiDatePickerDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiDatePickerModule,\r\n  ],\r\n  declarations: [\r\n    UiDatePickerDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiDatePickerDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiDatePickerDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-date-picker/ui-date-picker-popup/ui-date-picker-popup.component.ts","type":"ts","text":"import { animate, animateChild, query, style, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectionStrategy, Component, HostBinding, Input, OnInit } from '@angular/core';\r\nimport { KitAnchor, KitFocusManagerService, KitOverlayToggleDirective } from '@ngx-kit/core';\r\n\r\n@Component({\r\n  selector: 'ui-date-picker-popup',\r\n  templateUrl: './ui-date-picker-popup.component.html',\r\n  styleUrls: ['./ui-date-picker-popup.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitFocusManagerService,\r\n  ],\r\n  animations: [\r\n    trigger('host', [\r\n      transition(':enter, :leave', [\r\n        query('@*', animateChild()),\r\n      ]),\r\n    ]),\r\n    trigger('fade', [\r\n      transition(':enter', [\r\n        style({\r\n          opacity: 0,\r\n          transform: 'scale(0.5)',\r\n        }),\r\n        animate('150ms ease-out', style({\r\n          opacity: 1,\r\n          transform: 'scale(1)',\r\n        })),\r\n      ]),\r\n      transition(':leave', [\r\n        style({opacity: 1}),\r\n        animate('150ms ease-in', style({\r\n          opacity: 0,\r\n          transform: 'scale(0.5)',\r\n        })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class UiDatePickerPopupComponent implements OnInit {\r\n  @Input() anchor: KitAnchor | HTMLElement;\r\n\r\n  @Input() toggle: KitOverlayToggleDirective;\r\n\r\n  @HostBinding('attr.aria-label') ariaLabel = 'Datepicker popup';\r\n\r\n  @HostBinding('attr.aria-modal') ariaModal = true;\r\n\r\n  @HostBinding('@host') hostTrigger = true;\r\n\r\n  @HostBinding('attr.role') role = 'dialog';\r\n\r\n  constructor(\r\n    private focusManager: KitFocusManagerService,\r\n  ) {\r\n    this.focusManager.autoCapture = true;\r\n    this.focusManager.init();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.focusManager.focusItem('grid');\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-date-picker-popup',\r\n  templateUrl: './ui-date-picker-popup.component.html',\r\n  styleUrls: ['./ui-date-picker-popup.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitFocusManagerService,\r\n  ],\r\n  animations: [\r\n    trigger('host', [\r\n      transition(':enter, :leave', [\r\n        query('@*', animateChild()),\r\n      ]),\r\n    ]),\r\n    trigger('fade', [\r\n      transition(':enter', [\r\n        style({\r\n          opacity: 0,\r\n          transform: 'scale(0.5)',\r\n        }),\r\n        animate('150ms ease-out', style({\r\n          opacity: 1,\r\n          transform: 'scale(1)',\r\n        })),\r\n      ]),\r\n      transition(':leave', [\r\n        style({opacity: 1}),\r\n        animate('150ms ease-in', style({\r\n          opacity: 0,\r\n          transform: 'scale(0.5)',\r\n        })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiDatePickerPopupComponent","members":[{"kind":150,"name":"anchor","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"KitAnchor | HTMLElement","text":"@Input() anchor: KitAnchor | HTMLElement;","signature":"@Input() anchor: KitAnchor | HTMLElement"},{"kind":150,"name":"toggle","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"KitOverlayToggleDirective","text":"@Input() toggle: KitOverlayToggleDirective;","signature":"@Input() toggle: KitOverlayToggleDirective"},{"kind":150,"name":"ariaLabel","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('attr.aria-label')"],"initializer":"'Datepicker popup'","text":"@HostBinding('attr.aria-label') ariaLabel = 'Datepicker popup';","signature":"@HostBinding('attr.aria-label') ariaLabel = 'Datepicker popup'"},{"kind":150,"name":"ariaModal","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('attr.aria-modal')"],"initializer":"true","text":"@HostBinding('attr.aria-modal') ariaModal = true;","signature":"@HostBinding('attr.aria-modal') ariaModal = true"},{"kind":150,"name":"hostTrigger","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('@host')"],"initializer":"true","text":"@HostBinding('@host') hostTrigger = true;","signature":"@HostBinding('@host') hostTrigger = true"},{"kind":150,"name":"role","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('attr.role')"],"initializer":"'dialog'","text":"@HostBinding('attr.role') role = 'dialog';","signature":"@HostBinding('attr.role') role = 'dialog'"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private focusManager: KitFocusManagerService"],"text":"constructor(\r\n    private focusManager: KitFocusManagerService,\r\n  ) {\r\n    this.focusManager.autoCapture = true;\r\n    this.focusManager.init();\r\n  }","signature":"constructor(private focusManager: KitFocusManagerService)"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n    this.focusManager.focusItem('grid');\r\n  }","signature":"ngOnInit()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-date-picker-popup'"}}}]},{"fileName":"lib/ui-date-picker/ui-date-picker.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  KitAnchorModule,\r\n  KitClassModule,\r\n  KitFocusManagerModule,\r\n  KitInputDateModule,\r\n  KitOutsideClickModule,\r\n  KitOverlayModule,\r\n  KitPositionModule,\r\n} from '@ngx-kit/core';\r\nimport { UiDatePickerPopupComponent } from './ui-date-picker-popup/ui-date-picker-popup.component';\r\nimport { UiDatePickerComponent } from './ui-date-picker/ui-date-picker.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitFocusManagerModule,\r\n    KitClassModule,\r\n    KitPositionModule,\r\n    KitOutsideClickModule,\r\n  ],\r\n  declarations: [\r\n    UiDatePickerComponent,\r\n    UiDatePickerPopupComponent,\r\n  ],\r\n  exports: [\r\n    KitAnchorModule,\r\n    KitOutsideClickModule,\r\n    KitOverlayModule,\r\n    KitInputDateModule,\r\n    UiDatePickerComponent,\r\n    UiDatePickerPopupComponent,\r\n  ],\r\n})\r\nexport class UiDatePickerModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitFocusManagerModule,\r\n    KitClassModule,\r\n    KitPositionModule,\r\n    KitOutsideClickModule,\r\n  ],\r\n  declarations: [\r\n    UiDatePickerComponent,\r\n    UiDatePickerPopupComponent,\r\n  ],\r\n  exports: [\r\n    KitAnchorModule,\r\n    KitOutsideClickModule,\r\n    KitOverlayModule,\r\n    KitInputDateModule,\r\n    UiDatePickerComponent,\r\n    UiDatePickerPopupComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiDatePickerModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    KitAnchorModule,\r\n    KitOutsideClickModule,\r\n    KitOverlayModule,\r\n    KitInputDateModule,\r\n    UiDatePickerComponent,\r\n    UiDatePickerPopupComponent,\r\n  ]"}}}]},{"fileName":"lib/ui-date-picker/ui-date-picker.ts","type":"ts","text":"export * from './ui-date-picker.module';\r\nexport * from './ui-date-picker/ui-date-picker.component';\r\nexport * from './ui-date-picker-popup/ui-date-picker-popup.component';\r\n","declars":[]},{"fileName":"lib/ui-date-picker/ui-date-picker/ui-date-picker.component.ts","type":"ts","text":"import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  forwardRef,\r\n  HostListener,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { KitDatePickerGrid, KitDatePickerService } from '@ngx-kit/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nexport const uiDatePickerValueAccessor: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => UiDatePickerComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  selector: 'ui-date-picker',\r\n  templateUrl: './ui-date-picker.component.html',\r\n  styleUrls: ['./ui-date-picker.component.scss'],\r\n  providers: [\r\n    uiDatePickerValueAccessor,\r\n    KitDatePickerService,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UiDatePickerComponent implements OnInit, ControlValueAccessor {\r\n  datesGrid: Observable<KitDatePickerGrid>;\r\n\r\n  monthCursor: Observable<Date | null>;\r\n\r\n  weekdays: Date[] = [];\r\n\r\n  @ViewChild('grid') grid: ElementRef;\r\n\r\n  private changes = new Subject<Date>();\r\n\r\n  private isDisabled = false;\r\n\r\n  private state: Date;\r\n\r\n  private touches = new Subject<void>();\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private service: KitDatePickerService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.weekdays = this.service.weekdays;\r\n    this.monthCursor = this.service.monthCursorChanges;\r\n    this.datesGrid = this.service.gridChanges;\r\n    this.service.pick.subscribe(date => {\r\n      this.setDate(date);\r\n    });\r\n    this.service.handleMove(this.grid.nativeElement);\r\n  }\r\n\r\n  @HostListener('swiperight') swiperightHandler() {\r\n    this.modMonth(1);\r\n  }\r\n\r\n  @HostListener('swipeleft') swipeleftHandler() {\r\n    this.modMonth(-1);\r\n  }\r\n\r\n  modMonth(modifier: number) {\r\n    this.service.modMonth(modifier);\r\n    this.touches.next();\r\n  }\r\n\r\n  modYear(modifier: number) {\r\n    this.service.modYear(modifier);\r\n    this.touches.next();\r\n  }\r\n\r\n  registerOnChange(fn: any) {\r\n    this.changes.subscribe(fn);\r\n  }\r\n\r\n  registerOnTouched(fn: any) {\r\n    this.touches.subscribe(fn);\r\n  }\r\n\r\n  setDate(date: Date) {\r\n    this.state = date;\r\n    this.service.active = this.state;\r\n    this.changes.next(this.state);\r\n    this.touches.next();\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.isDisabled = isDisabled;\r\n  }\r\n\r\n  writeValue(rawValue: any) {\r\n    this.state = rawValue ? new Date(rawValue) : new Date();\r\n    this.service.active = this.state;\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-date-picker',\r\n  templateUrl: './ui-date-picker.component.html',\r\n  styleUrls: ['./ui-date-picker.component.scss'],\r\n  providers: [\r\n    uiDatePickerValueAccessor,\r\n    KitDatePickerService,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})"],"modifiers":["export"],"name":"UiDatePickerComponent","members":[{"kind":150,"name":"datesGrid","jsDoc":[],"isInternal":false,"type":"Observable<KitDatePickerGrid>","text":"datesGrid: Observable<KitDatePickerGrid>;","signature":"datesGrid: Observable<KitDatePickerGrid>"},{"kind":150,"name":"monthCursor","jsDoc":[],"isInternal":false,"type":"Observable<Date | null>","text":"monthCursor: Observable<Date | null>;","signature":"monthCursor: Observable<Date | null>"},{"kind":150,"name":"weekdays","jsDoc":[],"isInternal":false,"type":"Date[]","initializer":"[]","text":"weekdays: Date[] = [];","signature":"weekdays: Date[] = []"},{"kind":150,"name":"grid","jsDoc":[],"isInternal":false,"decorators":["@ViewChild('grid')"],"type":"ElementRef","text":"@ViewChild('grid') grid: ElementRef;","signature":"@ViewChild('grid') grid: ElementRef"},{"kind":150,"name":"changes","jsDoc":[],"isInternal":false,"modifiers":["private"],"initializer":"new Subject<Date>()","text":"private changes = new Subject<Date>();","signature":"private changes = new Subject<Date>()"},{"kind":150,"name":"isDisabled","jsDoc":[],"isInternal":false,"modifiers":["private"],"initializer":"false","text":"private isDisabled = false;","signature":"private isDisabled = false"},{"kind":150,"name":"state","jsDoc":[],"isInternal":false,"modifiers":["private"],"type":"Date","text":"private state: Date;","signature":"private state: Date"},{"kind":150,"name":"touches","jsDoc":[],"isInternal":false,"modifiers":["private"],"initializer":"new Subject<void>()","text":"private touches = new Subject<void>();","signature":"private touches = new Subject<void>()"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private cdr: ChangeDetectorRef","private service: KitDatePickerService"],"text":"constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private service: KitDatePickerService,\r\n  ) {\r\n  }","signature":"constructor(private cdr: ChangeDetectorRef, private service: KitDatePickerService)"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n    this.weekdays = this.service.weekdays;\r\n    this.monthCursor = this.service.monthCursorChanges;\r\n    this.datesGrid = this.service.gridChanges;\r\n    this.service.pick.subscribe(date => {\r\n      this.setDate(date);\r\n    });\r\n    this.service.handleMove(this.grid.nativeElement);\r\n  }","signature":"ngOnInit()"},{"kind":152,"name":"swiperightHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('swiperight')"],"parameters":[],"text":"@HostListener('swiperight') swiperightHandler() {\r\n    this.modMonth(1);\r\n  }","signature":"@HostListener('swiperight') swiperightHandler()"},{"kind":152,"name":"swipeleftHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('swipeleft')"],"parameters":[],"text":"@HostListener('swipeleft') swipeleftHandler() {\r\n    this.modMonth(-1);\r\n  }","signature":"@HostListener('swipeleft') swipeleftHandler()"},{"kind":152,"name":"modMonth","jsDoc":[],"isInternal":false,"parameters":["modifier: number"],"text":"modMonth(modifier: number) {\r\n    this.service.modMonth(modifier);\r\n    this.touches.next();\r\n  }","signature":"modMonth(modifier: number)"},{"kind":152,"name":"modYear","jsDoc":[],"isInternal":false,"parameters":["modifier: number"],"text":"modYear(modifier: number) {\r\n    this.service.modYear(modifier);\r\n    this.touches.next();\r\n  }","signature":"modYear(modifier: number)"},{"kind":152,"name":"registerOnChange","jsDoc":[],"isInternal":false,"parameters":["fn: any"],"text":"registerOnChange(fn: any) {\r\n    this.changes.subscribe(fn);\r\n  }","signature":"registerOnChange(fn: any)"},{"kind":152,"name":"registerOnTouched","jsDoc":[],"isInternal":false,"parameters":["fn: any"],"text":"registerOnTouched(fn: any) {\r\n    this.touches.subscribe(fn);\r\n  }","signature":"registerOnTouched(fn: any)"},{"kind":152,"name":"setDate","jsDoc":[],"isInternal":false,"parameters":["date: Date"],"text":"setDate(date: Date) {\r\n    this.state = date;\r\n    this.service.active = this.state;\r\n    this.changes.next(this.state);\r\n    this.touches.next();\r\n  }","signature":"setDate(date: Date)"},{"kind":152,"name":"setDisabledState","jsDoc":[],"isInternal":false,"parameters":["isDisabled: boolean"],"text":"setDisabledState(isDisabled: boolean) {\r\n    this.isDisabled = isDisabled;\r\n  }","signature":"setDisabledState(isDisabled: boolean)"},{"kind":152,"name":"writeValue","jsDoc":[],"isInternal":false,"parameters":["rawValue: any"],"text":"writeValue(rawValue: any) {\r\n    this.state = rawValue ? new Date(rawValue) : new Date();\r\n    this.service.active = this.state;\r\n    this.cdr.detectChanges();\r\n  }","signature":"writeValue(rawValue: any)"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-date-picker'"}}}]},{"fileName":"lib/ui-dialog/demo/ui-dialog-demo.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component, OnInit, TemplateRef } from '@angular/core';\nimport { UiDialogService } from '../ui-dialog.service';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-dialog-demo.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UiDialogDemoComponent implements OnInit {\n  constructor(private dialog: UiDialogService) {\n  }\n\n  ngOnInit() {\n  }\n\n  alert() {\n    this.dialog.alert({message: 'Alert message'});\n  }\n\n  alertWithTemplate(template: TemplateRef<any>) {\n    this.dialog.alert({template});\n  }\n\n  alertWithHandler() {\n    this.dialog\n      .alert({message: 'Alert message'})\n      .subscribe(() => {\n        alert('Alert closed');\n      });\n  }\n\n  alertWithColor(color: string) {\n    this.dialog.alert({message: 'Message with color', color});\n  }\n\n  confirm() {\n    this.dialog\n      .confirm({message: 'Want to confirm?'})\n      .subscribe(result => {\n        alert(result ? 'Confirmed!' : 'Canceled!');\n      });\n  }\n\n  prompt(template: TemplateRef<any>) {\n    this.dialog\n      .prompt<{model: string}>({template: template})\n      .subscribe(result => {\n        if (result !== false) {\n          alert(`Model: \"${result.model}\"`);\n        } else {\n          alert('Prompt canceled');\n        }\n      });\n  }\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-dialog-demo.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})"],"modifiers":["export"],"name":"UiDialogDemoComponent","members":[{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private dialog: UiDialogService"],"text":"constructor(private dialog: UiDialogService) {\n  }","signature":"constructor(private dialog: UiDialogService)"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\n  }","signature":"ngOnInit()"},{"kind":152,"name":"alert","jsDoc":[],"isInternal":false,"parameters":[],"text":"alert() {\n    this.dialog.alert({message: 'Alert message'});\n  }","signature":"alert()"},{"kind":152,"name":"alertWithTemplate","jsDoc":[],"isInternal":false,"parameters":["template: TemplateRef<any>"],"text":"alertWithTemplate(template: TemplateRef<any>) {\n    this.dialog.alert({template});\n  }","signature":"alertWithTemplate(template: TemplateRef<any>)"},{"kind":152,"name":"alertWithHandler","jsDoc":[],"isInternal":false,"parameters":[],"text":"alertWithHandler() {\n    this.dialog\n      .alert({message: 'Alert message'})\n      .subscribe(() => {\n        alert('Alert closed');\n      });\n  }","signature":"alertWithHandler()"},{"kind":152,"name":"alertWithColor","jsDoc":[],"isInternal":false,"parameters":["color: string"],"text":"alertWithColor(color: string) {\n    this.dialog.alert({message: 'Message with color', color});\n  }","signature":"alertWithColor(color: string)"},{"kind":152,"name":"confirm","jsDoc":[],"isInternal":false,"parameters":[],"text":"confirm() {\n    this.dialog\n      .confirm({message: 'Want to confirm?'})\n      .subscribe(result => {\n        alert(result ? 'Confirmed!' : 'Canceled!');\n      });\n  }","signature":"confirm()"},{"kind":152,"name":"prompt","jsDoc":[],"isInternal":false,"parameters":["template: TemplateRef<any>"],"text":"prompt(template: TemplateRef<any>) {\n    this.dialog\n      .prompt<{model: string}>({template: template})\n      .subscribe(result => {\n        if (result !== false) {\n          alert(`Model: \"${result.model}\"`);\n        } else {\n          alert('Prompt canceled');\n        }\n      });\n  }","signature":"prompt(template: TemplateRef<any>)"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-dialog/demo/ui-dialog-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { UiDialogModule } from '../ui-dialog.module';\r\nimport { UiDialogDemoComponent } from './ui-dialog-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiDialogModule,\r\n  ],\r\n  declarations: [\r\n    UiDialogDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiDialogDemoComponent,\r\n  ],\r\n})\r\nexport class UiDialogDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiDialogModule,\r\n  ],\r\n  declarations: [\r\n    UiDialogDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiDialogDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiDialogDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-dialog/meta.ts","type":"ts","text":"import { TemplateRef } from '@angular/core';\r\n\r\nexport enum UiDialogType {\r\n  Alert = 'alert',\r\n  Confirm = 'confirm',\r\n  Prompt = 'prompt',\r\n}\r\n\r\nexport interface UiDialogOptions {\r\n  type: UiDialogType;\r\n  header: string;\r\n  message?: string;\r\n  template?: TemplateRef<any>;\r\n  color: string;\r\n}\r\n","declars":[{"kind":231,"kindString":"interface","jsDoc":[],"isInternal":false,"name":"UiDialogOptions","members":[{"kind":149,"jsDoc":[],"isInternal":false,"name":"type","type":"UiDialogType","text":"type: UiDialogType;","signature":"type(): UiDialogType"},{"kind":149,"jsDoc":[],"isInternal":false,"name":"header","type":"string","text":"header: string;","signature":"header(): string"},{"kind":149,"jsDoc":[],"isInternal":false,"name":"message","type":"string","text":"message?: string;","signature":"message(): string"},{"kind":149,"jsDoc":[],"isInternal":false,"name":"template","type":"TemplateRef<any>","text":"template?: TemplateRef<any>;","signature":"template(): TemplateRef<any>"},{"kind":149,"jsDoc":[],"isInternal":false,"name":"color","type":"string","text":"color: string;","signature":"color(): string"}]}]},{"fileName":"lib/ui-dialog/ui-dialog.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { KitClassModule } from '@ngx-kit/core';\r\nimport { UiDialogComponent } from './ui-dialog/ui-dialog.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    KitClassModule,\r\n  ],\r\n  declarations: [\r\n    UiDialogComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiDialogComponent,\r\n  ],\r\n})\r\nexport class UiDialogModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    KitClassModule,\r\n  ],\r\n  declarations: [\r\n    UiDialogComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiDialogComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiDialogModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-dialog/ui-dialog.service.ts","type":"ts","text":"import { Injectable, TemplateRef } from '@angular/core';\r\nimport { KitModalService } from '@ngx-kit/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { UiDialogType } from './meta';\r\nimport { UiDialogComponent } from './ui-dialog/ui-dialog.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UiDialogService {\r\n  constructor(private modal: KitModalService) {\r\n  }\r\n\r\n  alert({header = 'Alert', message, template, color = 'default'}: {\r\n    header?: string;\r\n    message?: string;\r\n    template?: TemplateRef<any>;\r\n    color?: string;\r\n  }): Observable<void> {\r\n    const ref = this.modal.show({component: UiDialogComponent});\r\n    ref.input({\r\n      options: {\r\n        type: UiDialogType.Alert,\r\n        header,\r\n        message,\r\n        template,\r\n        color,\r\n      },\r\n    });\r\n    const result = new Subject<void>();\r\n    ref.onClose.subscribe(() => {\r\n      result.next();\r\n    });\r\n    return result;\r\n  }\r\n\r\n  confirm({header = 'Confirm', message, template, color = 'default'}: {\r\n    header?: string;\r\n    message?: string;\r\n    template?: TemplateRef<any>;\r\n    color?: string;\r\n  }): Observable<boolean> {\r\n    const ref = this.modal.show({component: UiDialogComponent});\r\n    ref.input({\r\n      options: {\r\n        type: UiDialogType.Confirm,\r\n        header,\r\n        message,\r\n        template,\r\n        color,\r\n      },\r\n    });\r\n    const result = new Subject<boolean>();\r\n    ref.onClose.subscribe(() => {\r\n      result.next(ref.instance.result);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  prompt<T>({header = 'Prompt', template, color = 'default'}: {\r\n    header?: string;\r\n    template: TemplateRef<any>;\r\n    color?: string;\r\n  }): Observable<T | false> {\r\n    const ref = this.modal.show({component: UiDialogComponent});\r\n    ref.input({\r\n      options: {\r\n        type: UiDialogType.Prompt,\r\n        header,\r\n        template,\r\n        color,\r\n      },\r\n    });\r\n    const result = new Subject<T>();\r\n    ref.onClose.subscribe(() => {\r\n      result.next(ref.instance.result);\r\n    });\r\n    return result;\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Injectable({\r\n  providedIn: 'root',\r\n})"],"modifiers":["export"],"name":"UiDialogService","members":[{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private modal: KitModalService"],"text":"constructor(private modal: KitModalService) {\r\n  }","signature":"constructor(private modal: KitModalService)"},{"kind":152,"name":"alert","jsDoc":[],"isInternal":false,"parameters":["{header = 'Alert', message, template, color = 'default'}: {\r\n    header?: string;\r\n    message?: string;\r\n    template?: TemplateRef<any>;\r\n    color?: string;\r\n  }"],"type":"Observable<void>","text":"alert({header = 'Alert', message, template, color = 'default'}: {\r\n    header?: string;\r\n    message?: string;\r\n    template?: TemplateRef<any>;\r\n    color?: string;\r\n  }): Observable<void> {\r\n    const ref = this.modal.show({component: UiDialogComponent});\r\n    ref.input({\r\n      options: {\r\n        type: UiDialogType.Alert,\r\n        header,\r\n        message,\r\n        template,\r\n        color,\r\n      },\r\n    });\r\n    const result = new Subject<void>();\r\n    ref.onClose.subscribe(() => {\r\n      result.next();\r\n    });\r\n    return result;\r\n  }","signature":"alert({header = 'Alert', message, template, color = 'default'}: {\r\n    header?: string;\r\n    message?: string;\r\n    template?: TemplateRef<any>;\r\n    color?: string;\r\n  }): Observable<void>"},{"kind":152,"name":"confirm","jsDoc":[],"isInternal":false,"parameters":["{header = 'Confirm', message, template, color = 'default'}: {\r\n    header?: string;\r\n    message?: string;\r\n    template?: TemplateRef<any>;\r\n    color?: string;\r\n  }"],"type":"Observable<boolean>","text":"confirm({header = 'Confirm', message, template, color = 'default'}: {\r\n    header?: string;\r\n    message?: string;\r\n    template?: TemplateRef<any>;\r\n    color?: string;\r\n  }): Observable<boolean> {\r\n    const ref = this.modal.show({component: UiDialogComponent});\r\n    ref.input({\r\n      options: {\r\n        type: UiDialogType.Confirm,\r\n        header,\r\n        message,\r\n        template,\r\n        color,\r\n      },\r\n    });\r\n    const result = new Subject<boolean>();\r\n    ref.onClose.subscribe(() => {\r\n      result.next(ref.instance.result);\r\n    });\r\n    return result;\r\n  }","signature":"confirm({header = 'Confirm', message, template, color = 'default'}: {\r\n    header?: string;\r\n    message?: string;\r\n    template?: TemplateRef<any>;\r\n    color?: string;\r\n  }): Observable<boolean>"},{"kind":152,"name":"prompt","jsDoc":[],"isInternal":false,"parameters":["{header = 'Prompt', template, color = 'default'}: {\r\n    header?: string;\r\n    template: TemplateRef<any>;\r\n    color?: string;\r\n  }"],"type":"Observable<T | false>","text":"prompt<T>({header = 'Prompt', template, color = 'default'}: {\r\n    header?: string;\r\n    template: TemplateRef<any>;\r\n    color?: string;\r\n  }): Observable<T | false> {\r\n    const ref = this.modal.show({component: UiDialogComponent});\r\n    ref.input({\r\n      options: {\r\n        type: UiDialogType.Prompt,\r\n        header,\r\n        template,\r\n        color,\r\n      },\r\n    });\r\n    const result = new Subject<T>();\r\n    ref.onClose.subscribe(() => {\r\n      result.next(ref.instance.result);\r\n    });\r\n    return result;\r\n  }","signature":"prompt({header = 'Prompt', template, color = 'default'}: {\r\n    header?: string;\r\n    template: TemplateRef<any>;\r\n    color?: string;\r\n  }): Observable<T | false>"}],"ngMeta":{"type":"Injectable","decorator":{"providedIn":"'root'"}}}]},{"fileName":"lib/ui-dialog/ui-dialog.ts","type":"ts","text":"export * from './meta';\r\nexport * from './ui-dialog.module';\r\nexport * from './ui-dialog.service';\r\n","declars":[]},{"fileName":"lib/ui-dialog/ui-dialog/ui-dialog.component.ts","type":"ts","text":"import { animate, animateChild, query, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, Component, HostBinding, Input, OnChanges } from '@angular/core';\nimport { KitModalRef } from '@ngx-kit/core';\nimport { UiDialogOptions, UiDialogType } from '../meta';\n\n@Component({\n  selector: 'ui-dialog',\n  templateUrl: './ui-dialog.component.html',\n  styleUrls: ['./ui-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('host', [\n      transition(':enter, :leave', [\n        query('@*', animateChild()),\n      ]),\n    ]),\n    trigger('fade', [\n      transition(':enter', [\n        style({\n          opacity: 0.5,\n          transform: 'translateY(25px)',\n        }),\n        animate('150ms ease-out', style({\n          opacity: 1,\n          transform: 'translateY(0)',\n        })),\n      ]),\n      transition(':leave', [\n        style({opacity: 1}),\n        animate('150ms ease-in', style({\n          opacity: 0.5,\n          transform: 'translateY(-25px)',\n        })),\n      ]),\n    ]),\n  ],\n})\nexport class UiDialogComponent implements OnChanges {\n  @Input() options: UiDialogOptions;\n\n  @HostBinding('@host') hostTrigger = true;\n\n  result: any;\n\n  constructor(private ref: KitModalRef<UiDialogComponent>) {\n  }\n\n  ngOnChanges() {\n    if (this.options.type === UiDialogType.Prompt) {\n      this.result = {};\n    }\n  }\n\n  submitHandler() {\n    if (this.options.type !== UiDialogType.Prompt) {\n      this.result = true;\n    }\n    this.ref.close();\n  }\n\n  cancelHandler() {\n    this.result = false;\n    this.ref.close();\n  }\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\n  selector: 'ui-dialog',\n  templateUrl: './ui-dialog.component.html',\n  styleUrls: ['./ui-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('host', [\n      transition(':enter, :leave', [\n        query('@*', animateChild()),\n      ]),\n    ]),\n    trigger('fade', [\n      transition(':enter', [\n        style({\n          opacity: 0.5,\n          transform: 'translateY(25px)',\n        }),\n        animate('150ms ease-out', style({\n          opacity: 1,\n          transform: 'translateY(0)',\n        })),\n      ]),\n      transition(':leave', [\n        style({opacity: 1}),\n        animate('150ms ease-in', style({\n          opacity: 0.5,\n          transform: 'translateY(-25px)',\n        })),\n      ]),\n    ]),\n  ],\n})"],"modifiers":["export"],"name":"UiDialogComponent","members":[{"kind":150,"name":"options","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"UiDialogOptions","text":"@Input() options: UiDialogOptions;","signature":"@Input() options: UiDialogOptions"},{"kind":150,"name":"hostTrigger","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('@host')"],"initializer":"true","text":"@HostBinding('@host') hostTrigger = true;","signature":"@HostBinding('@host') hostTrigger = true"},{"kind":150,"name":"result","jsDoc":[],"isInternal":false,"type":"any","text":"result: any;","signature":"result: any"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private ref: KitModalRef<UiDialogComponent>"],"text":"constructor(private ref: KitModalRef<UiDialogComponent>) {\n  }","signature":"constructor(private ref: KitModalRef<UiDialogComponent>)"},{"kind":152,"name":"ngOnChanges","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnChanges() {\n    if (this.options.type === UiDialogType.Prompt) {\n      this.result = {};\n    }\n  }","signature":"ngOnChanges()"},{"kind":152,"name":"submitHandler","jsDoc":[],"isInternal":false,"parameters":[],"text":"submitHandler() {\n    if (this.options.type !== UiDialogType.Prompt) {\n      this.result = true;\n    }\n    this.ref.close();\n  }","signature":"submitHandler()"},{"kind":152,"name":"cancelHandler","jsDoc":[],"isInternal":false,"parameters":[],"text":"cancelHandler() {\n    this.result = false;\n    this.ref.close();\n  }","signature":"cancelHandler()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-dialog'"}}}]},{"fileName":"lib/ui-drawer/demo/ui-drawer-demo.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-drawer-demo.component.html',\n  styleUrls: ['./ui-drawer-demo.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UiDrawerDemoComponent implements OnInit {\n  display1 = false;\n\n  display2_t = false;\n\n  display2_r = false;\n\n  display2_b = false;\n\n  display2_l = false;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-drawer-demo.component.html',\n  styleUrls: ['./ui-drawer-demo.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})"],"modifiers":["export"],"name":"UiDrawerDemoComponent","members":[{"kind":150,"name":"display1","jsDoc":[],"isInternal":false,"initializer":"false","text":"display1 = false;","signature":"display1 = false"},{"kind":150,"name":"display2_t","jsDoc":[],"isInternal":false,"initializer":"false","text":"display2_t = false;","signature":"display2_t = false"},{"kind":150,"name":"display2_r","jsDoc":[],"isInternal":false,"initializer":"false","text":"display2_r = false;","signature":"display2_r = false"},{"kind":150,"name":"display2_b","jsDoc":[],"isInternal":false,"initializer":"false","text":"display2_b = false;","signature":"display2_b = false"},{"kind":150,"name":"display2_l","jsDoc":[],"isInternal":false,"initializer":"false","text":"display2_l = false;","signature":"display2_l = false"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":[],"text":"constructor() {\n  }","signature":"constructor()"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\n  }","signature":"ngOnInit()"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-drawer/demo/ui-drawer-demo.module.ts","type":"ts","text":"import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UiDrawerModule } from '../ui-drawer.module';\r\nimport { UiDrawerDemoComponent } from './ui-drawer-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiDrawerModule,\r\n  ],\r\n  declarations: [\r\n    UiDrawerDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiDrawerDemoComponent,\r\n  ],\r\n})\r\nexport class UiDrawerDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiDrawerModule,\r\n  ],\r\n  declarations: [\r\n    UiDrawerDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiDrawerDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiDrawerDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-drawer/meta.ts","type":"ts","text":"export type UiDrawerPosition = 'top' | 'right' | 'bottom' | 'left';\r\n","declars":[{"kind":232,"kindString":"typeAlias","jsDoc":[],"isInternal":false,"name":"UiDrawerPosition","type":"'top' | 'right' | 'bottom' | 'left'","text":"export type UiDrawerPosition = 'top' | 'right' | 'bottom' | 'left';"}]},{"fileName":"lib/ui-drawer/ui-drawer.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { KitClassModule, KitModalModule, KitOverlayModule } from '@ngx-kit/core';\r\nimport { UiDrawerComponent } from './ui-drawer/ui-drawer.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitClassModule,\r\n  ],\r\n  declarations: [\r\n    UiDrawerComponent,\r\n  ],\r\n  exports: [\r\n    UiDrawerComponent,\r\n    KitOverlayModule,\r\n    KitModalModule,\r\n  ],\r\n})\r\nexport class UiDrawerModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitClassModule,\r\n  ],\r\n  declarations: [\r\n    UiDrawerComponent,\r\n  ],\r\n  exports: [\r\n    UiDrawerComponent,\r\n    KitOverlayModule,\r\n    KitModalModule,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiDrawerModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    UiDrawerComponent,\r\n    KitOverlayModule,\r\n    KitModalModule,\r\n  ]"}}}]},{"fileName":"lib/ui-drawer/ui-drawer.ts","type":"ts","text":"export * from './ui-drawer.module';\r\nexport * from './ui-drawer/ui-drawer.component';\r\n","declars":[]},{"fileName":"lib/ui-drawer/ui-drawer/ui-drawer.component.ts","type":"ts","text":"import { animate, animateChild, query, style, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectionStrategy, Component, HostBinding, Input, OnInit } from '@angular/core';\r\nimport { UiDrawerPosition } from '../meta';\r\n\r\n@Component({\r\n  selector: 'ui-drawer',\r\n  templateUrl: './ui-drawer.component.html',\r\n  styleUrls: ['./ui-drawer.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('host', [\r\n      transition(':enter, :leave', [\r\n        query('@*', animateChild()),\r\n      ]),\r\n    ]),\r\n    trigger('slide', [\r\n      // top position\r\n      transition('* => top', [\r\n        style({\r\n          transform: 'translateY(-100%)',\r\n          opacity: 0.5,\r\n        }),\r\n        animate('250ms ease-out', style({\r\n          transform: 'translateY(0)',\r\n          opacity: 1,\r\n        })),\r\n      ]),\r\n      transition('top => *', [\r\n        animate('250ms ease-in', style({\r\n          transform: 'translateY(-100%)',\r\n          opacity: 0.5,\r\n        })),\r\n      ]),\r\n      // right position\r\n      transition('* => right', [\r\n        style({\r\n          transform: 'translateX(100%)',\r\n          opacity: 0.5,\r\n        }),\r\n        animate('250ms ease-out', style({\r\n          transform: 'translateX(0)',\r\n          opacity: 1,\r\n        })),\r\n      ]),\r\n      transition('right => *', [\r\n        animate('250ms ease-in', style({\r\n          transform: 'translateX(100%)',\r\n          opacity: 0.5,\r\n        })),\r\n      ]),\r\n      // bottom position\r\n      transition('* => bottom', [\r\n        style({\r\n          transform: 'translateY(100%)',\r\n          opacity: 0.5,\r\n        }),\r\n        animate('250ms ease-out', style({\r\n          transform: 'translateY(0)',\r\n          opacity: 1,\r\n        })),\r\n      ]),\r\n      transition('bottom => *', [\r\n        animate('250ms ease-in', style({\r\n          transform: 'translateY(100%)',\r\n          opacity: 0.5,\r\n        })),\r\n      ]),\r\n      // left position\r\n      transition('* => left', [\r\n        style({\r\n          transform: 'translateX(-100%)',\r\n          opacity: 0.5,\r\n        }),\r\n        animate('250ms ease-out', style({\r\n          transform: 'translateX(0)',\r\n          opacity: 1,\r\n        })),\r\n      ]),\r\n      transition('left => *', [\r\n        animate('250ms ease-in', style({\r\n          transform: 'translateX(-100%)',\r\n          opacity: 0.5,\r\n        })),\r\n      ]),\r\n    ]),\r\n    trigger('fade', [\r\n      transition(':enter', [\r\n        style({\r\n          opacity: 0,\r\n        }),\r\n        animate('450ms ease-out', style({\r\n          opacity: 1,\r\n        })),\r\n      ]),\r\n      transition(':leave', [\r\n        style({opacity: 1}),\r\n        animate('50ms ease-in', style({\r\n          opacity: 0,\r\n        })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class UiDrawerComponent implements OnInit {\r\n  @Input() position: UiDrawerPosition = 'right';\r\n\r\n  @HostBinding('@host') hostTrigger = true;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-drawer',\r\n  templateUrl: './ui-drawer.component.html',\r\n  styleUrls: ['./ui-drawer.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('host', [\r\n      transition(':enter, :leave', [\r\n        query('@*', animateChild()),\r\n      ]),\r\n    ]),\r\n    trigger('slide', [\r\n      // top position\r\n      transition('* => top', [\r\n        style({\r\n          transform: 'translateY(-100%)',\r\n          opacity: 0.5,\r\n        }),\r\n        animate('250ms ease-out', style({\r\n          transform: 'translateY(0)',\r\n          opacity: 1,\r\n        })),\r\n      ]),\r\n      transition('top => *', [\r\n        animate('250ms ease-in', style({\r\n          transform: 'translateY(-100%)',\r\n          opacity: 0.5,\r\n        })),\r\n      ]),\r\n      // right position\r\n      transition('* => right', [\r\n        style({\r\n          transform: 'translateX(100%)',\r\n          opacity: 0.5,\r\n        }),\r\n        animate('250ms ease-out', style({\r\n          transform: 'translateX(0)',\r\n          opacity: 1,\r\n        })),\r\n      ]),\r\n      transition('right => *', [\r\n        animate('250ms ease-in', style({\r\n          transform: 'translateX(100%)',\r\n          opacity: 0.5,\r\n        })),\r\n      ]),\r\n      // bottom position\r\n      transition('* => bottom', [\r\n        style({\r\n          transform: 'translateY(100%)',\r\n          opacity: 0.5,\r\n        }),\r\n        animate('250ms ease-out', style({\r\n          transform: 'translateY(0)',\r\n          opacity: 1,\r\n        })),\r\n      ]),\r\n      transition('bottom => *', [\r\n        animate('250ms ease-in', style({\r\n          transform: 'translateY(100%)',\r\n          opacity: 0.5,\r\n        })),\r\n      ]),\r\n      // left position\r\n      transition('* => left', [\r\n        style({\r\n          transform: 'translateX(-100%)',\r\n          opacity: 0.5,\r\n        }),\r\n        animate('250ms ease-out', style({\r\n          transform: 'translateX(0)',\r\n          opacity: 1,\r\n        })),\r\n      ]),\r\n      transition('left => *', [\r\n        animate('250ms ease-in', style({\r\n          transform: 'translateX(-100%)',\r\n          opacity: 0.5,\r\n        })),\r\n      ]),\r\n    ]),\r\n    trigger('fade', [\r\n      transition(':enter', [\r\n        style({\r\n          opacity: 0,\r\n        }),\r\n        animate('450ms ease-out', style({\r\n          opacity: 1,\r\n        })),\r\n      ]),\r\n      transition(':leave', [\r\n        style({opacity: 1}),\r\n        animate('50ms ease-in', style({\r\n          opacity: 0,\r\n        })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiDrawerComponent","members":[{"kind":150,"name":"position","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"UiDrawerPosition","initializer":"'right'","text":"@Input() position: UiDrawerPosition = 'right';","signature":"@Input() position: UiDrawerPosition = 'right'"},{"kind":150,"name":"hostTrigger","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('@host')"],"initializer":"true","text":"@HostBinding('@host') hostTrigger = true;","signature":"@HostBinding('@host') hostTrigger = true"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":[],"text":"constructor() {\r\n  }","signature":"constructor()"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n  }","signature":"ngOnInit()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-drawer'"}}}]},{"fileName":"lib/ui-dropdown/demo/ui-dropdown-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-dropdown-demo.component.html',\n})\nexport class UiDropdownDemoComponent {\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-dropdown-demo.component.html',\n})"],"modifiers":["export"],"name":"UiDropdownDemoComponent","members":[],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-dropdown/demo/ui-dropdown-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiDropdownModule } from '../ui-dropdown.module';\nimport { UiDropdownDemoComponent } from './ui-dropdown-demo.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    UiDropdownModule,\n  ],\n  declarations: [\n    UiDropdownDemoComponent,\n  ],\n  entryComponents: [\n    UiDropdownDemoComponent,\n  ],\n})\nexport class UiDropdownDemoModule {\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\n  imports: [\n    CommonModule,\n    UiDropdownModule,\n  ],\n  declarations: [\n    UiDropdownDemoComponent,\n  ],\n  entryComponents: [\n    UiDropdownDemoComponent,\n  ],\n})"],"modifiers":["export"],"name":"UiDropdownDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-dropdown/ui-dropdown-item/ui-dropdown-item.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component, HostListener, Input } from '@angular/core';\r\nimport { UiDropdownComponent } from '../ui-dropdown/ui-dropdown.component';\r\n\r\n@Component({\r\n  selector: 'ui-dropdown-item,button[uiDropdownItem],a[uiDropdownItem]',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-dropdown-item.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UiDropdownItemComponent {\r\n  @Input() uiDropdownItem: void;\r\n\r\n  constructor(private dropdown: UiDropdownComponent) {\r\n  }\r\n\r\n  @HostListener('click') clickHandler() {\r\n    this.dropdown.toggle.close();\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-dropdown-item,button[uiDropdownItem],a[uiDropdownItem]',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-dropdown-item.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})"],"modifiers":["export"],"name":"UiDropdownItemComponent","members":[{"kind":150,"name":"uiDropdownItem","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"void","text":"@Input() uiDropdownItem: void;","signature":"@Input() uiDropdownItem: void"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private dropdown: UiDropdownComponent"],"text":"constructor(private dropdown: UiDropdownComponent) {\r\n  }","signature":"constructor(private dropdown: UiDropdownComponent)"},{"kind":152,"name":"clickHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('click')"],"parameters":[],"text":"@HostListener('click') clickHandler() {\r\n    this.dropdown.toggle.close();\r\n  }","signature":"@HostListener('click') clickHandler()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-dropdown-item,button[uiDropdownItem],a[uiDropdownItem]'"}}}]},{"fileName":"lib/ui-dropdown/ui-dropdown.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { KitOutsideClickModule, KitOverlayModule, KitPositionModule } from '@ngx-kit/core';\r\nimport { UiDropdownItemComponent } from './ui-dropdown-item/ui-dropdown-item.component';\r\nimport { UiDropdownComponent } from './ui-dropdown/ui-dropdown.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitPositionModule,\r\n    KitOutsideClickModule,\r\n  ],\r\n  declarations: [\r\n    UiDropdownComponent,\r\n    UiDropdownItemComponent,\r\n  ],\r\n  exports: [\r\n    KitOverlayModule,\r\n    UiDropdownComponent,\r\n    UiDropdownItemComponent,\r\n  ],\r\n})\r\nexport class UiDropdownModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitPositionModule,\r\n    KitOutsideClickModule,\r\n  ],\r\n  declarations: [\r\n    UiDropdownComponent,\r\n    UiDropdownItemComponent,\r\n  ],\r\n  exports: [\r\n    KitOverlayModule,\r\n    UiDropdownComponent,\r\n    UiDropdownItemComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiDropdownModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    KitOverlayModule,\r\n    UiDropdownComponent,\r\n    UiDropdownItemComponent,\r\n  ]"}}}]},{"fileName":"lib/ui-dropdown/ui-dropdown.ts","type":"ts","text":"export * from './ui-dropdown.module';\r\nexport * from './ui-dropdown/ui-dropdown.component';\r\n","declars":[]},{"fileName":"lib/ui-dropdown/ui-dropdown/ui-dropdown.component.ts","type":"ts","text":"import { animate, animateChild, query, style, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\r\nimport { KitOverlayToggleDirective, KitPinPosition } from '@ngx-kit/core';\r\n\r\n@Component({\r\n  selector: 'ui-dropdown',\r\n  templateUrl: './ui-dropdown.component.html',\r\n  styleUrls: ['./ui-dropdown.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('host', [\r\n      transition(':enter, :leave', [\r\n        query('@*', animateChild(), {optional: true}),\r\n      ]),\r\n    ]),\r\n    trigger('fade', [\r\n      transition(':enter', [\r\n        style({\r\n          opacity: 0,\r\n          transform: 'scaleY(0.5)',\r\n        }),\r\n        animate('150ms ease-out', style({\r\n          opacity: 1,\r\n          transform: 'scaleY(1)',\r\n        })),\r\n      ]),\r\n      transition(':leave', [\r\n        style({opacity: 1}),\r\n        animate('150ms ease-in', style({\r\n          opacity: 0,\r\n          transform: 'scaleY(0.5)',\r\n        })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class UiDropdownComponent {\r\n  @Input() toggle: KitOverlayToggleDirective;\r\n\r\n  @Input() position: KitPinPosition = 'bottom-right';\r\n\r\n  @HostBinding('@host') hostTrigger = true;\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-dropdown',\r\n  templateUrl: './ui-dropdown.component.html',\r\n  styleUrls: ['./ui-dropdown.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('host', [\r\n      transition(':enter, :leave', [\r\n        query('@*', animateChild(), {optional: true}),\r\n      ]),\r\n    ]),\r\n    trigger('fade', [\r\n      transition(':enter', [\r\n        style({\r\n          opacity: 0,\r\n          transform: 'scaleY(0.5)',\r\n        }),\r\n        animate('150ms ease-out', style({\r\n          opacity: 1,\r\n          transform: 'scaleY(1)',\r\n        })),\r\n      ]),\r\n      transition(':leave', [\r\n        style({opacity: 1}),\r\n        animate('150ms ease-in', style({\r\n          opacity: 0,\r\n          transform: 'scaleY(0.5)',\r\n        })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiDropdownComponent","members":[{"kind":150,"name":"toggle","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"KitOverlayToggleDirective","text":"@Input() toggle: KitOverlayToggleDirective;","signature":"@Input() toggle: KitOverlayToggleDirective"},{"kind":150,"name":"position","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"KitPinPosition","initializer":"'bottom-right'","text":"@Input() position: KitPinPosition = 'bottom-right';","signature":"@Input() position: KitPinPosition = 'bottom-right'"},{"kind":150,"name":"hostTrigger","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('@host')"],"initializer":"true","text":"@HostBinding('@host') hostTrigger = true;","signature":"@HostBinding('@host') hostTrigger = true"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-dropdown'"}}}]},{"fileName":"lib/ui-file/demo/ui-file-demo.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { UiFileSelect } from '../meta';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-file-demo.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UiFileDemoComponent {\n  files: UiFileSelect;\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-file-demo.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})"],"modifiers":["export"],"name":"UiFileDemoComponent","members":[{"kind":150,"name":"files","jsDoc":[],"isInternal":false,"type":"UiFileSelect","text":"files: UiFileSelect;","signature":"files: UiFileSelect"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-file/demo/ui-file-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { UiFileModule } from '../ui-file.module';\r\nimport { UiFileDemoComponent } from './ui-file-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiFileModule,\r\n  ],\r\n  declarations: [\r\n    UiFileDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiFileDemoComponent,\r\n  ],\r\n})\r\nexport class UiFileDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiFileModule,\r\n  ],\r\n  declarations: [\r\n    UiFileDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiFileDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiFileDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-file/meta.ts","type":"ts","text":"export interface UiFileSelect {\r\n  file: File;\r\n  data: any;\r\n}\r\n","declars":[{"kind":231,"kindString":"interface","jsDoc":[],"isInternal":false,"name":"UiFileSelect","members":[{"kind":149,"jsDoc":[],"isInternal":false,"name":"file","type":"File","text":"file: File;","signature":"file(): File"},{"kind":149,"jsDoc":[],"isInternal":false,"name":"data","type":"any","text":"data: any;","signature":"data(): any"}]}]},{"fileName":"lib/ui-file/ui-file-holder/ui-file-holder.directive.ts","type":"ts","text":"import { Directive, Input, OnInit } from '@angular/core';\r\nimport { KitStyleService } from '@ngx-kit/core';\r\n\r\n@Directive({\r\n  selector: '[uiFileHolder]',\r\n  providers: [\r\n    KitStyleService,\r\n  ],\r\n})\r\nexport class UiFileHolderDirective implements OnInit {\r\n  @Input() uiFileWrapper: void;\r\n\r\n  constructor(private style: KitStyleService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.style.style = {\r\n      overflow: 'hidden',\r\n      position: 'relative',\r\n    };\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Directive({\r\n  selector: '[uiFileHolder]',\r\n  providers: [\r\n    KitStyleService,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiFileHolderDirective","members":[{"kind":150,"name":"uiFileWrapper","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"void","text":"@Input() uiFileWrapper: void;","signature":"@Input() uiFileWrapper: void"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private style: KitStyleService"],"text":"constructor(private style: KitStyleService) {\r\n  }","signature":"constructor(private style: KitStyleService)"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n    this.style.style = {\r\n      overflow: 'hidden',\r\n      position: 'relative',\r\n    };\r\n  }","signature":"ngOnInit()"}],"ngMeta":{"type":"Directive","decorator":{"selector":"'[uiFileHolder]'"}}}]},{"fileName":"lib/ui-file/ui-file.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { UiFileHolderDirective } from './ui-file-holder/ui-file-holder.directive';\r\nimport { UiFileComponent } from './ui-file/ui-file.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [\r\n    UiFileComponent,\r\n    UiFileHolderDirective,\r\n  ],\r\n  exports: [\r\n    UiFileComponent,\r\n    UiFileHolderDirective,\r\n  ],\r\n})\r\nexport class UiFileModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [\r\n    UiFileComponent,\r\n    UiFileHolderDirective,\r\n  ],\r\n  exports: [\r\n    UiFileComponent,\r\n    UiFileHolderDirective,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiFileModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    UiFileComponent,\r\n    UiFileHolderDirective,\r\n  ]"}}}]},{"fileName":"lib/ui-file/ui-file.ts","type":"ts","text":"export * from './meta';\r\nexport * from './ui-file.module';\r\nexport * from './ui-file/ui-file.component';\r\n","declars":[]},{"fileName":"lib/ui-file/ui-file/ui-file.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component, EventEmitter, HostListener, Output } from '@angular/core';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { UiFileSelect } from '../meta';\r\n\r\n@Component({\r\n  // tslint:disable-next-line\r\n  selector: 'input[type=\"file\"][uiFile]',\r\n  template: '',\r\n  styleUrls: ['./ui-file.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UiFileComponent {\r\n  @Output() select = new EventEmitter<UiFileSelect[]>();\r\n\r\n  @Output() error = new EventEmitter<string>();\r\n\r\n  @HostListener('change', ['$event']) changeHandler(event: any) {\r\n    if (event && event.target) {\r\n      forkJoin(Array.from(event.target.files as FileList).map(f => this.loadFile(f)))\r\n        .subscribe(files => {\r\n          this.select.emit(files);\r\n        }, error => {\r\n          this.error.next(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  private loadFile(file: File): Observable<UiFileSelect> {\r\n    return new Observable(observer => {\r\n      const reader = new FileReader();\r\n      reader.onload = (e: any) => {\r\n        observer.next({\r\n          file,\r\n          data: e.target.result,\r\n        });\r\n        observer.complete();\r\n      };\r\n      reader.onerror = () => {\r\n        observer.error('Read data error');\r\n      };\r\n      reader.readAsDataURL(file);\r\n    });\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  // tslint:disable-next-line\r\n  selector: 'input[type=\"file\"][uiFile]',\r\n  template: '',\r\n  styleUrls: ['./ui-file.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})"],"modifiers":["export"],"name":"UiFileComponent","members":[{"kind":150,"name":"select","jsDoc":[],"isInternal":false,"decorators":["@Output()"],"initializer":"new EventEmitter<UiFileSelect[]>()","text":"@Output() select = new EventEmitter<UiFileSelect[]>();","signature":"@Output() select = new EventEmitter<UiFileSelect[]>()"},{"kind":150,"name":"error","jsDoc":[],"isInternal":false,"decorators":["@Output()"],"initializer":"new EventEmitter<string>()","text":"@Output() error = new EventEmitter<string>();","signature":"@Output() error = new EventEmitter<string>()"},{"kind":152,"name":"changeHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('change', ['$event'])"],"parameters":["event: any"],"text":"@HostListener('change', ['$event']) changeHandler(event: any) {\r\n    if (event && event.target) {\r\n      forkJoin(Array.from(event.target.files as FileList).map(f => this.loadFile(f)))\r\n        .subscribe(files => {\r\n          this.select.emit(files);\r\n        }, error => {\r\n          this.error.next(error);\r\n        });\r\n    }\r\n  }","signature":"@HostListener('change', ['$event']) changeHandler(event: any)"},{"kind":152,"name":"loadFile","jsDoc":[],"isInternal":false,"modifiers":["private"],"parameters":["file: File"],"type":"Observable<UiFileSelect>","text":"private loadFile(file: File): Observable<UiFileSelect> {\r\n    return new Observable(observer => {\r\n      const reader = new FileReader();\r\n      reader.onload = (e: any) => {\r\n        observer.next({\r\n          file,\r\n          data: e.target.result,\r\n        });\r\n        observer.complete();\r\n      };\r\n      reader.onerror = () => {\r\n        observer.error('Read data error');\r\n      };\r\n      reader.readAsDataURL(file);\r\n    });\r\n  }","signature":"private loadFile(file: File): Observable<UiFileSelect>"}],"ngMeta":{"type":"Component","decorator":{"selector":"'input[type=\"file\"][uiFile]'"}}}]},{"fileName":"lib/ui-form/demo/ui-form-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-form-demo.component.html',\n})\nexport class UiFormDemoComponent {\n  form1 = {\n    email: '',\n    name: '',\n  };\n\n  form2: FormGroup;\n\n  form3 = {\n    email: '',\n    name: '',\n  };\n\n  form4 = {\n    email: '',\n    name: '',\n  };\n\n  constructor(private builder: FormBuilder) {\n    this.form2 = this.builder.group({\n      email: ['', [Validators.required, Validators.email]],\n      name: [''],\n    });\n  }\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-form-demo.component.html',\n})"],"modifiers":["export"],"name":"UiFormDemoComponent","members":[{"kind":150,"name":"form1","jsDoc":[],"isInternal":false,"initializer":"{\n    email: '',\n    name: '',\n  }","text":"form1 = {\n    email: '',\n    name: '',\n  };","signature":"form1 = {\n    email: '',\n    name: '',\n  }"},{"kind":150,"name":"form2","jsDoc":[],"isInternal":false,"type":"FormGroup","text":"form2: FormGroup;","signature":"form2: FormGroup"},{"kind":150,"name":"form3","jsDoc":[],"isInternal":false,"initializer":"{\n    email: '',\n    name: '',\n  }","text":"form3 = {\n    email: '',\n    name: '',\n  };","signature":"form3 = {\n    email: '',\n    name: '',\n  }"},{"kind":150,"name":"form4","jsDoc":[],"isInternal":false,"initializer":"{\n    email: '',\n    name: '',\n  }","text":"form4 = {\n    email: '',\n    name: '',\n  };","signature":"form4 = {\n    email: '',\n    name: '',\n  }"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private builder: FormBuilder"],"text":"constructor(private builder: FormBuilder) {\n    this.form2 = this.builder.group({\n      email: ['', [Validators.required, Validators.email]],\n      name: [''],\n    });\n  }","signature":"constructor(private builder: FormBuilder)"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-form/demo/ui-form-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { UiFormModule } from '../ui-form.module';\r\nimport { UiFormDemoComponent } from './ui-form-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    UiFormModule,\r\n  ],\r\n  declarations: [\r\n    UiFormDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiFormDemoComponent,\r\n  ],\r\n})\r\nexport class UiFormDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    UiFormModule,\r\n  ],\r\n  declarations: [\r\n    UiFormDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiFormDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiFormDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-form/meta.ts","type":"ts","text":"export type UiFormLayout = 'stacked' | 'aligned' | 'inline';\r\n","declars":[{"kind":232,"kindString":"typeAlias","jsDoc":[],"isInternal":false,"name":"UiFormLayout","type":"'stacked' | 'aligned' | 'inline'","text":"export type UiFormLayout = 'stacked' | 'aligned' | 'inline';"}]},{"fileName":"lib/ui-form/ui-form-field/ui-form-field.component.ts","type":"ts","text":"import { animate, style, transition, trigger } from '@angular/animations';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  Input,\r\n  OnInit,\r\n  QueryList,\r\n} from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { KitFormErrorDirective, KitFormFieldService } from '@ngx-kit/core';\r\n\r\n@Component({\r\n  selector: 'ui-form-field',\r\n  templateUrl: './ui-form-field.component.html',\r\n  styleUrls: ['./ui-form-field.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitFormFieldService,\r\n  ],\r\n  animations: [\r\n    trigger('error', [\r\n      transition(':enter', [\r\n        style({\r\n          opacity: 0,\r\n          transform: 'translateY(-10%)',\r\n        }),\r\n        animate('250ms', style({\r\n          opacity: 1,\r\n          transform: 'translateY(0)',\r\n        })),\r\n      ]),\r\n      transition(':leave', [\r\n        animate('150ms', style({\r\n          opacity: 0,\r\n          transform: 'scale(1.05)',\r\n        })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class UiFormFieldComponent implements OnInit {\r\n  @Input() label: string;\r\n\r\n  /**\r\n   * Display required sign after label.\r\n   */\r\n  @Input() required: boolean;\r\n\r\n  @ContentChild(NgControl) ngControl: NgControl;\r\n\r\n  @ContentChildren(KitFormErrorDirective) errorRefs: QueryList<KitFormErrorDirective>;\r\n\r\n  errors: string[];\r\n\r\n  constructor(\r\n    public formFieldService: KitFormFieldService,\r\n    private cdr: ChangeDetectorRef,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.formFieldService.control) {\r\n      this.formFieldService.control.errorStateChanges.subscribe(errors => {\r\n        this.errors = errors;\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n  }\r\n\r\n  hasError(name: string): boolean {\r\n    return this.errors.indexOf(name) !== -1;\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-form-field',\r\n  templateUrl: './ui-form-field.component.html',\r\n  styleUrls: ['./ui-form-field.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitFormFieldService,\r\n  ],\r\n  animations: [\r\n    trigger('error', [\r\n      transition(':enter', [\r\n        style({\r\n          opacity: 0,\r\n          transform: 'translateY(-10%)',\r\n        }),\r\n        animate('250ms', style({\r\n          opacity: 1,\r\n          transform: 'translateY(0)',\r\n        })),\r\n      ]),\r\n      transition(':leave', [\r\n        animate('150ms', style({\r\n          opacity: 0,\r\n          transform: 'scale(1.05)',\r\n        })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiFormFieldComponent","members":[{"kind":150,"name":"label","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"string","text":"@Input() label: string;","signature":"@Input() label: string"},{"kind":150,"name":"required","jsDoc":[{"comment":"Display required sign after label.","tags":[]}],"isInternal":false,"decorators":["@Input()"],"type":"boolean","text":"@Input() required: boolean;","signature":"@Input() required: boolean"},{"kind":150,"name":"ngControl","jsDoc":[],"isInternal":false,"decorators":["@ContentChild(NgControl)"],"type":"NgControl","text":"@ContentChild(NgControl) ngControl: NgControl;","signature":"@ContentChild(NgControl) ngControl: NgControl"},{"kind":150,"name":"errorRefs","jsDoc":[],"isInternal":false,"decorators":["@ContentChildren(KitFormErrorDirective)"],"type":"QueryList<KitFormErrorDirective>","text":"@ContentChildren(KitFormErrorDirective) errorRefs: QueryList<KitFormErrorDirective>;","signature":"@ContentChildren(KitFormErrorDirective) errorRefs: QueryList<KitFormErrorDirective>"},{"kind":150,"name":"errors","jsDoc":[],"isInternal":false,"type":"string[]","text":"errors: string[];","signature":"errors: string[]"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["public formFieldService: KitFormFieldService","private cdr: ChangeDetectorRef"],"text":"constructor(\r\n    public formFieldService: KitFormFieldService,\r\n    private cdr: ChangeDetectorRef,\r\n  ) {\r\n  }","signature":"constructor(public formFieldService: KitFormFieldService, private cdr: ChangeDetectorRef)"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n    if (this.formFieldService.control) {\r\n      this.formFieldService.control.errorStateChanges.subscribe(errors => {\r\n        this.errors = errors;\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n  }","signature":"ngOnInit()"},{"kind":152,"name":"hasError","jsDoc":[],"isInternal":false,"parameters":["name: string"],"type":"boolean","text":"hasError(name: string): boolean {\r\n    return this.errors.indexOf(name) !== -1;\r\n  }","signature":"hasError(name: string): boolean"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-form-field'"}}}]},{"fileName":"lib/ui-form/ui-form.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { KitFormFieldModule, KitFormTouchModule } from '@ngx-kit/core';\r\nimport { UiFormFieldComponent } from './ui-form-field/ui-form-field.component';\r\nimport { UiFormComponent } from './ui-form/ui-form.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    KitFormFieldModule,\r\n  ],\r\n  declarations: [\r\n    UiFormComponent,\r\n    UiFormFieldComponent,\r\n  ],\r\n  exports: [\r\n    KitFormFieldModule,\r\n    KitFormTouchModule,\r\n    UiFormComponent,\r\n    UiFormFieldComponent,\r\n  ],\r\n})\r\nexport class UiFormModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    KitFormFieldModule,\r\n  ],\r\n  declarations: [\r\n    UiFormComponent,\r\n    UiFormFieldComponent,\r\n  ],\r\n  exports: [\r\n    KitFormFieldModule,\r\n    KitFormTouchModule,\r\n    UiFormComponent,\r\n    UiFormFieldComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiFormModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    KitFormFieldModule,\r\n    KitFormTouchModule,\r\n    UiFormComponent,\r\n    UiFormFieldComponent,\r\n  ]"}}}]},{"fileName":"lib/ui-form/ui-form.ts","type":"ts","text":"export * from './ui-form.module';\r\nexport * from './ui-form/ui-form.component';\r\nexport * from './ui-form-field/ui-form-field.component';\r\n","declars":[]},{"fileName":"lib/ui-form/ui-form/ui-form.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ui-form,[uiForm]',\r\n  templateUrl: './ui-form.component.html',\r\n  styleUrls: ['./ui-form.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UiFormComponent {\r\n  constructor() {\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-form,[uiForm]',\r\n  templateUrl: './ui-form.component.html',\r\n  styleUrls: ['./ui-form.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})"],"modifiers":["export"],"name":"UiFormComponent","members":[{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":[],"text":"constructor() {\r\n  }","signature":"constructor()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-form,[uiForm]'"}}}]},{"fileName":"lib/ui-loading-bar/demo/ui-loading-bar-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\nimport { KitLoadingService } from '@ngx-kit/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-loading-bar-demo.component.html',\n})\nexport class UiLoadingBarDemoComponent {\n  constructor(private loading: KitLoadingService) {\n  }\n\n  start() {\n    this.loading.global.start('demo');\n  }\n\n  end() {\n    this.loading.global.end('demo');\n  }\n\n  startLocal() {\n    this.loading.progress('local').start('demo');\n  }\n\n  endLocal() {\n    this.loading.progress('local').end('demo');\n  }\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-loading-bar-demo.component.html',\n})"],"modifiers":["export"],"name":"UiLoadingBarDemoComponent","members":[{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private loading: KitLoadingService"],"text":"constructor(private loading: KitLoadingService) {\n  }","signature":"constructor(private loading: KitLoadingService)"},{"kind":152,"name":"start","jsDoc":[],"isInternal":false,"parameters":[],"text":"start() {\n    this.loading.global.start('demo');\n  }","signature":"start()"},{"kind":152,"name":"end","jsDoc":[],"isInternal":false,"parameters":[],"text":"end() {\n    this.loading.global.end('demo');\n  }","signature":"end()"},{"kind":152,"name":"startLocal","jsDoc":[],"isInternal":false,"parameters":[],"text":"startLocal() {\n    this.loading.progress('local').start('demo');\n  }","signature":"startLocal()"},{"kind":152,"name":"endLocal","jsDoc":[],"isInternal":false,"parameters":[],"text":"endLocal() {\n    this.loading.progress('local').end('demo');\n  }","signature":"endLocal()"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-loading-bar/demo/ui-loading-bar-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { UiLoadingBarModule } from '../ui-loading-bar.module';\r\nimport { UiLoadingBarDemoComponent } from './ui-loading-bar-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiLoadingBarModule,\r\n  ],\r\n  declarations: [\r\n    UiLoadingBarDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiLoadingBarDemoComponent,\r\n  ],\r\n})\r\nexport class UiLoadingBarDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiLoadingBarModule,\r\n  ],\r\n  declarations: [\r\n    UiLoadingBarDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiLoadingBarDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiLoadingBarDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-loading-bar/ui-loading-bar.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { KitOverlayService } from '@ngx-kit/core';\r\nimport { UiLoadingBarComponent } from './ui-loading-bar/ui-loading-bar.component';\r\n\r\nexport function uiLoadingBarInitFactory(overlay: KitOverlayService) {\r\n  return () => {\r\n    // Host loading-bar component in the overlay\r\n    overlay.hostComponent({component: UiLoadingBarComponent});\r\n  };\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [\r\n    UiLoadingBarComponent,\r\n  ],\r\n  exports: [\r\n    UiLoadingBarComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiLoadingBarComponent,\r\n  ],\r\n})\r\nexport class UiLoadingBarModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: UiLoadingBarModule,\r\n      providers: [\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          useFactory: uiLoadingBarInitFactory,\r\n          deps: [KitOverlayService],\r\n          multi: true,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","declars":[{"kind":229,"kindString":"function","jsDoc":[],"isInternal":false,"modifiers":["export"],"name":"uiLoadingBarInitFactory","parameters":["overlay: KitOverlayService"],"signature":"uiLoadingBarInitFactory(overlay: KitOverlayService)"},{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [\r\n    UiLoadingBarComponent,\r\n  ],\r\n  exports: [\r\n    UiLoadingBarComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiLoadingBarComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiLoadingBarModule","members":[{"kind":152,"name":"forRoot","jsDoc":[],"isInternal":false,"modifiers":["static"],"parameters":[],"type":"ModuleWithProviders","text":"static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: UiLoadingBarModule,\r\n      providers: [\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          useFactory: uiLoadingBarInitFactory,\r\n          deps: [KitOverlayService],\r\n          multi: true,\r\n        },\r\n      ],\r\n    };\r\n  }","signature":"static forRoot(): ModuleWithProviders"}],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    UiLoadingBarComponent,\r\n  ]"}}}]},{"fileName":"lib/ui-loading-bar/ui-loading-bar.ts","type":"ts","text":"export * from './ui-loading-bar.module';\r\nexport * from './ui-loading-bar/ui-loading-bar.component';\r\n","declars":[]},{"fileName":"lib/ui-loading-bar/ui-loading-bar/ui-loading-bar.component.ts","type":"ts","text":"import { animate, sequence, state, style, transition, trigger } from '@angular/animations';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { kitLoadingGlobal, KitLoadingService, KitLoadingState } from '@ngx-kit/core';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'ui-loading-bar',\r\n  templateUrl: './ui-loading-bar.component.html',\r\n  styleUrls: ['./ui-loading-bar.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('bar', [\r\n      state(KitLoadingState.None, style({\r\n        transform: 'translateX(-100%)',\r\n        opacity: 0,\r\n      })),\r\n      state(KitLoadingState.InProgress, style({\r\n        transform: 'translateX(0)',\r\n        opacity: 1,\r\n      })),\r\n      transition(`${KitLoadingState.None} => ${KitLoadingState.InProgress}`, [\r\n        style({\r\n          transform: 'translateX(-100%)',\r\n          opacity: 0,\r\n        }),\r\n        animate('50ms', style({\r\n          opacity: 1,\r\n        })),\r\n        animate('50000ms cubic-bezier(0,1.13,.32,.91)', style({\r\n          transform: 'translateX(0)',\r\n        })),\r\n      ]),\r\n      transition(`${KitLoadingState.InProgress} => ${KitLoadingState.None}`,\r\n        sequence([\r\n          animate('150ms ease-in', style({\r\n            opacity: 1,\r\n            transform: 'translateX(0)',\r\n          })),\r\n          animate('150ms', style({\r\n            opacity: 0,\r\n          })),\r\n          animate('10ms', style({\r\n            transform: 'translateX(-100%)',\r\n          })),\r\n        ])),\r\n    ]),\r\n  ],\r\n})\r\nexport class UiLoadingBarComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() id = kitLoadingGlobal;\r\n\r\n  barState = KitLoadingState.None;\r\n\r\n  private destroy = new Subject<void>();\r\n\r\n  private idChange = new Subject<void>();\r\n\r\n  constructor(\r\n    private loading: KitLoadingService,\r\n    private cdr: ChangeDetectorRef,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.handleState();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy.next();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if ('id' in changes) {\r\n      this.handleState();\r\n    }\r\n  }\r\n\r\n  private handleState() {\r\n    this.idChange.next();\r\n    this.barState = this.loading.progress(this.id).state;\r\n    this.loading\r\n      .progress(this.id)\r\n      .stateChanges\r\n      .pipe(\r\n        takeUntil(this.destroy),\r\n        takeUntil(this.idChange),\r\n        debounceTime(10),\r\n      )\r\n      .subscribe(s => {\r\n        this.barState = s;\r\n        this.cdr.detectChanges();\r\n      });\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-loading-bar',\r\n  templateUrl: './ui-loading-bar.component.html',\r\n  styleUrls: ['./ui-loading-bar.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('bar', [\r\n      state(KitLoadingState.None, style({\r\n        transform: 'translateX(-100%)',\r\n        opacity: 0,\r\n      })),\r\n      state(KitLoadingState.InProgress, style({\r\n        transform: 'translateX(0)',\r\n        opacity: 1,\r\n      })),\r\n      transition(`${KitLoadingState.None} => ${KitLoadingState.InProgress}`, [\r\n        style({\r\n          transform: 'translateX(-100%)',\r\n          opacity: 0,\r\n        }),\r\n        animate('50ms', style({\r\n          opacity: 1,\r\n        })),\r\n        animate('50000ms cubic-bezier(0,1.13,.32,.91)', style({\r\n          transform: 'translateX(0)',\r\n        })),\r\n      ]),\r\n      transition(`${KitLoadingState.InProgress} => ${KitLoadingState.None}`,\r\n        sequence([\r\n          animate('150ms ease-in', style({\r\n            opacity: 1,\r\n            transform: 'translateX(0)',\r\n          })),\r\n          animate('150ms', style({\r\n            opacity: 0,\r\n          })),\r\n          animate('10ms', style({\r\n            transform: 'translateX(-100%)',\r\n          })),\r\n        ])),\r\n    ]),\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiLoadingBarComponent","members":[{"kind":150,"name":"id","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"initializer":"kitLoadingGlobal","text":"@Input() id = kitLoadingGlobal;","signature":"@Input() id = kitLoadingGlobal"},{"kind":150,"name":"barState","jsDoc":[],"isInternal":false,"initializer":"KitLoadingState.None","text":"barState = KitLoadingState.None;","signature":"barState = KitLoadingState.None"},{"kind":150,"name":"destroy","jsDoc":[],"isInternal":false,"modifiers":["private"],"initializer":"new Subject<void>()","text":"private destroy = new Subject<void>();","signature":"private destroy = new Subject<void>()"},{"kind":150,"name":"idChange","jsDoc":[],"isInternal":false,"modifiers":["private"],"initializer":"new Subject<void>()","text":"private idChange = new Subject<void>();","signature":"private idChange = new Subject<void>()"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private loading: KitLoadingService","private cdr: ChangeDetectorRef"],"text":"constructor(\r\n    private loading: KitLoadingService,\r\n    private cdr: ChangeDetectorRef,\r\n  ) {\r\n  }","signature":"constructor(private loading: KitLoadingService, private cdr: ChangeDetectorRef)"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n    this.handleState();\r\n  }","signature":"ngOnInit()"},{"kind":152,"name":"ngOnDestroy","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnDestroy() {\r\n    this.destroy.next();\r\n  }","signature":"ngOnDestroy()"},{"kind":152,"name":"ngOnChanges","jsDoc":[],"isInternal":false,"parameters":["changes: SimpleChanges"],"text":"ngOnChanges(changes: SimpleChanges) {\r\n    if ('id' in changes) {\r\n      this.handleState();\r\n    }\r\n  }","signature":"ngOnChanges(changes: SimpleChanges)"},{"kind":152,"name":"handleState","jsDoc":[],"isInternal":false,"modifiers":["private"],"parameters":[],"text":"private handleState() {\r\n    this.idChange.next();\r\n    this.barState = this.loading.progress(this.id).state;\r\n    this.loading\r\n      .progress(this.id)\r\n      .stateChanges\r\n      .pipe(\r\n        takeUntil(this.destroy),\r\n        takeUntil(this.idChange),\r\n        debounceTime(10),\r\n      )\r\n      .subscribe(s => {\r\n        this.barState = s;\r\n        this.cdr.detectChanges();\r\n      });\r\n  }","signature":"private handleState()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-loading-bar'"}}}]},{"fileName":"lib/ui-modal/demo/ui-modal-demo-binding-modal.component.ts","type":"ts","text":"import { animateChild, query, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\r\nimport { KitModalRef } from '@ngx-kit/core';\r\n\r\n@Component({\r\n  selector: 'ui-modal-demo-binding-modal',\r\n  templateUrl: './ui-modal-demo-binding-modal.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('host', [\r\n      transition(':enter, :leave', [\r\n        query('@modalHost', animateChild(), {optional: true}),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class UiModalDemoBindingModalComponent {\r\n  @HostBinding('@host') hostTrigger: void;\r\n\r\n  @Input() inputField: string;\r\n\r\n  @Output() outputField = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    private ref: KitModalRef<UiModalDemoBindingModalComponent>,\r\n  ) {\r\n  }\r\n\r\n  close() {\r\n    this.ref.close();\r\n  }\r\n\r\n  closeWith(value: string) {\r\n    this.outputField.emit(value);\r\n    this.ref.close();\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-modal-demo-binding-modal',\r\n  templateUrl: './ui-modal-demo-binding-modal.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('host', [\r\n      transition(':enter, :leave', [\r\n        query('@modalHost', animateChild(), {optional: true}),\r\n      ]),\r\n    ]),\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiModalDemoBindingModalComponent","members":[{"kind":150,"name":"hostTrigger","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('@host')"],"type":"void","text":"@HostBinding('@host') hostTrigger: void;","signature":"@HostBinding('@host') hostTrigger: void"},{"kind":150,"name":"inputField","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"string","text":"@Input() inputField: string;","signature":"@Input() inputField: string"},{"kind":150,"name":"outputField","jsDoc":[],"isInternal":false,"decorators":["@Output()"],"initializer":"new EventEmitter<string>()","text":"@Output() outputField = new EventEmitter<string>();","signature":"@Output() outputField = new EventEmitter<string>()"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private ref: KitModalRef<UiModalDemoBindingModalComponent>"],"text":"constructor(\r\n    private ref: KitModalRef<UiModalDemoBindingModalComponent>,\r\n  ) {\r\n  }","signature":"constructor(private ref: KitModalRef<UiModalDemoBindingModalComponent>)"},{"kind":152,"name":"close","jsDoc":[],"isInternal":false,"parameters":[],"text":"close() {\r\n    this.ref.close();\r\n  }","signature":"close()"},{"kind":152,"name":"closeWith","jsDoc":[],"isInternal":false,"parameters":["value: string"],"text":"closeWith(value: string) {\r\n    this.outputField.emit(value);\r\n    this.ref.close();\r\n  }","signature":"closeWith(value: string)"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-modal-demo-binding-modal'"}}}]},{"fileName":"lib/ui-modal/demo/ui-modal-demo-can-close-modal.component.ts","type":"ts","text":"import { animateChild, query, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\r\nimport { KitModalCanClose, KitModalRef } from '@ngx-kit/core';\r\n\r\n@Component({\r\n  selector: 'ui-modal-demo-can-close-modal',\r\n  templateUrl: './ui-modal-demo-can-close-modal.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('host', [\r\n      transition(':enter, :leave', [\r\n        query('@modalHost', animateChild(), {optional: true}),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class UiModalDemoCanCloseModalComponent implements KitModalCanClose {\r\n  @HostBinding('@host') hostTrigger: void;\r\n\r\n  closable = false;\r\n\r\n  constructor(\r\n    private ref: KitModalRef<UiModalDemoCanCloseModalComponent>,\r\n  ) {\r\n  }\r\n\r\n  close() {\r\n    this.ref.close();\r\n  }\r\n\r\n  canClose() {\r\n    return this.closable;\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-modal-demo-can-close-modal',\r\n  templateUrl: './ui-modal-demo-can-close-modal.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('host', [\r\n      transition(':enter, :leave', [\r\n        query('@modalHost', animateChild(), {optional: true}),\r\n      ]),\r\n    ]),\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiModalDemoCanCloseModalComponent","members":[{"kind":150,"name":"hostTrigger","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('@host')"],"type":"void","text":"@HostBinding('@host') hostTrigger: void;","signature":"@HostBinding('@host') hostTrigger: void"},{"kind":150,"name":"closable","jsDoc":[],"isInternal":false,"initializer":"false","text":"closable = false;","signature":"closable = false"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private ref: KitModalRef<UiModalDemoCanCloseModalComponent>"],"text":"constructor(\r\n    private ref: KitModalRef<UiModalDemoCanCloseModalComponent>,\r\n  ) {\r\n  }","signature":"constructor(private ref: KitModalRef<UiModalDemoCanCloseModalComponent>)"},{"kind":152,"name":"close","jsDoc":[],"isInternal":false,"parameters":[],"text":"close() {\r\n    this.ref.close();\r\n  }","signature":"close()"},{"kind":152,"name":"canClose","jsDoc":[],"isInternal":false,"parameters":[],"text":"canClose() {\r\n    return this.closable;\r\n  }","signature":"canClose()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-modal-demo-can-close-modal'"}}}]},{"fileName":"lib/ui-modal/demo/ui-modal-demo-modal.component.ts","type":"ts","text":"import { animateChild, query, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\r\nimport { KitModalRef } from '@ngx-kit/core';\r\n\r\n@Component({\r\n  selector: 'ui-modal-demo-modal',\r\n  templateUrl: './ui-modal-demo-modal.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('host', [\r\n      transition(':enter, :leave', [\r\n        query('@modalHost', animateChild(), {optional: true}),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class UiModalDemoModalComponent {\r\n  @HostBinding('@host') hostTrigger: void;\r\n\r\n  constructor(\r\n    private ref: KitModalRef<UiModalDemoModalComponent>,\r\n  ) {\r\n  }\r\n\r\n  close() {\r\n    this.ref.close();\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-modal-demo-modal',\r\n  templateUrl: './ui-modal-demo-modal.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('host', [\r\n      transition(':enter, :leave', [\r\n        query('@modalHost', animateChild(), {optional: true}),\r\n      ]),\r\n    ]),\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiModalDemoModalComponent","members":[{"kind":150,"name":"hostTrigger","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('@host')"],"type":"void","text":"@HostBinding('@host') hostTrigger: void;","signature":"@HostBinding('@host') hostTrigger: void"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private ref: KitModalRef<UiModalDemoModalComponent>"],"text":"constructor(\r\n    private ref: KitModalRef<UiModalDemoModalComponent>,\r\n  ) {\r\n  }","signature":"constructor(private ref: KitModalRef<UiModalDemoModalComponent>)"},{"kind":152,"name":"close","jsDoc":[],"isInternal":false,"parameters":[],"text":"close() {\r\n    this.ref.close();\r\n  }","signature":"close()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-modal-demo-modal'"}}}]},{"fileName":"lib/ui-modal/demo/ui-modal-demo.component.ts","type":"ts","text":"import { ChangeDetectorRef, Component } from '@angular/core';\nimport { KitModalService } from '@ngx-kit/core';\nimport { UiModalDemoBindingModalComponent } from './ui-modal-demo-binding-modal.component';\nimport { UiModalDemoCanCloseModalComponent } from './ui-modal-demo-can-close-modal.component';\nimport { UiModalDemoModalComponent } from './ui-modal-demo-modal.component';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-modal-demo.component.html',\n})\nexport class UiModalDemoComponent {\n  display1 = false;\n\n  display3 = false;\n\n  inputField = 'sample text';\n\n  outputField: string;\n\n  constructor(\n    private modal: KitModalService,\n    private cdr: ChangeDetectorRef,\n  ) {\n  }\n\n  show2() {\n    this.modal.show({component: UiModalDemoModalComponent});\n  }\n\n  show4() {\n    const ref = this.modal.show({component: UiModalDemoBindingModalComponent});\n    ref.input({inputField: this.inputField});\n    ref.instance.outputField.subscribe((value: any) => {\n      this.outputField = value;\n      this.cdr.detectChanges();\n    });\n  }\n\n  show5() {\n    this.modal.show({component: UiModalDemoCanCloseModalComponent});\n  }\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-modal-demo.component.html',\n})"],"modifiers":["export"],"name":"UiModalDemoComponent","members":[{"kind":150,"name":"display1","jsDoc":[],"isInternal":false,"initializer":"false","text":"display1 = false;","signature":"display1 = false"},{"kind":150,"name":"display3","jsDoc":[],"isInternal":false,"initializer":"false","text":"display3 = false;","signature":"display3 = false"},{"kind":150,"name":"inputField","jsDoc":[],"isInternal":false,"initializer":"'sample text'","text":"inputField = 'sample text';","signature":"inputField = 'sample text'"},{"kind":150,"name":"outputField","jsDoc":[],"isInternal":false,"type":"string","text":"outputField: string;","signature":"outputField: string"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private modal: KitModalService","private cdr: ChangeDetectorRef"],"text":"constructor(\n    private modal: KitModalService,\n    private cdr: ChangeDetectorRef,\n  ) {\n  }","signature":"constructor(private modal: KitModalService, private cdr: ChangeDetectorRef)"},{"kind":152,"name":"show2","jsDoc":[],"isInternal":false,"parameters":[],"text":"show2() {\n    this.modal.show({component: UiModalDemoModalComponent});\n  }","signature":"show2()"},{"kind":152,"name":"show4","jsDoc":[],"isInternal":false,"parameters":[],"text":"show4() {\n    const ref = this.modal.show({component: UiModalDemoBindingModalComponent});\n    ref.input({inputField: this.inputField});\n    ref.instance.outputField.subscribe((value: any) => {\n      this.outputField = value;\n      this.cdr.detectChanges();\n    });\n  }","signature":"show4()"},{"kind":152,"name":"show5","jsDoc":[],"isInternal":false,"parameters":[],"text":"show5() {\n    this.modal.show({component: UiModalDemoCanCloseModalComponent});\n  }","signature":"show5()"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-modal/demo/ui-modal-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { UiModalModule } from '../ui-modal.module';\r\nimport { UiModalDemoBindingModalComponent } from './ui-modal-demo-binding-modal.component';\r\nimport { UiModalDemoCanCloseModalComponent } from './ui-modal-demo-can-close-modal.component';\r\nimport { UiModalDemoModalComponent } from './ui-modal-demo-modal.component';\r\nimport { UiModalDemoComponent } from './ui-modal-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiModalModule,\r\n  ],\r\n  declarations: [\r\n    UiModalDemoComponent,\r\n    UiModalDemoModalComponent,\r\n    UiModalDemoBindingModalComponent,\r\n    UiModalDemoCanCloseModalComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiModalDemoComponent,\r\n    UiModalDemoModalComponent,\r\n    UiModalDemoBindingModalComponent,\r\n    UiModalDemoCanCloseModalComponent,\r\n  ],\r\n})\r\nexport class UiModalDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiModalModule,\r\n  ],\r\n  declarations: [\r\n    UiModalDemoComponent,\r\n    UiModalDemoModalComponent,\r\n    UiModalDemoBindingModalComponent,\r\n    UiModalDemoCanCloseModalComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiModalDemoComponent,\r\n    UiModalDemoModalComponent,\r\n    UiModalDemoBindingModalComponent,\r\n    UiModalDemoCanCloseModalComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiModalDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-modal/ui-modal-footer/ui-modal-footer.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component, } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ui-modal-footer',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-modal-footer.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UiModalFooterComponent {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-modal-footer',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-modal-footer.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})"],"modifiers":["export"],"name":"UiModalFooterComponent","members":[],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-modal-footer'"}}}]},{"fileName":"lib/ui-modal/ui-modal.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { KitModalModule, KitOverlayModule } from '@ngx-kit/core';\r\nimport { UiModalFooterComponent } from './ui-modal-footer/ui-modal-footer.component';\r\nimport { UiModalComponent } from './ui-modal/ui-modal.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [\r\n    UiModalComponent,\r\n    UiModalFooterComponent,\r\n  ],\r\n  exports: [\r\n    KitModalModule,\r\n    KitOverlayModule,\r\n    UiModalComponent,\r\n    UiModalFooterComponent,\r\n  ],\r\n})\r\nexport class UiModalModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [\r\n    UiModalComponent,\r\n    UiModalFooterComponent,\r\n  ],\r\n  exports: [\r\n    KitModalModule,\r\n    KitOverlayModule,\r\n    UiModalComponent,\r\n    UiModalFooterComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiModalModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    KitModalModule,\r\n    KitOverlayModule,\r\n    UiModalComponent,\r\n    UiModalFooterComponent,\r\n  ]"}}}]},{"fileName":"lib/ui-modal/ui-modal.ts","type":"ts","text":"export * from './ui-modal.module';\r\nexport * from './ui-modal/ui-modal.component';\r\nexport * from './ui-modal-footer/ui-modal-footer.component';\r\n","declars":[]},{"fileName":"lib/ui-modal/ui-modal/ui-modal.component.ts","type":"ts","text":"import { animate, animateChild, query, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, Component, HostBinding, HostListener, Input, OnInit } from '@angular/core';\nimport { KitFocusManagerService, KitModalRef } from '@ngx-kit/core';\n\n@Component({\n  selector: 'ui-modal',\n  templateUrl: './ui-modal.component.html',\n  styleUrls: ['./ui-modal.component.scss'],\n  providers: [\n    KitFocusManagerService,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('modalHost', [\n      transition(':enter, :leave', [\n        query('@*', animateChild(), {optional: true}),\n      ]),\n    ]),\n    trigger('fade', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n          transform: 'translateY(-20px)',\n        }),\n        animate('250ms ease-out', style({\n          opacity: 1,\n          transform: 'translateY(0)',\n        })),\n      ]),\n      transition(':leave', [\n        style({opacity: 1}),\n        animate('250ms ease-in', style({\n          opacity: 0,\n          transform: 'translateY(-20px)',\n        })),\n      ]),\n    ]),\n  ],\n})\nexport class UiModalComponent implements OnInit {\n  @Input() header: string;\n\n  @HostBinding('@modalHost') hostTrigger: void;\n\n  constructor(\n    private ref: KitModalRef<UiModalComponent>,\n    private fm: KitFocusManagerService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.fm.autoCapture = true;\n    this.fm.init();\n  }\n\n  @HostListener('click', ['$event']) clickHandler(event: any) {\n    if (event.target === event.currentTarget) {\n      this.ref.close();\n    }\n  }\n\n  close() {\n    this.ref.close();\n  }\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\n  selector: 'ui-modal',\n  templateUrl: './ui-modal.component.html',\n  styleUrls: ['./ui-modal.component.scss'],\n  providers: [\n    KitFocusManagerService,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('modalHost', [\n      transition(':enter, :leave', [\n        query('@*', animateChild(), {optional: true}),\n      ]),\n    ]),\n    trigger('fade', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n          transform: 'translateY(-20px)',\n        }),\n        animate('250ms ease-out', style({\n          opacity: 1,\n          transform: 'translateY(0)',\n        })),\n      ]),\n      transition(':leave', [\n        style({opacity: 1}),\n        animate('250ms ease-in', style({\n          opacity: 0,\n          transform: 'translateY(-20px)',\n        })),\n      ]),\n    ]),\n  ],\n})"],"modifiers":["export"],"name":"UiModalComponent","members":[{"kind":150,"name":"header","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"string","text":"@Input() header: string;","signature":"@Input() header: string"},{"kind":150,"name":"hostTrigger","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('@modalHost')"],"type":"void","text":"@HostBinding('@modalHost') hostTrigger: void;","signature":"@HostBinding('@modalHost') hostTrigger: void"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private ref: KitModalRef<UiModalComponent>","private fm: KitFocusManagerService"],"text":"constructor(\n    private ref: KitModalRef<UiModalComponent>,\n    private fm: KitFocusManagerService,\n  ) {\n  }","signature":"constructor(private ref: KitModalRef<UiModalComponent>, private fm: KitFocusManagerService)"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\n    this.fm.autoCapture = true;\n    this.fm.init();\n  }","signature":"ngOnInit()"},{"kind":152,"name":"clickHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('click', ['$event'])"],"parameters":["event: any"],"text":"@HostListener('click', ['$event']) clickHandler(event: any) {\n    if (event.target === event.currentTarget) {\n      this.ref.close();\n    }\n  }","signature":"@HostListener('click', ['$event']) clickHandler(event: any)"},{"kind":152,"name":"close","jsDoc":[],"isInternal":false,"parameters":[],"text":"close() {\n    this.ref.close();\n  }","signature":"close()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-modal'"}}}]},{"fileName":"lib/ui-notification/demo/ui-notification-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\nimport { UiNotificationHostConfig } from '../meta';\nimport { UiNotificationService } from '../ui-notification.service';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-notification-demo.component.html',\n})\nexport class UiNotificationDemoComponent {\n  constructor(private notification: UiNotificationService) {\n  }\n\n  open(config: Partial<UiNotificationHostConfig>) {\n    this.notification.config(config);\n    this.notification.open({title: 'Hello', message: 'Notification message content'});\n  }\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-notification-demo.component.html',\n})"],"modifiers":["export"],"name":"UiNotificationDemoComponent","members":[{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private notification: UiNotificationService"],"text":"constructor(private notification: UiNotificationService) {\n  }","signature":"constructor(private notification: UiNotificationService)"},{"kind":152,"name":"open","jsDoc":[],"isInternal":false,"parameters":["config: Partial<UiNotificationHostConfig>"],"text":"open(config: Partial<UiNotificationHostConfig>) {\n    this.notification.config(config);\n    this.notification.open({title: 'Hello', message: 'Notification message content'});\n  }","signature":"open(config: Partial<UiNotificationHostConfig>)"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-notification/demo/ui-notification-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { UiNotificationModule } from '../ui-notification.module';\r\nimport { UiNotificationDemoComponent } from './ui-notification-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiNotificationModule,\r\n  ],\r\n  declarations: [\r\n    UiNotificationDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiNotificationDemoComponent,\r\n  ],\r\n})\r\nexport class UiNotificationDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiNotificationModule,\r\n  ],\r\n  declarations: [\r\n    UiNotificationDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiNotificationDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiNotificationDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-notification/meta.ts","type":"ts","text":"export type UiNotificationPosition = 'top-left' | 'top-right' | 'bottom-right' | 'bottom-left';\r\n\r\nexport interface UiNotificationHostConfig {\r\n  duration: number;\r\n  position: UiNotificationPosition;\r\n}\r\n\r\nexport interface UiNotificationItem {\r\n  __id: string;\r\n  params: any;\r\n}\r\n","declars":[{"kind":232,"kindString":"typeAlias","jsDoc":[],"isInternal":false,"name":"UiNotificationPosition","type":"'top-left' | 'top-right' | 'bottom-right' | 'bottom-left'","text":"export type UiNotificationPosition = 'top-left' | 'top-right' | 'bottom-right' | 'bottom-left';"},{"kind":231,"kindString":"interface","jsDoc":[],"isInternal":false,"name":"UiNotificationHostConfig","members":[{"kind":149,"jsDoc":[],"isInternal":false,"name":"duration","type":"number","text":"duration: number;","signature":"duration(): number"},{"kind":149,"jsDoc":[],"isInternal":false,"name":"position","type":"UiNotificationPosition","text":"position: UiNotificationPosition;","signature":"position(): UiNotificationPosition"}]},{"kind":231,"kindString":"interface","jsDoc":[],"isInternal":false,"name":"UiNotificationItem","members":[{"kind":149,"jsDoc":[],"isInternal":false,"name":"__id","type":"string","text":"__id: string;","signature":"__id(): string"},{"kind":149,"jsDoc":[],"isInternal":false,"name":"params","type":"any","text":"params: any;","signature":"params(): any"}]}]},{"fileName":"lib/ui-notification/ui-notification-host/ui-notification-host.component.ts","type":"ts","text":"import { animate, style, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { UiNotificationItem, UiNotificationPosition } from '../meta';\r\nimport { UiNotificationService } from '../ui-notification.service';\r\n\r\n@Component({\r\n  selector: 'ui-notification-host',\r\n  templateUrl: './ui-notification-host.component.html',\r\n  styleUrls: ['./ui-notification-host.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('item', [\r\n      // enter\r\n      transition('void => top-right', [\r\n        style({transform: 'translateX(100%)'}),\r\n        animate('200ms cubic-bezier(0.4, 0.0, 1, 1)'),\r\n      ]),\r\n      transition('void => bottom-right', [\r\n        style({transform: 'translateX(100%)'}),\r\n        animate('200ms cubic-bezier(0.4, 0.0, 1, 1)'),\r\n      ]),\r\n      transition('void => bottom-left', [\r\n        style({transform: 'translateX(-100%)'}),\r\n        animate('200ms cubic-bezier(0.4, 0.0, 1, 1)'),\r\n      ]),\r\n      transition('void => top-left', [\r\n        style({transform: 'translateX(-100%)'}),\r\n        animate('200ms cubic-bezier(0.4, 0.0, 1, 1)'),\r\n      ]),\r\n      // leave\r\n      transition('top-right => void', [\r\n        animate('200ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({transform: 'translateX(100%)'})),\r\n      ]),\r\n      transition('bottom-right => void', [\r\n        animate('200ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({transform: 'translateX(100%)'})),\r\n      ]),\r\n      transition('bottom-left => void', [\r\n        animate('200ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({transform: 'translateX(-100%)'})),\r\n      ]),\r\n      transition('top-left => void', [\r\n        animate('200ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({transform: 'translateX(-100%)'})),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class UiNotificationHostComponent implements OnInit {\r\n  items: Observable<UiNotificationItem[]>;\r\n\r\n  position: Observable<UiNotificationPosition>;\r\n\r\n  constructor(private notification: UiNotificationService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.position = this.notification.configChanges.pipe(map(c => c.position));\r\n    this.items = this.notification.itemsChanges;\r\n  }\r\n\r\n  close(__id: string) {\r\n    this.notification.close(__id);\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-notification-host',\r\n  templateUrl: './ui-notification-host.component.html',\r\n  styleUrls: ['./ui-notification-host.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('item', [\r\n      // enter\r\n      transition('void => top-right', [\r\n        style({transform: 'translateX(100%)'}),\r\n        animate('200ms cubic-bezier(0.4, 0.0, 1, 1)'),\r\n      ]),\r\n      transition('void => bottom-right', [\r\n        style({transform: 'translateX(100%)'}),\r\n        animate('200ms cubic-bezier(0.4, 0.0, 1, 1)'),\r\n      ]),\r\n      transition('void => bottom-left', [\r\n        style({transform: 'translateX(-100%)'}),\r\n        animate('200ms cubic-bezier(0.4, 0.0, 1, 1)'),\r\n      ]),\r\n      transition('void => top-left', [\r\n        style({transform: 'translateX(-100%)'}),\r\n        animate('200ms cubic-bezier(0.4, 0.0, 1, 1)'),\r\n      ]),\r\n      // leave\r\n      transition('top-right => void', [\r\n        animate('200ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({transform: 'translateX(100%)'})),\r\n      ]),\r\n      transition('bottom-right => void', [\r\n        animate('200ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({transform: 'translateX(100%)'})),\r\n      ]),\r\n      transition('bottom-left => void', [\r\n        animate('200ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({transform: 'translateX(-100%)'})),\r\n      ]),\r\n      transition('top-left => void', [\r\n        animate('200ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({transform: 'translateX(-100%)'})),\r\n      ]),\r\n    ]),\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiNotificationHostComponent","members":[{"kind":150,"name":"items","jsDoc":[],"isInternal":false,"type":"Observable<UiNotificationItem[]>","text":"items: Observable<UiNotificationItem[]>;","signature":"items: Observable<UiNotificationItem[]>"},{"kind":150,"name":"position","jsDoc":[],"isInternal":false,"type":"Observable<UiNotificationPosition>","text":"position: Observable<UiNotificationPosition>;","signature":"position: Observable<UiNotificationPosition>"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private notification: UiNotificationService"],"text":"constructor(private notification: UiNotificationService) {\r\n  }","signature":"constructor(private notification: UiNotificationService)"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n    this.position = this.notification.configChanges.pipe(map(c => c.position));\r\n    this.items = this.notification.itemsChanges;\r\n  }","signature":"ngOnInit()"},{"kind":152,"name":"close","jsDoc":[],"isInternal":false,"parameters":["__id: string"],"text":"close(__id: string) {\r\n    this.notification.close(__id);\r\n  }","signature":"close(__id: string)"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-notification-host'"}}}]},{"fileName":"lib/ui-notification/ui-notification.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { KitClassModule, KitOverlayService } from '@ngx-kit/core';\r\nimport { UiNotificationHostComponent } from './ui-notification-host/ui-notification-host.component';\r\n\r\nexport function uiNotificationInitFactory(overlay: KitOverlayService) {\r\n  return () => {\r\n    // Host component in the overlay\r\n    overlay.hostComponent({component: UiNotificationHostComponent});\r\n  };\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitClassModule,\r\n  ],\r\n  declarations: [\r\n    UiNotificationHostComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiNotificationHostComponent,\r\n  ],\r\n})\r\nexport class UiNotificationModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: UiNotificationModule,\r\n      providers: [\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          useFactory: uiNotificationInitFactory,\r\n          deps: [KitOverlayService],\r\n          multi: true,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","declars":[{"kind":229,"kindString":"function","jsDoc":[],"isInternal":false,"modifiers":["export"],"name":"uiNotificationInitFactory","parameters":["overlay: KitOverlayService"],"signature":"uiNotificationInitFactory(overlay: KitOverlayService)"},{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitClassModule,\r\n  ],\r\n  declarations: [\r\n    UiNotificationHostComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiNotificationHostComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiNotificationModule","members":[{"kind":152,"name":"forRoot","jsDoc":[],"isInternal":false,"modifiers":["static"],"parameters":[],"type":"ModuleWithProviders","text":"static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: UiNotificationModule,\r\n      providers: [\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          useFactory: uiNotificationInitFactory,\r\n          deps: [KitOverlayService],\r\n          multi: true,\r\n        },\r\n      ],\r\n    };\r\n  }","signature":"static forRoot(): ModuleWithProviders"}],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-notification/ui-notification.service.ts","type":"ts","text":"import { Injectable } from '@angular/core';\r\nimport { uuid } from '@ngx-kit/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { UiNotificationHostConfig, UiNotificationItem } from './meta';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UiNotificationService {\r\n  private _config = new BehaviorSubject<UiNotificationHostConfig>({\r\n    position: 'top-right',\r\n    duration: 4000,\r\n  });\r\n\r\n  private _items = new BehaviorSubject<UiNotificationItem[]>([]);\r\n\r\n  get configChanges(): Observable<UiNotificationHostConfig> {\r\n    return this._config.asObservable();\r\n  }\r\n\r\n  get itemsChanges(): Observable<UiNotificationItem[]> {\r\n    return this._items.asObservable();\r\n  }\r\n\r\n  close(__id: string) {\r\n    const items = [...this._items.value];\r\n    const index = items.findIndex(i => i.__id === __id);\r\n    if (index !== -1) {\r\n      items.splice(index, 1);\r\n      this._items.next(items);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Configure notification service.\r\n   */\r\n  config(config: Partial<UiNotificationHostConfig>) {\r\n    this._config.next({...this._config.value, ...config} as UiNotificationHostConfig);\r\n  }\r\n\r\n  /**\r\n   * Display notification message.\r\n   */\r\n  open(params: any) {\r\n    const __id = uuid();\r\n    this._items.next([...this._items.value, {\r\n      __id,\r\n      params,\r\n    }]);\r\n    // auto-close\r\n    setTimeout(() => {\r\n      this.close(__id);\r\n    }, this._config.value.duration);\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Injectable({\r\n  providedIn: 'root',\r\n})"],"modifiers":["export"],"name":"UiNotificationService","members":[{"kind":150,"name":"_config","jsDoc":[],"isInternal":false,"modifiers":["private"],"initializer":"new BehaviorSubject<UiNotificationHostConfig>({\r\n    position: 'top-right',\r\n    duration: 4000,\r\n  })","text":"private _config = new BehaviorSubject<UiNotificationHostConfig>({\r\n    position: 'top-right',\r\n    duration: 4000,\r\n  });","signature":"private _config = new BehaviorSubject<UiNotificationHostConfig>({\r\n    position: 'top-right',\r\n    duration: 4000,\r\n  })"},{"kind":150,"name":"_items","jsDoc":[],"isInternal":false,"modifiers":["private"],"initializer":"new BehaviorSubject<UiNotificationItem[]>([])","text":"private _items = new BehaviorSubject<UiNotificationItem[]>([]);","signature":"private _items = new BehaviorSubject<UiNotificationItem[]>([])"},{"kind":154,"name":"configChanges","jsDoc":[],"isInternal":false,"parameters":[],"type":"Observable<UiNotificationHostConfig>","text":"get configChanges(): Observable<UiNotificationHostConfig> {\r\n    return this._config.asObservable();\r\n  }","signature":"get configChanges(): Observable<UiNotificationHostConfig>"},{"kind":154,"name":"itemsChanges","jsDoc":[],"isInternal":false,"parameters":[],"type":"Observable<UiNotificationItem[]>","text":"get itemsChanges(): Observable<UiNotificationItem[]> {\r\n    return this._items.asObservable();\r\n  }","signature":"get itemsChanges(): Observable<UiNotificationItem[]>"},{"kind":152,"name":"close","jsDoc":[],"isInternal":false,"parameters":["__id: string"],"text":"close(__id: string) {\r\n    const items = [...this._items.value];\r\n    const index = items.findIndex(i => i.__id === __id);\r\n    if (index !== -1) {\r\n      items.splice(index, 1);\r\n      this._items.next(items);\r\n    }\r\n  }","signature":"close(__id: string)"},{"kind":152,"name":"config","jsDoc":[{"comment":"Configure notification service.","tags":[]}],"isInternal":false,"parameters":["config: Partial<UiNotificationHostConfig>"],"text":"config(config: Partial<UiNotificationHostConfig>) {\r\n    this._config.next({...this._config.value, ...config} as UiNotificationHostConfig);\r\n  }","signature":"config(config: Partial<UiNotificationHostConfig>)"},{"kind":152,"name":"open","jsDoc":[{"comment":"Display notification message.","tags":[]}],"isInternal":false,"parameters":["params: any"],"text":"open(params: any) {\r\n    const __id = uuid();\r\n    this._items.next([...this._items.value, {\r\n      __id,\r\n      params,\r\n    }]);\r\n    // auto-close\r\n    setTimeout(() => {\r\n      this.close(__id);\r\n    }, this._config.value.duration);\r\n  }","signature":"open(params: any)"}],"ngMeta":{"type":"Injectable","decorator":{"providedIn":"'root'"}}}]},{"fileName":"lib/ui-notification/ui-notification.ts","type":"ts","text":"export * from './meta';\r\nexport * from './ui-notification.module';\r\nexport * from './ui-notification.service';\r\n","declars":[]},{"fileName":"lib/ui-popup/demo/ui-popup-demo.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-popup-demo.component.html',\n  styleUrls: ['./ui-popup-demo.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UiPopupDemoComponent implements OnInit {\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-popup-demo.component.html',\n  styleUrls: ['./ui-popup-demo.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})"],"modifiers":["export"],"name":"UiPopupDemoComponent","members":[{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":[],"text":"constructor() {\n  }","signature":"constructor()"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\n  }","signature":"ngOnInit()"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-popup/demo/ui-popup-demo.module.ts","type":"ts","text":"import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UiPopupModule } from '../ui-popup.module';\r\nimport { UiPopupDemoComponent } from './ui-popup-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiPopupModule,\r\n  ],\r\n  declarations: [\r\n    UiPopupDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiPopupDemoComponent,\r\n  ],\r\n})\r\nexport class UiPopupDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiPopupModule,\r\n  ],\r\n  declarations: [\r\n    UiPopupDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiPopupDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiPopupDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-popup/ui-popup.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { KitClassModule, KitOverlayModule, KitPositionModule } from '@ngx-kit/core';\r\nimport { UiPopupComponent } from './ui-popup/ui-popup.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitClassModule,\r\n    KitPositionModule,\r\n  ],\r\n  declarations: [\r\n    UiPopupComponent,\r\n  ],\r\n  exports: [\r\n    KitOverlayModule,\r\n    UiPopupComponent,\r\n  ],\r\n})\r\nexport class UiPopupModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitClassModule,\r\n    KitPositionModule,\r\n  ],\r\n  declarations: [\r\n    UiPopupComponent,\r\n  ],\r\n  exports: [\r\n    KitOverlayModule,\r\n    UiPopupComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiPopupModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    KitOverlayModule,\r\n    UiPopupComponent,\r\n  ]"}}}]},{"fileName":"lib/ui-popup/ui-popup.ts","type":"ts","text":"export * from './ui-popup.module';\r\nexport * from './ui-popup/ui-popup.component';\r\n","declars":[]},{"fileName":"lib/ui-popup/ui-popup/ui-popup.component.ts","type":"ts","text":"import { animate, animateChild, query, style, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectionStrategy, Component, HostBinding, Input, OnChanges, OnInit } from '@angular/core';\r\nimport { KitOutsideClickService, KitOverlayToggleDirective, KitPinPosition } from '@ngx-kit/core';\r\n\r\n@Component({\r\n  selector: 'ui-popup',\r\n  templateUrl: './ui-popup.component.html',\r\n  styleUrls: ['./ui-popup.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitOutsideClickService,\r\n  ],\r\n  animations: [\r\n    trigger('host', [\r\n      transition(':enter, :leave', [\r\n        query('@*', animateChild()),\r\n      ]),\r\n    ]),\r\n    trigger('fade', [\r\n      transition(':enter', [\r\n        style({\r\n          opacity: 0,\r\n          transform: 'scale(0.5)',\r\n        }),\r\n        animate('150ms ease-out', style({\r\n          opacity: 1,\r\n          transform: 'scale(1)',\r\n        })),\r\n      ]),\r\n      transition(':leave', [\r\n        style({opacity: 1}),\r\n        animate('150ms ease-in', style({\r\n          opacity: 0,\r\n          transform: 'scale(0.5)',\r\n        })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class UiPopupComponent implements OnInit, OnChanges {\r\n  @Input() toggle: KitOverlayToggleDirective;\r\n\r\n  @Input() position: KitPinPosition = 'top-center';\r\n\r\n  @HostBinding('attr.aria-label') ariaLabel = 'Popup description';\r\n\r\n  @HostBinding('attr.aria-modal') ariaModal = true;\r\n\r\n  @HostBinding('@host') hostTrigger = true;\r\n\r\n  constructor(\r\n    private outsideClick: KitOutsideClickService,\r\n  ) {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.outsideClick.skip = [this.toggle.nativeEl];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.outsideClick.outsideClick.subscribe(e => {\r\n      this.toggle.close();\r\n    });\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-popup',\r\n  templateUrl: './ui-popup.component.html',\r\n  styleUrls: ['./ui-popup.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitOutsideClickService,\r\n  ],\r\n  animations: [\r\n    trigger('host', [\r\n      transition(':enter, :leave', [\r\n        query('@*', animateChild()),\r\n      ]),\r\n    ]),\r\n    trigger('fade', [\r\n      transition(':enter', [\r\n        style({\r\n          opacity: 0,\r\n          transform: 'scale(0.5)',\r\n        }),\r\n        animate('150ms ease-out', style({\r\n          opacity: 1,\r\n          transform: 'scale(1)',\r\n        })),\r\n      ]),\r\n      transition(':leave', [\r\n        style({opacity: 1}),\r\n        animate('150ms ease-in', style({\r\n          opacity: 0,\r\n          transform: 'scale(0.5)',\r\n        })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiPopupComponent","members":[{"kind":150,"name":"toggle","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"KitOverlayToggleDirective","text":"@Input() toggle: KitOverlayToggleDirective;","signature":"@Input() toggle: KitOverlayToggleDirective"},{"kind":150,"name":"position","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"KitPinPosition","initializer":"'top-center'","text":"@Input() position: KitPinPosition = 'top-center';","signature":"@Input() position: KitPinPosition = 'top-center'"},{"kind":150,"name":"ariaLabel","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('attr.aria-label')"],"initializer":"'Popup description'","text":"@HostBinding('attr.aria-label') ariaLabel = 'Popup description';","signature":"@HostBinding('attr.aria-label') ariaLabel = 'Popup description'"},{"kind":150,"name":"ariaModal","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('attr.aria-modal')"],"initializer":"true","text":"@HostBinding('attr.aria-modal') ariaModal = true;","signature":"@HostBinding('attr.aria-modal') ariaModal = true"},{"kind":150,"name":"hostTrigger","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('@host')"],"initializer":"true","text":"@HostBinding('@host') hostTrigger = true;","signature":"@HostBinding('@host') hostTrigger = true"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private outsideClick: KitOutsideClickService"],"text":"constructor(\r\n    private outsideClick: KitOutsideClickService,\r\n  ) {\r\n  }","signature":"constructor(private outsideClick: KitOutsideClickService)"},{"kind":152,"name":"ngOnChanges","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnChanges() {\r\n    this.outsideClick.skip = [this.toggle.nativeEl];\r\n  }","signature":"ngOnChanges()"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n    this.outsideClick.outsideClick.subscribe(e => {\r\n      this.toggle.close();\r\n    });\r\n  }","signature":"ngOnInit()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-popup'"}}}]},{"fileName":"lib/ui-radio/demo/ui-radio-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-radio-demo.component.html',\n})\nexport class UiRadioDemoComponent {\n  radioModel = 'A';\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-radio-demo.component.html',\n})"],"modifiers":["export"],"name":"UiRadioDemoComponent","members":[{"kind":150,"name":"radioModel","jsDoc":[],"isInternal":false,"initializer":"'A'","text":"radioModel = 'A';","signature":"radioModel = 'A'"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-radio/demo/ui-radio-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { UiRadioModule } from '../ui-radio.module';\r\nimport { UiRadioDemoComponent } from './ui-radio-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiRadioModule,\r\n  ],\r\n  declarations: [\r\n    UiRadioDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiRadioDemoComponent,\r\n  ],\r\n})\r\nexport class UiRadioDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiRadioModule,\r\n  ],\r\n  declarations: [\r\n    UiRadioDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiRadioDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiRadioDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-radio/ui-radio.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { UiRadioComponent } from './ui-radio/ui-radio.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    UiRadioComponent,\r\n  ],\r\n  exports: [\r\n    UiRadioComponent,\r\n  ],\r\n})\r\nexport class UiRadioModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    UiRadioComponent,\r\n  ],\r\n  exports: [\r\n    UiRadioComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiRadioModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    UiRadioComponent,\r\n  ]"}}}]},{"fileName":"lib/ui-radio/ui-radio.ts","type":"ts","text":"export * from './ui-radio.module';\r\nexport * from './ui-radio/ui-radio.component';\r\n","declars":[]},{"fileName":"lib/ui-radio/ui-radio/ui-radio.component.ts","type":"ts","text":"import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Host,\r\n  HostBinding,\r\n  HostListener,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Optional,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { isUndefined, KitNgControlDirective, uuid } from '@ngx-kit/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line\r\n  selector: 'input[type=\"radio\"][uiRadio]',\r\n  templateUrl: './ui-radio.component.html',\r\n  styleUrls: ['./ui-radio.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UiRadioComponent implements OnInit, OnChanges, AfterViewInit {\r\n  @Input() uiText: void;\r\n\r\n  @Input() id: string;\r\n\r\n  @Input('disabled') disabledInput: boolean;\r\n\r\n  @ViewChild('checkTemplate') checkTemplate: TemplateRef<any>;\r\n\r\n  @HostBinding('attr.id') idBinding = uuid();\r\n\r\n  focused = false;\r\n\r\n  hasErrors = false;\r\n\r\n  disabled = false;\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private vcr: ViewContainerRef,\r\n    private elRef: ElementRef,\r\n    @Optional() @Host() private control: KitNgControlDirective,\r\n    @Optional() @Host() private ngControl: NgControl,\r\n  ) {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if ('id' in changes) {\r\n      this.idBinding = this.id;\r\n    }\r\n    if ('disabledInput' in changes) {\r\n      this.disabled = !(this.disabledInput === false);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.control) {\r\n      this.idBinding = this.control.id;\r\n      this.control.errorStateChanges.subscribe(errors => {\r\n        this.hasErrors = !errors || errors.length > 0;\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n    if (this.ngControl && this.ngControl.valueChanges) {\r\n      this.ngControl.valueChanges.subscribe(() => {\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n    if (this.ngControl && this.ngControl.statusChanges) {\r\n      this.ngControl.statusChanges.subscribe(() => {\r\n        if (isUndefined(this.disabledInput)) {\r\n          this.disabled = !!this.ngControl.disabled;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const viewRef = this.vcr.createEmbeddedView(this.checkTemplate);\r\n    // ViewRef extends ChangeDetectionRef, needed for bindings update after projecting.\r\n    viewRef['detectChanges']();\r\n  }\r\n\r\n  @HostListener('focus') focusHandler() {\r\n    this.focused = true;\r\n  }\r\n\r\n  @HostListener('blur') blurHandler() {\r\n    this.focused = false;\r\n  }\r\n\r\n  isChecked(): boolean {\r\n    return this.elRef.nativeElement.checked;\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  // tslint:disable-next-line\r\n  selector: 'input[type=\"radio\"][uiRadio]',\r\n  templateUrl: './ui-radio.component.html',\r\n  styleUrls: ['./ui-radio.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})"],"modifiers":["export"],"name":"UiRadioComponent","members":[{"kind":150,"name":"uiText","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"void","text":"@Input() uiText: void;","signature":"@Input() uiText: void"},{"kind":150,"name":"id","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"string","text":"@Input() id: string;","signature":"@Input() id: string"},{"kind":150,"name":"disabledInput","jsDoc":[],"isInternal":false,"decorators":["@Input('disabled')"],"type":"boolean","text":"@Input('disabled') disabledInput: boolean;","signature":"@Input('disabled') disabledInput: boolean"},{"kind":150,"name":"checkTemplate","jsDoc":[],"isInternal":false,"decorators":["@ViewChild('checkTemplate')"],"type":"TemplateRef<any>","text":"@ViewChild('checkTemplate') checkTemplate: TemplateRef<any>;","signature":"@ViewChild('checkTemplate') checkTemplate: TemplateRef<any>"},{"kind":150,"name":"idBinding","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('attr.id')"],"initializer":"uuid()","text":"@HostBinding('attr.id') idBinding = uuid();","signature":"@HostBinding('attr.id') idBinding = uuid()"},{"kind":150,"name":"focused","jsDoc":[],"isInternal":false,"initializer":"false","text":"focused = false;","signature":"focused = false"},{"kind":150,"name":"hasErrors","jsDoc":[],"isInternal":false,"initializer":"false","text":"hasErrors = false;","signature":"hasErrors = false"},{"kind":150,"name":"disabled","jsDoc":[],"isInternal":false,"initializer":"false","text":"disabled = false;","signature":"disabled = false"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private cdr: ChangeDetectorRef","private vcr: ViewContainerRef","private elRef: ElementRef","@Optional() @Host() private control: KitNgControlDirective","@Optional() @Host() private ngControl: NgControl"],"text":"constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private vcr: ViewContainerRef,\r\n    private elRef: ElementRef,\r\n    @Optional() @Host() private control: KitNgControlDirective,\r\n    @Optional() @Host() private ngControl: NgControl,\r\n  ) {\r\n  }","signature":"constructor(private cdr: ChangeDetectorRef, private vcr: ViewContainerRef, private elRef: ElementRef, @Optional() @Host() private control: KitNgControlDirective, @Optional() @Host() private ngControl: NgControl)"},{"kind":152,"name":"ngOnChanges","jsDoc":[],"isInternal":false,"parameters":["changes: SimpleChanges"],"text":"ngOnChanges(changes: SimpleChanges) {\r\n    if ('id' in changes) {\r\n      this.idBinding = this.id;\r\n    }\r\n    if ('disabledInput' in changes) {\r\n      this.disabled = !(this.disabledInput === false);\r\n    }\r\n  }","signature":"ngOnChanges(changes: SimpleChanges)"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n    if (this.control) {\r\n      this.idBinding = this.control.id;\r\n      this.control.errorStateChanges.subscribe(errors => {\r\n        this.hasErrors = !errors || errors.length > 0;\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n    if (this.ngControl && this.ngControl.valueChanges) {\r\n      this.ngControl.valueChanges.subscribe(() => {\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n    if (this.ngControl && this.ngControl.statusChanges) {\r\n      this.ngControl.statusChanges.subscribe(() => {\r\n        if (isUndefined(this.disabledInput)) {\r\n          this.disabled = !!this.ngControl.disabled;\r\n        }\r\n      });\r\n    }\r\n  }","signature":"ngOnInit()"},{"kind":152,"name":"ngAfterViewInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngAfterViewInit() {\r\n    const viewRef = this.vcr.createEmbeddedView(this.checkTemplate);\r\n    // ViewRef extends ChangeDetectionRef, needed for bindings update after projecting.\r\n    viewRef['detectChanges']();\r\n  }","signature":"ngAfterViewInit()"},{"kind":152,"name":"focusHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('focus')"],"parameters":[],"text":"@HostListener('focus') focusHandler() {\r\n    this.focused = true;\r\n  }","signature":"@HostListener('focus') focusHandler()"},{"kind":152,"name":"blurHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('blur')"],"parameters":[],"text":"@HostListener('blur') blurHandler() {\r\n    this.focused = false;\r\n  }","signature":"@HostListener('blur') blurHandler()"},{"kind":152,"name":"isChecked","jsDoc":[],"isInternal":false,"parameters":[],"type":"boolean","text":"isChecked(): boolean {\r\n    return this.elRef.nativeElement.checked;\r\n  }","signature":"isChecked(): boolean"}],"ngMeta":{"type":"Component","decorator":{"selector":"'input[type=\"radio\"][uiRadio]'"}}}]},{"fileName":"lib/ui-rating/demo/ui-rating-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\nimport { KitIconsRegistryService } from '@ngx-kit/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-rating-demo.component.html',\n})\nexport class UiRatingDemoComponent {\n  constructor(private icons: KitIconsRegistryService) {\n    this.icons.add({\n      name: 'star', xml: `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 8 8\">\n        <path d=\"M4 0l-1 3h-3l2.5 2-1 3 2.5-2 2.5 2-1-3 2.5-2h-3l-1-3z\" />\n      </svg>\n    `,\n    });\n  }\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-rating-demo.component.html',\n})"],"modifiers":["export"],"name":"UiRatingDemoComponent","members":[{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private icons: KitIconsRegistryService"],"text":"constructor(private icons: KitIconsRegistryService) {\n    this.icons.add({\n      name: 'star', xml: `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 8 8\">\n        <path d=\"M4 0l-1 3h-3l2.5 2-1 3 2.5-2 2.5 2-1-3 2.5-2h-3l-1-3z\" />\n      </svg>\n    `,\n    });\n  }","signature":"constructor(private icons: KitIconsRegistryService)"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-rating/demo/ui-rating-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { UiRatingModule } from '../ui-rating.module';\r\nimport { UiRatingDemoComponent } from './ui-rating-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiRatingModule,\r\n  ],\r\n  declarations: [\r\n    UiRatingDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiRatingDemoComponent,\r\n  ],\r\n})\r\nexport class UiRatingDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiRatingModule,\r\n  ],\r\n  declarations: [\r\n    UiRatingDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiRatingDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiRatingDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-rating/ui-rating.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { KitIconsModule, KitRepeatModule } from '@ngx-kit/core';\r\nimport { UiRatingComponent } from './ui-rating/ui-rating.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitIconsModule,\r\n    KitRepeatModule,\r\n  ],\r\n  declarations: [\r\n    UiRatingComponent,\r\n  ],\r\n  exports: [\r\n    UiRatingComponent,\r\n  ],\r\n})\r\nexport class UiRatingModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitIconsModule,\r\n    KitRepeatModule,\r\n  ],\r\n  declarations: [\r\n    UiRatingComponent,\r\n  ],\r\n  exports: [\r\n    UiRatingComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiRatingModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    UiRatingComponent,\r\n  ]"}}}]},{"fileName":"lib/ui-rating/ui-rating.ts","type":"ts","text":"export * from './ui-rating.module';\r\nexport * from './ui-rating/ui-rating.component';\r\n","declars":[]},{"fileName":"lib/ui-rating/ui-rating/ui-rating.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit } from '@angular/core';\r\nimport { KitClassService } from '@ngx-kit/core';\r\n\r\n@Component({\r\n  selector: 'ui-rating',\r\n  templateUrl: './ui-rating.component.html',\r\n  styleUrls: ['./ui-rating.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [KitClassService],\r\n})\r\nexport class UiRatingComponent implements OnInit, OnChanges {\r\n  @Input() icon: string;\r\n\r\n  @Input() symbol = '&#x2605;';\r\n\r\n  @Input() total = 5;\r\n\r\n  @Input() value: number;\r\n\r\n  constructor(private kitClass: KitClassService) {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.kitClass.apply({});\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-rating',\r\n  templateUrl: './ui-rating.component.html',\r\n  styleUrls: ['./ui-rating.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [KitClassService],\r\n})"],"modifiers":["export"],"name":"UiRatingComponent","members":[{"kind":150,"name":"icon","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"string","text":"@Input() icon: string;","signature":"@Input() icon: string"},{"kind":150,"name":"symbol","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"initializer":"'&#x2605;'","text":"@Input() symbol = '&#x2605;';","signature":"@Input() symbol = '&#x2605;'"},{"kind":150,"name":"total","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"initializer":"5","text":"@Input() total = 5;","signature":"@Input() total = 5"},{"kind":150,"name":"value","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"number","text":"@Input() value: number;","signature":"@Input() value: number"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private kitClass: KitClassService"],"text":"constructor(private kitClass: KitClassService) {\r\n  }","signature":"constructor(private kitClass: KitClassService)"},{"kind":152,"name":"ngOnChanges","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnChanges() {\r\n    this.kitClass.apply({});\r\n  }","signature":"ngOnChanges()"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n  }","signature":"ngOnInit()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-rating'"}}}]},{"fileName":"lib/ui-scroll/demo/ui-scroll-demo.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-scroll-demo.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UiScrollDemoComponent implements OnInit {\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-scroll-demo.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})"],"modifiers":["export"],"name":"UiScrollDemoComponent","members":[{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":[],"text":"constructor() {\n  }","signature":"constructor()"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\n  }","signature":"ngOnInit()"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-scroll/demo/ui-scroll-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { UiScrollModule } from '../ui-scroll.module';\r\nimport { UiScrollDemoComponent } from './ui-scroll-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiScrollModule,\r\n  ],\r\n  declarations: [\r\n    UiScrollDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiScrollDemoComponent,\r\n  ],\r\n})\r\nexport class UiScrollDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiScrollModule,\r\n  ],\r\n  declarations: [\r\n    UiScrollDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiScrollDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiScrollDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-scroll/ui-scroll.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { UiScrollComponent } from './ui-scroll/ui-scroll.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [\r\n    UiScrollComponent,\r\n  ],\r\n  exports: [\r\n    UiScrollComponent,\r\n  ],\r\n})\r\nexport class UiScrollModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [\r\n    UiScrollComponent,\r\n  ],\r\n  exports: [\r\n    UiScrollComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiScrollModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    UiScrollComponent,\r\n  ]"}}}]},{"fileName":"lib/ui-scroll/ui-scroll.ts","type":"ts","text":"export * from './ui-scroll.module';\r\nexport * from './ui-scroll/ui-scroll.component';\r\n","declars":[]},{"fileName":"lib/ui-scroll/ui-scroll/ui-scroll.component.ts","type":"ts","text":"import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  HostListener,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { KitHammerProvider, KitScrollService, KitScrollState } from '@ngx-kit/core';\r\n\r\n@Component({\r\n  selector: 'ui-scroll',\r\n  templateUrl: './ui-scroll.component.html',\r\n  styleUrls: ['./ui-scroll.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitScrollService,\r\n  ],\r\n})\r\nexport class UiScrollComponent implements AfterContentInit {\r\n  state: KitScrollState;\r\n\r\n  hover = false;\r\n\r\n  @ViewChild('vBar') vBar: ElementRef;\r\n\r\n  @ViewChild('vBarWrapper') vBarWrapper: ElementRef;\r\n\r\n  @ViewChild('hBar') hBar: ElementRef;\r\n\r\n  @ViewChild('hBarWrapper') hBarWrapper: ElementRef;\r\n\r\n  @ViewChild('vWrapper') vWrapper: ElementRef;\r\n\r\n  @ViewChild('hWrapper') hWrapper: ElementRef;\r\n\r\n  constructor(\r\n    private elRef: ElementRef,\r\n    private cdr: ChangeDetectorRef,\r\n    private hammer: KitHammerProvider<any>,\r\n    private scroll: KitScrollService,\r\n  ) {\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.scroll.registerRefs({\r\n      vBar: this.vBar.nativeElement,\r\n      vBarWrapper: this.vBarWrapper.nativeElement,\r\n      vWrapper: this.vWrapper.nativeElement,\r\n      hBar: this.hBar.nativeElement,\r\n      hBarWrapper: this.hBarWrapper.nativeElement,\r\n      hWrapper: this.hWrapper.nativeElement,\r\n    });\r\n    this.scroll.stateChanges.subscribe(state => {\r\n      this.state = state;\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  @HostListener('mouseenter') mouseenterHandler() {\r\n    this.hover = true;\r\n    this.scroll.update();\r\n  }\r\n\r\n  @HostListener('mouseleave') mouseleaveHandler() {\r\n    this.hover = false;\r\n  }\r\n\r\n  updateVBar() {\r\n    this.scroll.updateVBar();\r\n  }\r\n\r\n  updateHBar() {\r\n    this.scroll.updateHBar();\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-scroll',\r\n  templateUrl: './ui-scroll.component.html',\r\n  styleUrls: ['./ui-scroll.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitScrollService,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiScrollComponent","members":[{"kind":150,"name":"state","jsDoc":[],"isInternal":false,"type":"KitScrollState","text":"state: KitScrollState;","signature":"state: KitScrollState"},{"kind":150,"name":"hover","jsDoc":[],"isInternal":false,"initializer":"false","text":"hover = false;","signature":"hover = false"},{"kind":150,"name":"vBar","jsDoc":[],"isInternal":false,"decorators":["@ViewChild('vBar')"],"type":"ElementRef","text":"@ViewChild('vBar') vBar: ElementRef;","signature":"@ViewChild('vBar') vBar: ElementRef"},{"kind":150,"name":"vBarWrapper","jsDoc":[],"isInternal":false,"decorators":["@ViewChild('vBarWrapper')"],"type":"ElementRef","text":"@ViewChild('vBarWrapper') vBarWrapper: ElementRef;","signature":"@ViewChild('vBarWrapper') vBarWrapper: ElementRef"},{"kind":150,"name":"hBar","jsDoc":[],"isInternal":false,"decorators":["@ViewChild('hBar')"],"type":"ElementRef","text":"@ViewChild('hBar') hBar: ElementRef;","signature":"@ViewChild('hBar') hBar: ElementRef"},{"kind":150,"name":"hBarWrapper","jsDoc":[],"isInternal":false,"decorators":["@ViewChild('hBarWrapper')"],"type":"ElementRef","text":"@ViewChild('hBarWrapper') hBarWrapper: ElementRef;","signature":"@ViewChild('hBarWrapper') hBarWrapper: ElementRef"},{"kind":150,"name":"vWrapper","jsDoc":[],"isInternal":false,"decorators":["@ViewChild('vWrapper')"],"type":"ElementRef","text":"@ViewChild('vWrapper') vWrapper: ElementRef;","signature":"@ViewChild('vWrapper') vWrapper: ElementRef"},{"kind":150,"name":"hWrapper","jsDoc":[],"isInternal":false,"decorators":["@ViewChild('hWrapper')"],"type":"ElementRef","text":"@ViewChild('hWrapper') hWrapper: ElementRef;","signature":"@ViewChild('hWrapper') hWrapper: ElementRef"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private elRef: ElementRef","private cdr: ChangeDetectorRef","private hammer: KitHammerProvider<any>","private scroll: KitScrollService"],"text":"constructor(\r\n    private elRef: ElementRef,\r\n    private cdr: ChangeDetectorRef,\r\n    private hammer: KitHammerProvider<any>,\r\n    private scroll: KitScrollService,\r\n  ) {\r\n  }","signature":"constructor(private elRef: ElementRef, private cdr: ChangeDetectorRef, private hammer: KitHammerProvider<any>, private scroll: KitScrollService)"},{"kind":152,"name":"ngAfterContentInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngAfterContentInit() {\r\n    this.scroll.registerRefs({\r\n      vBar: this.vBar.nativeElement,\r\n      vBarWrapper: this.vBarWrapper.nativeElement,\r\n      vWrapper: this.vWrapper.nativeElement,\r\n      hBar: this.hBar.nativeElement,\r\n      hBarWrapper: this.hBarWrapper.nativeElement,\r\n      hWrapper: this.hWrapper.nativeElement,\r\n    });\r\n    this.scroll.stateChanges.subscribe(state => {\r\n      this.state = state;\r\n      this.cdr.detectChanges();\r\n    });\r\n  }","signature":"ngAfterContentInit()"},{"kind":152,"name":"mouseenterHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('mouseenter')"],"parameters":[],"text":"@HostListener('mouseenter') mouseenterHandler() {\r\n    this.hover = true;\r\n    this.scroll.update();\r\n  }","signature":"@HostListener('mouseenter') mouseenterHandler()"},{"kind":152,"name":"mouseleaveHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('mouseleave')"],"parameters":[],"text":"@HostListener('mouseleave') mouseleaveHandler() {\r\n    this.hover = false;\r\n  }","signature":"@HostListener('mouseleave') mouseleaveHandler()"},{"kind":152,"name":"updateVBar","jsDoc":[],"isInternal":false,"parameters":[],"text":"updateVBar() {\r\n    this.scroll.updateVBar();\r\n  }","signature":"updateVBar()"},{"kind":152,"name":"updateHBar","jsDoc":[],"isInternal":false,"parameters":[],"text":"updateHBar() {\r\n    this.scroll.updateHBar();\r\n  }","signature":"updateHBar()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-scroll'"}}}]},{"fileName":"lib/ui-select/demo/ui-select-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-select-demo.component.html',\n})\nexport class UiSelectDemoComponent {\n  selectModel = '';\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-select-demo.component.html',\n})"],"modifiers":["export"],"name":"UiSelectDemoComponent","members":[{"kind":150,"name":"selectModel","jsDoc":[],"isInternal":false,"initializer":"''","text":"selectModel = '';","signature":"selectModel = ''"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-select/demo/ui-select-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { UiSelectModule } from '../ui-select.module';\r\nimport { UiSelectDemoComponent } from './ui-select-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiSelectModule,\r\n  ],\r\n  declarations: [\r\n    UiSelectDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiSelectDemoComponent,\r\n  ],\r\n})\r\nexport class UiSelectDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiSelectModule,\r\n  ],\r\n  declarations: [\r\n    UiSelectDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiSelectDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiSelectDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-select/ui-select.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { UiSelectComponent } from './ui-select/ui-select.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    UiSelectComponent,\r\n  ],\r\n  exports: [\r\n    UiSelectComponent,\r\n  ],\r\n})\r\nexport class UiSelectModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    UiSelectComponent,\r\n  ],\r\n  exports: [\r\n    UiSelectComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiSelectModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    UiSelectComponent,\r\n  ]"}}}]},{"fileName":"lib/ui-select/ui-select.ts","type":"ts","text":"export * from './ui-select.module';\r\nexport * from './ui-select/ui-select.component';\r\n","declars":[]},{"fileName":"lib/ui-select/ui-select/ui-select.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component, Input, } from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line\r\n  selector: 'select[uiSelect]',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-select.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UiSelectComponent {\r\n  @Input() uiSelect: void;\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  // tslint:disable-next-line\r\n  selector: 'select[uiSelect]',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-select.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})"],"modifiers":["export"],"name":"UiSelectComponent","members":[{"kind":150,"name":"uiSelect","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"void","text":"@Input() uiSelect: void;","signature":"@Input() uiSelect: void"}],"ngMeta":{"type":"Component","decorator":{"selector":"'select[uiSelect]'"}}}]},{"fileName":"lib/ui-slider/demo/ui-slider-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-slider-demo.component.html',\n})\nexport class UiSliderDemoComponent {\n  value1 = 5;\n\n  value2 = 150;\n\n  value3 = 75;\n\n  rangeValue = [-150, 350];\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-slider-demo.component.html',\n})"],"modifiers":["export"],"name":"UiSliderDemoComponent","members":[{"kind":150,"name":"value1","jsDoc":[],"isInternal":false,"initializer":"5","text":"value1 = 5;","signature":"value1 = 5"},{"kind":150,"name":"value2","jsDoc":[],"isInternal":false,"initializer":"150","text":"value2 = 150;","signature":"value2 = 150"},{"kind":150,"name":"value3","jsDoc":[],"isInternal":false,"initializer":"75","text":"value3 = 75;","signature":"value3 = 75"},{"kind":150,"name":"rangeValue","jsDoc":[],"isInternal":false,"initializer":"[-150, 350]","text":"rangeValue = [-150, 350];","signature":"rangeValue = [-150, 350]"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-slider/demo/ui-slider-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { UiSliderModule } from '../ui-slider.module';\r\nimport { UiSliderDemoComponent } from './ui-slider-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiSliderModule,\r\n  ],\r\n  declarations: [\r\n    UiSliderDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiSliderDemoComponent,\r\n  ],\r\n})\r\nexport class UiSliderDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiSliderModule,\r\n  ],\r\n  declarations: [\r\n    UiSliderDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiSliderDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiSliderDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-slider/ui-slider.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { UiSliderComponent } from './ui-slider/ui-slider.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [\r\n    UiSliderComponent,\r\n  ],\r\n  exports: [\r\n    UiSliderComponent,\r\n  ],\r\n})\r\nexport class UiSliderModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [\r\n    UiSliderComponent,\r\n  ],\r\n  exports: [\r\n    UiSliderComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiSliderModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    UiSliderComponent,\r\n  ]"}}}]},{"fileName":"lib/ui-slider/ui-slider.ts","type":"ts","text":"export * from './ui-slider.module';\r\nexport * from './ui-slider/ui-slider.component';\r\n","declars":[]},{"fileName":"lib/ui-slider/ui-slider/ui-slider.component.ts","type":"ts","text":"import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  forwardRef,\r\n  Input,\r\n  OnChanges,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { isArray } from '@ngx-kit/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport const uiSliderValueAccessor: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => UiSliderComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  selector: 'ui-slider',\r\n  templateUrl: './ui-slider.component.html',\r\n  styleUrls: ['./ui-slider.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [uiSliderValueAccessor],\r\n})\r\nexport class UiSliderComponent implements ControlValueAccessor, OnChanges {\r\n  @Input() min = 0;\r\n\r\n  @Input() max = 100;\r\n\r\n  @Input() step = 1;\r\n\r\n  /**\r\n   * Range section mode.\r\n   * Model: [number, number]\r\n   */\r\n  @Input() range = false;\r\n\r\n  /**\r\n   * Fill space from start to pointer.\r\n   * Always true for range-mode.\r\n   */\r\n  @Input() fill = true;\r\n\r\n  @ViewChild('sliderRef') sliderRef: ElementRef;\r\n\r\n  mainPointerLeft: number;\r\n\r\n  leftPointerLeft: number;\r\n\r\n  fillLeft: number;\r\n\r\n  fillRight: number;\r\n\r\n  private changes = new Subject<number | [number, number]>();\r\n\r\n  private disabled = false;\r\n\r\n  private state: any;\r\n\r\n  private touches = new Subject<void>();\r\n\r\n  private rangeLength: number;\r\n\r\n  private totalSteps: number;\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n  ) {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.rangeLength = this.max - this.min;\r\n    this.totalSteps = this.rangeLength / this.step;\r\n    this.updateView();\r\n  }\r\n\r\n  registerOnChange(fn: any) {\r\n    this.changes.subscribe(fn);\r\n  }\r\n\r\n  registerOnTouched(fn: any) {\r\n    this.touches.subscribe(fn);\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  writeValue(rawValue: any): void {\r\n    this.state = rawValue;\r\n    this.updateView();\r\n  }\r\n\r\n  handleMove(event: any) {\r\n    const xPosition = this.calcXPosition(event.center.x);\r\n    const width = this.sliderRef.nativeElement.clientWidth;\r\n    const relPosition = xPosition / width;\r\n    const rawValue = this.totalSteps * relPosition * this.step + this.min;\r\n    const value = Math.round(this.totalSteps * relPosition) * this.step + this.min;\r\n    if (this.range) {\r\n      if (isArray(this.state)) {\r\n        const mid = (this.state[0] + this.state[1]) / 2;\r\n        if (rawValue <= mid && value !== this.state[0]) {\r\n          // Move left pointer\r\n          this.updateStateAfterMove([value, this.state[1]]);\r\n        } else if (rawValue >= mid && value !== this.state[1]) {\r\n          // Move right pointer\r\n          this.updateStateAfterMove([this.state[0], value]);\r\n        }\r\n      }\r\n    } else {\r\n      if (this.state !== value) {\r\n        this.updateStateAfterMove(value);\r\n      }\r\n    }\r\n  }\r\n\r\n  private calcXPosition(clientX: number) {\r\n    const width = this.sliderRef.nativeElement.clientWidth;\r\n    const sliderRect: ClientRect = this.sliderRef.nativeElement.getBoundingClientRect();\r\n    return clientX <= sliderRect.left\r\n      ? 0\r\n      : clientX >= sliderRect.right\r\n        ? width\r\n        : clientX - sliderRect.left;\r\n  }\r\n\r\n  private updateStateAfterMove(state: number | [number, number]) {\r\n    this.state = state;\r\n    this.updateView();\r\n    this.changes.next(this.state);\r\n  }\r\n\r\n  private updateView() {\r\n    const width = this.sliderRef.nativeElement.clientWidth;\r\n    if (this.range) {\r\n      if (isArray(this.state)) {\r\n        this.leftPointerLeft = Math.round(((this.state[0] - this.min) / this.rangeLength) * width);\r\n        this.mainPointerLeft = Math.round(((this.state[1] - this.min) / this.rangeLength) * width);\r\n        this.fillLeft = this.leftPointerLeft;\r\n        this.fillRight = width - this.mainPointerLeft;\r\n      }\r\n    } else {\r\n      this.mainPointerLeft = Math.round(((this.state - this.min) / this.rangeLength) * width);\r\n      this.fillLeft = 0;\r\n      this.fillRight = this.fill ? width - this.mainPointerLeft : width;\r\n    }\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-slider',\r\n  templateUrl: './ui-slider.component.html',\r\n  styleUrls: ['./ui-slider.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [uiSliderValueAccessor],\r\n})"],"modifiers":["export"],"name":"UiSliderComponent","members":[{"kind":150,"name":"min","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"initializer":"0","text":"@Input() min = 0;","signature":"@Input() min = 0"},{"kind":150,"name":"max","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"initializer":"100","text":"@Input() max = 100;","signature":"@Input() max = 100"},{"kind":150,"name":"step","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"initializer":"1","text":"@Input() step = 1;","signature":"@Input() step = 1"},{"kind":150,"name":"range","jsDoc":[{"comment":"Range section mode.\r\nModel: [number, number]","tags":[]}],"isInternal":false,"decorators":["@Input()"],"initializer":"false","text":"@Input() range = false;","signature":"@Input() range = false"},{"kind":150,"name":"fill","jsDoc":[{"comment":"Fill space from start to pointer.\r\nAlways true for range-mode.","tags":[]}],"isInternal":false,"decorators":["@Input()"],"initializer":"true","text":"@Input() fill = true;","signature":"@Input() fill = true"},{"kind":150,"name":"sliderRef","jsDoc":[],"isInternal":false,"decorators":["@ViewChild('sliderRef')"],"type":"ElementRef","text":"@ViewChild('sliderRef') sliderRef: ElementRef;","signature":"@ViewChild('sliderRef') sliderRef: ElementRef"},{"kind":150,"name":"mainPointerLeft","jsDoc":[],"isInternal":false,"type":"number","text":"mainPointerLeft: number;","signature":"mainPointerLeft: number"},{"kind":150,"name":"leftPointerLeft","jsDoc":[],"isInternal":false,"type":"number","text":"leftPointerLeft: number;","signature":"leftPointerLeft: number"},{"kind":150,"name":"fillLeft","jsDoc":[],"isInternal":false,"type":"number","text":"fillLeft: number;","signature":"fillLeft: number"},{"kind":150,"name":"fillRight","jsDoc":[],"isInternal":false,"type":"number","text":"fillRight: number;","signature":"fillRight: number"},{"kind":150,"name":"changes","jsDoc":[],"isInternal":false,"modifiers":["private"],"initializer":"new Subject<number | [number, number]>()","text":"private changes = new Subject<number | [number, number]>();","signature":"private changes = new Subject<number | [number, number]>()"},{"kind":150,"name":"disabled","jsDoc":[],"isInternal":false,"modifiers":["private"],"initializer":"false","text":"private disabled = false;","signature":"private disabled = false"},{"kind":150,"name":"state","jsDoc":[],"isInternal":false,"modifiers":["private"],"type":"any","text":"private state: any;","signature":"private state: any"},{"kind":150,"name":"touches","jsDoc":[],"isInternal":false,"modifiers":["private"],"initializer":"new Subject<void>()","text":"private touches = new Subject<void>();","signature":"private touches = new Subject<void>()"},{"kind":150,"name":"rangeLength","jsDoc":[],"isInternal":false,"modifiers":["private"],"type":"number","text":"private rangeLength: number;","signature":"private rangeLength: number"},{"kind":150,"name":"totalSteps","jsDoc":[],"isInternal":false,"modifiers":["private"],"type":"number","text":"private totalSteps: number;","signature":"private totalSteps: number"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private cdr: ChangeDetectorRef"],"text":"constructor(\r\n    private cdr: ChangeDetectorRef,\r\n  ) {\r\n  }","signature":"constructor(private cdr: ChangeDetectorRef)"},{"kind":152,"name":"ngOnChanges","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnChanges() {\r\n    this.rangeLength = this.max - this.min;\r\n    this.totalSteps = this.rangeLength / this.step;\r\n    this.updateView();\r\n  }","signature":"ngOnChanges()"},{"kind":152,"name":"registerOnChange","jsDoc":[],"isInternal":false,"parameters":["fn: any"],"text":"registerOnChange(fn: any) {\r\n    this.changes.subscribe(fn);\r\n  }","signature":"registerOnChange(fn: any)"},{"kind":152,"name":"registerOnTouched","jsDoc":[],"isInternal":false,"parameters":["fn: any"],"text":"registerOnTouched(fn: any) {\r\n    this.touches.subscribe(fn);\r\n  }","signature":"registerOnTouched(fn: any)"},{"kind":152,"name":"setDisabledState","jsDoc":[],"isInternal":false,"parameters":["isDisabled: boolean"],"type":"void","text":"setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }","signature":"setDisabledState(isDisabled: boolean): void"},{"kind":152,"name":"writeValue","jsDoc":[],"isInternal":false,"parameters":["rawValue: any"],"type":"void","text":"writeValue(rawValue: any): void {\r\n    this.state = rawValue;\r\n    this.updateView();\r\n  }","signature":"writeValue(rawValue: any): void"},{"kind":152,"name":"handleMove","jsDoc":[],"isInternal":false,"parameters":["event: any"],"text":"handleMove(event: any) {\r\n    const xPosition = this.calcXPosition(event.center.x);\r\n    const width = this.sliderRef.nativeElement.clientWidth;\r\n    const relPosition = xPosition / width;\r\n    const rawValue = this.totalSteps * relPosition * this.step + this.min;\r\n    const value = Math.round(this.totalSteps * relPosition) * this.step + this.min;\r\n    if (this.range) {\r\n      if (isArray(this.state)) {\r\n        const mid = (this.state[0] + this.state[1]) / 2;\r\n        if (rawValue <= mid && value !== this.state[0]) {\r\n          // Move left pointer\r\n          this.updateStateAfterMove([value, this.state[1]]);\r\n        } else if (rawValue >= mid && value !== this.state[1]) {\r\n          // Move right pointer\r\n          this.updateStateAfterMove([this.state[0], value]);\r\n        }\r\n      }\r\n    } else {\r\n      if (this.state !== value) {\r\n        this.updateStateAfterMove(value);\r\n      }\r\n    }\r\n  }","signature":"handleMove(event: any)"},{"kind":152,"name":"calcXPosition","jsDoc":[],"isInternal":false,"modifiers":["private"],"parameters":["clientX: number"],"text":"private calcXPosition(clientX: number) {\r\n    const width = this.sliderRef.nativeElement.clientWidth;\r\n    const sliderRect: ClientRect = this.sliderRef.nativeElement.getBoundingClientRect();\r\n    return clientX <= sliderRect.left\r\n      ? 0\r\n      : clientX >= sliderRect.right\r\n        ? width\r\n        : clientX - sliderRect.left;\r\n  }","signature":"private calcXPosition(clientX: number)"},{"kind":152,"name":"updateStateAfterMove","jsDoc":[],"isInternal":false,"modifiers":["private"],"parameters":["state: number | [number, number]"],"text":"private updateStateAfterMove(state: number | [number, number]) {\r\n    this.state = state;\r\n    this.updateView();\r\n    this.changes.next(this.state);\r\n  }","signature":"private updateStateAfterMove(state: number | [number, number])"},{"kind":152,"name":"updateView","jsDoc":[],"isInternal":false,"modifiers":["private"],"parameters":[],"text":"private updateView() {\r\n    const width = this.sliderRef.nativeElement.clientWidth;\r\n    if (this.range) {\r\n      if (isArray(this.state)) {\r\n        this.leftPointerLeft = Math.round(((this.state[0] - this.min) / this.rangeLength) * width);\r\n        this.mainPointerLeft = Math.round(((this.state[1] - this.min) / this.rangeLength) * width);\r\n        this.fillLeft = this.leftPointerLeft;\r\n        this.fillRight = width - this.mainPointerLeft;\r\n      }\r\n    } else {\r\n      this.mainPointerLeft = Math.round(((this.state - this.min) / this.rangeLength) * width);\r\n      this.fillLeft = 0;\r\n      this.fillRight = this.fill ? width - this.mainPointerLeft : width;\r\n    }\r\n    this.cdr.detectChanges();\r\n  }","signature":"private updateView()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-slider'"}}}]},{"fileName":"lib/ui-tabs/demo/ui-tabs-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-tabs-demo.component.html',\n})\nexport class UiTabsDemoComponent {\n  tabs = [\n    {tab: 'Tab 1', content: 'Tab 1 content'},\n    {tab: 'Tab 2', content: 'Tab 2 content'},\n    {tab: 'Tab 3', content: 'Tab 3 content'},\n  ];\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-tabs-demo.component.html',\n})"],"modifiers":["export"],"name":"UiTabsDemoComponent","members":[{"kind":150,"name":"tabs","jsDoc":[],"isInternal":false,"initializer":"[\n    {tab: 'Tab 1', content: 'Tab 1 content'},\n    {tab: 'Tab 2', content: 'Tab 2 content'},\n    {tab: 'Tab 3', content: 'Tab 3 content'},\n  ]","text":"tabs = [\n    {tab: 'Tab 1', content: 'Tab 1 content'},\n    {tab: 'Tab 2', content: 'Tab 2 content'},\n    {tab: 'Tab 3', content: 'Tab 3 content'},\n  ];","signature":"tabs = [\n    {tab: 'Tab 1', content: 'Tab 1 content'},\n    {tab: 'Tab 2', content: 'Tab 2 content'},\n    {tab: 'Tab 3', content: 'Tab 3 content'},\n  ]"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-tabs/demo/ui-tabs-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { UiTabsModule } from '../ui-tabs.module';\r\nimport { UiTabsDemoComponent } from './ui-tabs-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiTabsModule,\r\n  ],\r\n  declarations: [\r\n    UiTabsDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiTabsDemoComponent,\r\n  ],\r\n})\r\nexport class UiTabsDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiTabsModule,\r\n  ],\r\n  declarations: [\r\n    UiTabsDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiTabsDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiTabsDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-tabs/ui-tabs-content/ui-tabs-content.component.ts","type":"ts","text":"import { animate, style, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { KitSlideDirection, KitSlideHostService } from '@ngx-kit/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'ui-tabs-content',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-tabs-content.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('slide', [\r\n      // entering\r\n      transition('void => next', [\r\n        style({transform: 'translateX(100%)'}),\r\n        animate('250ms cubic-bezier(0.0, 0.0, 0.2, 1)'),\r\n      ]),\r\n      transition('void => prev', [\r\n        style({transform: 'translateX(-100%)'}),\r\n        animate('250ms cubic-bezier(0.0, 0.0, 0.2, 1)'),\r\n      ]),\r\n      // leaving\r\n      transition('next => void', [\r\n        style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          right: 0,\r\n          left: 0,\r\n        }),\r\n        animate('250ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({transform: 'translateX(-100%)'})),\r\n      ]),\r\n      transition('prev => void', [\r\n        style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          right: 0,\r\n          left: 0,\r\n        }),\r\n        animate('250ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({transform: 'translateX(100%)'})),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class UiTabsContentComponent implements OnInit, OnDestroy {\r\n  @HostBinding('@slide') slideTrigger: KitSlideDirection;\r\n\r\n  private destroy = new Subject<void>();\r\n\r\n  constructor(\r\n    private host: KitSlideHostService,\r\n    private cdr: ChangeDetectorRef,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.host.directionChanges\r\n      .pipe(takeUntil(this.destroy))\r\n      .subscribe(d => {\r\n        this.slideTrigger = d;\r\n        this.cdr.detectChanges();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy.next();\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-tabs-content',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-tabs-content.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('slide', [\r\n      // entering\r\n      transition('void => next', [\r\n        style({transform: 'translateX(100%)'}),\r\n        animate('250ms cubic-bezier(0.0, 0.0, 0.2, 1)'),\r\n      ]),\r\n      transition('void => prev', [\r\n        style({transform: 'translateX(-100%)'}),\r\n        animate('250ms cubic-bezier(0.0, 0.0, 0.2, 1)'),\r\n      ]),\r\n      // leaving\r\n      transition('next => void', [\r\n        style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          right: 0,\r\n          left: 0,\r\n        }),\r\n        animate('250ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({transform: 'translateX(-100%)'})),\r\n      ]),\r\n      transition('prev => void', [\r\n        style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          right: 0,\r\n          left: 0,\r\n        }),\r\n        animate('250ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({transform: 'translateX(100%)'})),\r\n      ]),\r\n    ]),\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiTabsContentComponent","members":[{"kind":150,"name":"slideTrigger","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('@slide')"],"type":"KitSlideDirection","text":"@HostBinding('@slide') slideTrigger: KitSlideDirection;","signature":"@HostBinding('@slide') slideTrigger: KitSlideDirection"},{"kind":150,"name":"destroy","jsDoc":[],"isInternal":false,"modifiers":["private"],"initializer":"new Subject<void>()","text":"private destroy = new Subject<void>();","signature":"private destroy = new Subject<void>()"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private host: KitSlideHostService","private cdr: ChangeDetectorRef"],"text":"constructor(\r\n    private host: KitSlideHostService,\r\n    private cdr: ChangeDetectorRef,\r\n  ) {\r\n  }","signature":"constructor(private host: KitSlideHostService, private cdr: ChangeDetectorRef)"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n    this.host.directionChanges\r\n      .pipe(takeUntil(this.destroy))\r\n      .subscribe(d => {\r\n        this.slideTrigger = d;\r\n        this.cdr.detectChanges();\r\n      });\r\n  }","signature":"ngOnInit()"},{"kind":152,"name":"ngOnDestroy","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnDestroy() {\r\n    this.destroy.next();\r\n  }","signature":"ngOnDestroy()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-tabs-content'"}}}]},{"fileName":"lib/ui-tabs/ui-tabs-nav/ui-tabs-nav.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component, } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ui-tabs-nav',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-tabs-nav.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UiTabsNavComponent {\r\n  constructor() {\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-tabs-nav',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-tabs-nav.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})"],"modifiers":["export"],"name":"UiTabsNavComponent","members":[{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":[],"text":"constructor() {\r\n  }","signature":"constructor()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-tabs-nav'"}}}]},{"fileName":"lib/ui-tabs/ui-tabs-tab/ui-tabs-tab.component.ts","type":"ts","text":"import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  HostBinding,\r\n  HostListener,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { isDefined, KitSlideHostService } from '@ngx-kit/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'ui-tabs-tab',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-tabs-tab.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UiTabsTabComponent implements OnInit, OnDestroy {\r\n  @HostBinding('class.active') classActive = false;\r\n\r\n  @Input() id: number;\r\n\r\n  private destroy = new Subject<void>();\r\n\r\n  constructor(private host: KitSlideHostService) {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy.next();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.host.activeChanges\r\n      .pipe(takeUntil(this.destroy))\r\n      .subscribe(id => {\r\n        this.classActive = id === this.id;\r\n      });\r\n  }\r\n\r\n  @HostListener('click')\r\n  clickHandler() {\r\n    if (isDefined(this.id) && this.id !== null) {\r\n      this.host.active = this.id;\r\n    }\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-tabs-tab',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-tabs-tab.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})"],"modifiers":["export"],"name":"UiTabsTabComponent","members":[{"kind":150,"name":"classActive","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('class.active')"],"initializer":"false","text":"@HostBinding('class.active') classActive = false;","signature":"@HostBinding('class.active') classActive = false"},{"kind":150,"name":"id","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"number","text":"@Input() id: number;","signature":"@Input() id: number"},{"kind":150,"name":"destroy","jsDoc":[],"isInternal":false,"modifiers":["private"],"initializer":"new Subject<void>()","text":"private destroy = new Subject<void>();","signature":"private destroy = new Subject<void>()"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private host: KitSlideHostService"],"text":"constructor(private host: KitSlideHostService) {\r\n  }","signature":"constructor(private host: KitSlideHostService)"},{"kind":152,"name":"ngOnDestroy","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnDestroy() {\r\n    this.destroy.next();\r\n  }","signature":"ngOnDestroy()"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n    this.host.activeChanges\r\n      .pipe(takeUntil(this.destroy))\r\n      .subscribe(id => {\r\n        this.classActive = id === this.id;\r\n      });\r\n  }","signature":"ngOnInit()"},{"kind":152,"name":"clickHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('click')"],"parameters":[],"text":"@HostListener('click')\r\n  clickHandler() {\r\n    if (isDefined(this.id) && this.id !== null) {\r\n      this.host.active = this.id;\r\n    }\r\n  }","signature":"@HostListener('click') clickHandler()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-tabs-tab'"}}}]},{"fileName":"lib/ui-tabs/ui-tabs.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { KitSlideModule } from '@ngx-kit/core';\r\nimport { UiTabsContentComponent } from './ui-tabs-content/ui-tabs-content.component';\r\nimport { UiTabsNavComponent } from './ui-tabs-nav/ui-tabs-nav.component';\r\nimport { UiTabsTabComponent } from './ui-tabs-tab/ui-tabs-tab.component';\r\nimport { UiTabsComponent } from './ui-tabs/ui-tabs.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitSlideModule,\r\n  ],\r\n  declarations: [\r\n    UiTabsComponent,\r\n    UiTabsNavComponent,\r\n    UiTabsTabComponent,\r\n    UiTabsContentComponent,\r\n  ],\r\n  exports: [\r\n    KitSlideModule,\r\n    UiTabsComponent,\r\n    UiTabsNavComponent,\r\n    UiTabsTabComponent,\r\n    UiTabsContentComponent,\r\n  ],\r\n})\r\nexport class UiTabsModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitSlideModule,\r\n  ],\r\n  declarations: [\r\n    UiTabsComponent,\r\n    UiTabsNavComponent,\r\n    UiTabsTabComponent,\r\n    UiTabsContentComponent,\r\n  ],\r\n  exports: [\r\n    KitSlideModule,\r\n    UiTabsComponent,\r\n    UiTabsNavComponent,\r\n    UiTabsTabComponent,\r\n    UiTabsContentComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiTabsModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    KitSlideModule,\r\n    UiTabsComponent,\r\n    UiTabsNavComponent,\r\n    UiTabsTabComponent,\r\n    UiTabsContentComponent,\r\n  ]"}}}]},{"fileName":"lib/ui-tabs/ui-tabs.ts","type":"ts","text":"export * from './ui-tabs.module';\r\nexport * from './ui-tabs/ui-tabs.component';\r\nexport * from './ui-tabs-content/ui-tabs-content.component';\r\nexport * from './ui-tabs-nav/ui-tabs-nav.component';\r\nexport * from './ui-tabs-tab/ui-tabs-tab.component';\r\n","declars":[]},{"fileName":"lib/ui-tabs/ui-tabs/ui-tabs.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { KitSlideHostService } from '@ngx-kit/core';\r\n\r\n@Component({\r\n  selector: 'ui-tabs',\r\n  template: `\r\n    <ng-content select=\"ui-tabs-nav\"></ng-content>\r\n    <div class=\"wrapper\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./ui-tabs.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitSlideHostService,\r\n  ],\r\n})\r\nexport class UiTabsComponent implements OnInit {\r\n  /**\r\n   * Automatically activate first tab.\r\n   */\r\n  @Input() activateFirst = true;\r\n\r\n  constructor(private host: KitSlideHostService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.host.activateFirst = this.activateFirst;\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-tabs',\r\n  template: `\r\n    <ng-content select=\"ui-tabs-nav\"></ng-content>\r\n    <div class=\"wrapper\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./ui-tabs.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitSlideHostService,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiTabsComponent","members":[{"kind":150,"name":"activateFirst","jsDoc":[{"comment":"Automatically activate first tab.","tags":[]}],"isInternal":false,"decorators":["@Input()"],"initializer":"true","text":"@Input() activateFirst = true;","signature":"@Input() activateFirst = true"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private host: KitSlideHostService"],"text":"constructor(private host: KitSlideHostService) {\r\n  }","signature":"constructor(private host: KitSlideHostService)"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n    this.host.activateFirst = this.activateFirst;\r\n  }","signature":"ngOnInit()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-tabs'"}}}]},{"fileName":"lib/ui-text/demo/ui-text-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-text-demo.component.html',\n})\nexport class UiTextDemoComponent {\n  inputModel = '';\n  textareaModel = '';\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-text-demo.component.html',\n})"],"modifiers":["export"],"name":"UiTextDemoComponent","members":[{"kind":150,"name":"inputModel","jsDoc":[],"isInternal":false,"initializer":"''","text":"inputModel = '';","signature":"inputModel = ''"},{"kind":150,"name":"textareaModel","jsDoc":[],"isInternal":false,"initializer":"''","text":"textareaModel = '';","signature":"textareaModel = ''"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-text/demo/ui-text-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { UiTextModule } from '../ui-text.module';\r\nimport { UiTextDemoComponent } from './ui-text-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiTextModule,\r\n  ],\r\n  declarations: [\r\n    UiTextDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiTextDemoComponent,\r\n  ],\r\n})\r\nexport class UiTextDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiTextModule,\r\n  ],\r\n  declarations: [\r\n    UiTextDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiTextDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiTextDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-text/ui-text.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { UiTextComponent } from './ui-text/ui-text.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    UiTextComponent,\r\n  ],\r\n  exports: [\r\n    UiTextComponent,\r\n  ],\r\n})\r\nexport class UiTextModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    UiTextComponent,\r\n  ],\r\n  exports: [\r\n    UiTextComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiTextModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    UiTextComponent,\r\n  ]"}}}]},{"fileName":"lib/ui-text/ui-text.ts","type":"ts","text":"export * from './ui-text.module';\r\nexport * from './ui-text/ui-text.component';\r\n","declars":[]},{"fileName":"lib/ui-text/ui-text/ui-text.component.ts","type":"ts","text":"import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  HostBinding,\r\n  Input,\r\n  OnInit,\r\n  Optional,\r\n} from '@angular/core';\r\nimport { KitFormFieldService } from '@ngx-kit/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line\r\n  selector: 'input[uiText],textarea[uiText]',\r\n  template: '',\r\n  styleUrls: ['./ui-text.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UiTextComponent implements OnInit {\r\n  @Input() uiText: void;\r\n\r\n  @HostBinding('class.-has-errors') hasErrorsClass = false;\r\n\r\n  constructor(\r\n    @Optional() private formFieldService: KitFormFieldService,\r\n    private cdr: ChangeDetectorRef,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.formFieldService) {\r\n      this.formFieldService.control.errorStateChanges.subscribe(errors => {\r\n        this.hasErrorsClass = !errors || errors.length > 0;\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  // tslint:disable-next-line\r\n  selector: 'input[uiText],textarea[uiText]',\r\n  template: '',\r\n  styleUrls: ['./ui-text.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})"],"modifiers":["export"],"name":"UiTextComponent","members":[{"kind":150,"name":"uiText","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"void","text":"@Input() uiText: void;","signature":"@Input() uiText: void"},{"kind":150,"name":"hasErrorsClass","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('class.-has-errors')"],"initializer":"false","text":"@HostBinding('class.-has-errors') hasErrorsClass = false;","signature":"@HostBinding('class.-has-errors') hasErrorsClass = false"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["@Optional() private formFieldService: KitFormFieldService","private cdr: ChangeDetectorRef"],"text":"constructor(\r\n    @Optional() private formFieldService: KitFormFieldService,\r\n    private cdr: ChangeDetectorRef,\r\n  ) {\r\n  }","signature":"constructor(@Optional() private formFieldService: KitFormFieldService, private cdr: ChangeDetectorRef)"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n    if (this.formFieldService) {\r\n      this.formFieldService.control.errorStateChanges.subscribe(errors => {\r\n        this.hasErrorsClass = !errors || errors.length > 0;\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n  }","signature":"ngOnInit()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'input[uiText],textarea[uiText]'"}}}]},{"fileName":"lib/ui-toggle/demo/ui-toggle-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-toggle-demo.component.html',\n})\nexport class UiToggleDemoComponent {\n  toggleModel = false;\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-toggle-demo.component.html',\n})"],"modifiers":["export"],"name":"UiToggleDemoComponent","members":[{"kind":150,"name":"toggleModel","jsDoc":[],"isInternal":false,"initializer":"false","text":"toggleModel = false;","signature":"toggleModel = false"}],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-toggle/demo/ui-toggle-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { UiToggleModule } from '../ui-toggle.module';\r\nimport { UiToggleDemoComponent } from './ui-toggle-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiToggleModule,\r\n  ],\r\n  declarations: [\r\n    UiToggleDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiToggleDemoComponent,\r\n  ],\r\n})\r\nexport class UiToggleDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UiToggleModule,\r\n  ],\r\n  declarations: [\r\n    UiToggleDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiToggleDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiToggleDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-toggle/ui-toggle.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { UiToggleComponent } from './ui-toggle/ui-toggle.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    UiToggleComponent,\r\n  ],\r\n  exports: [\r\n    UiToggleComponent,\r\n  ],\r\n})\r\nexport class UiToggleModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    UiToggleComponent,\r\n  ],\r\n  exports: [\r\n    UiToggleComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiToggleModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    UiToggleComponent,\r\n  ]"}}}]},{"fileName":"lib/ui-toggle/ui-toggle.ts","type":"ts","text":"export * from './ui-toggle.module';\r\nexport * from './ui-toggle/ui-toggle.component';\r\n","declars":[]},{"fileName":"lib/ui-toggle/ui-toggle/ui-toggle.component.ts","type":"ts","text":"import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Host,\r\n  HostBinding,\r\n  HostListener,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Optional,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { isUndefined, KitNgControlDirective, uuid } from '@ngx-kit/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line\r\n  selector: 'input[type=\"checkbox\"][uiToggle]',\r\n  templateUrl: './ui-toggle.component.html',\r\n  styleUrls: ['./ui-toggle.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UiToggleComponent implements OnInit, OnChanges, AfterViewInit {\r\n  @Input() uiText: void;\r\n\r\n  @Input() id: string;\r\n\r\n  @Input('disabled') disabledInput: boolean;\r\n\r\n  @ViewChild('checkTemplate') checkTemplate: TemplateRef<any>;\r\n\r\n  @HostBinding('attr.id') idBinding = uuid();\r\n\r\n  focused = false;\r\n\r\n  hasErrors = false;\r\n\r\n  disabled = false;\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private vcr: ViewContainerRef,\r\n    private elRef: ElementRef,\r\n    @Optional() @Host() private control: KitNgControlDirective,\r\n    @Optional() @Host() private ngControl: NgControl,\r\n  ) {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if ('id' in changes) {\r\n      this.idBinding = this.id;\r\n    }\r\n    if ('disabledInput' in changes) {\r\n      this.disabled = !(this.disabledInput === false);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.control) {\r\n      this.idBinding = this.control.id;\r\n      this.control.errorStateChanges.subscribe(errors => {\r\n        this.hasErrors = !errors || errors.length > 0;\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n    if (this.ngControl && this.ngControl.valueChanges) {\r\n      this.ngControl.valueChanges.subscribe(() => {\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n    if (this.ngControl && this.ngControl.statusChanges) {\r\n      this.ngControl.statusChanges.subscribe(() => {\r\n        if (isUndefined(this.disabledInput)) {\r\n          this.disabled = !!this.ngControl.disabled;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const viewRef = this.vcr.createEmbeddedView(this.checkTemplate);\r\n    // ViewRef extends ChangeDetectionRef, needed for bindings update after projecting.\r\n    viewRef['detectChanges']();\r\n  }\r\n\r\n  @HostListener('focus') focusHandler() {\r\n    this.focused = true;\r\n  }\r\n\r\n  @HostListener('blur') blurHandler() {\r\n    this.focused = false;\r\n  }\r\n\r\n  isChecked(): boolean {\r\n    return this.elRef.nativeElement.checked;\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  // tslint:disable-next-line\r\n  selector: 'input[type=\"checkbox\"][uiToggle]',\r\n  templateUrl: './ui-toggle.component.html',\r\n  styleUrls: ['./ui-toggle.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})"],"modifiers":["export"],"name":"UiToggleComponent","members":[{"kind":150,"name":"uiText","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"void","text":"@Input() uiText: void;","signature":"@Input() uiText: void"},{"kind":150,"name":"id","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"string","text":"@Input() id: string;","signature":"@Input() id: string"},{"kind":150,"name":"disabledInput","jsDoc":[],"isInternal":false,"decorators":["@Input('disabled')"],"type":"boolean","text":"@Input('disabled') disabledInput: boolean;","signature":"@Input('disabled') disabledInput: boolean"},{"kind":150,"name":"checkTemplate","jsDoc":[],"isInternal":false,"decorators":["@ViewChild('checkTemplate')"],"type":"TemplateRef<any>","text":"@ViewChild('checkTemplate') checkTemplate: TemplateRef<any>;","signature":"@ViewChild('checkTemplate') checkTemplate: TemplateRef<any>"},{"kind":150,"name":"idBinding","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('attr.id')"],"initializer":"uuid()","text":"@HostBinding('attr.id') idBinding = uuid();","signature":"@HostBinding('attr.id') idBinding = uuid()"},{"kind":150,"name":"focused","jsDoc":[],"isInternal":false,"initializer":"false","text":"focused = false;","signature":"focused = false"},{"kind":150,"name":"hasErrors","jsDoc":[],"isInternal":false,"initializer":"false","text":"hasErrors = false;","signature":"hasErrors = false"},{"kind":150,"name":"disabled","jsDoc":[],"isInternal":false,"initializer":"false","text":"disabled = false;","signature":"disabled = false"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private cdr: ChangeDetectorRef","private vcr: ViewContainerRef","private elRef: ElementRef","@Optional() @Host() private control: KitNgControlDirective","@Optional() @Host() private ngControl: NgControl"],"text":"constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private vcr: ViewContainerRef,\r\n    private elRef: ElementRef,\r\n    @Optional() @Host() private control: KitNgControlDirective,\r\n    @Optional() @Host() private ngControl: NgControl,\r\n  ) {\r\n  }","signature":"constructor(private cdr: ChangeDetectorRef, private vcr: ViewContainerRef, private elRef: ElementRef, @Optional() @Host() private control: KitNgControlDirective, @Optional() @Host() private ngControl: NgControl)"},{"kind":152,"name":"ngOnChanges","jsDoc":[],"isInternal":false,"parameters":["changes: SimpleChanges"],"text":"ngOnChanges(changes: SimpleChanges) {\r\n    if ('id' in changes) {\r\n      this.idBinding = this.id;\r\n    }\r\n    if ('disabledInput' in changes) {\r\n      this.disabled = !(this.disabledInput === false);\r\n    }\r\n  }","signature":"ngOnChanges(changes: SimpleChanges)"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n    if (this.control) {\r\n      this.idBinding = this.control.id;\r\n      this.control.errorStateChanges.subscribe(errors => {\r\n        this.hasErrors = !errors || errors.length > 0;\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n    if (this.ngControl && this.ngControl.valueChanges) {\r\n      this.ngControl.valueChanges.subscribe(() => {\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n    if (this.ngControl && this.ngControl.statusChanges) {\r\n      this.ngControl.statusChanges.subscribe(() => {\r\n        if (isUndefined(this.disabledInput)) {\r\n          this.disabled = !!this.ngControl.disabled;\r\n        }\r\n      });\r\n    }\r\n  }","signature":"ngOnInit()"},{"kind":152,"name":"ngAfterViewInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngAfterViewInit() {\r\n    const viewRef = this.vcr.createEmbeddedView(this.checkTemplate);\r\n    // ViewRef extends ChangeDetectionRef, needed for bindings update after projecting.\r\n    viewRef['detectChanges']();\r\n  }","signature":"ngAfterViewInit()"},{"kind":152,"name":"focusHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('focus')"],"parameters":[],"text":"@HostListener('focus') focusHandler() {\r\n    this.focused = true;\r\n  }","signature":"@HostListener('focus') focusHandler()"},{"kind":152,"name":"blurHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('blur')"],"parameters":[],"text":"@HostListener('blur') blurHandler() {\r\n    this.focused = false;\r\n  }","signature":"@HostListener('blur') blurHandler()"},{"kind":152,"name":"isChecked","jsDoc":[],"isInternal":false,"parameters":[],"type":"boolean","text":"isChecked(): boolean {\r\n    return this.elRef.nativeElement.checked;\r\n  }","signature":"isChecked(): boolean"}],"ngMeta":{"type":"Component","decorator":{"selector":"'input[type=\"checkbox\"][uiToggle]'"}}}]},{"fileName":"lib/ui-tooltip/demo/ui-tooltip-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-tooltip-demo.component.html',\n  styleUrls: ['./ui-tooltip-demo.component.scss'],\n})\nexport class UiTooltipDemoComponent {\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-tooltip-demo.component.html',\n  styleUrls: ['./ui-tooltip-demo.component.scss'],\n})"],"modifiers":["export"],"name":"UiTooltipDemoComponent","members":[],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-tooltip/demo/ui-tooltip-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { UiTooltipModule } from '../ui-tooltip.module';\r\nimport { UiTooltipDemoComponent } from './ui-tooltip-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiTooltipModule,\r\n  ],\r\n  declarations: [\r\n    UiTooltipDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiTooltipDemoComponent,\r\n  ],\r\n})\r\nexport class UiTooltipDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiTooltipModule,\r\n  ],\r\n  declarations: [\r\n    UiTooltipDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiTooltipDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiTooltipDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-tooltip/meta.ts","type":"ts","text":"import { KitPinPosition } from '@ngx-kit/core';\r\n\r\nexport type UiTooltipColors = 'default' | 'primary';\r\n\r\nexport interface UiTooltipOptions {\r\n  color?: UiTooltipColors;\r\n  position?: KitPinPosition;\r\n}\r\n","declars":[{"kind":232,"kindString":"typeAlias","jsDoc":[],"isInternal":false,"name":"UiTooltipColors","type":"'default' | 'primary'","text":"export type UiTooltipColors = 'default' | 'primary';"},{"kind":231,"kindString":"interface","jsDoc":[],"isInternal":false,"name":"UiTooltipOptions","members":[{"kind":149,"jsDoc":[],"isInternal":false,"name":"color","type":"UiTooltipColors","text":"color?: UiTooltipColors;","signature":"color(): UiTooltipColors"},{"kind":149,"jsDoc":[],"isInternal":false,"name":"position","type":"KitPinPosition","text":"position?: KitPinPosition;","signature":"position(): KitPinPosition"}]}]},{"fileName":"lib/ui-tooltip/ui-tooltip-view/ui-tooltip-view.component.ts","type":"ts","text":"import { animate, animateChild, query, style, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\r\nimport { KitPinPosition } from '@ngx-kit/core';\r\nimport { UiTooltipColors } from '../meta';\r\n\r\n@Component({\r\n  selector: 'ui-tooltip-view',\r\n  templateUrl: `./ui-tooltip-view.component.html`,\r\n  styleUrls: ['./ui-tooltip-view.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('host', [\r\n      transition(':enter, :leave', [\r\n        query('@*', animateChild(), {optional: true}),\r\n      ]),\r\n    ]),\r\n    trigger('fade', [\r\n      transition(':enter', [\r\n        style({opacity: 0}),\r\n        animate('150ms ease-out', style({opacity: 1})),\r\n      ]),\r\n      transition(':leave', [\r\n        style({opacity: 1}),\r\n        animate('150ms ease-out', style({opacity: 0})),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class UiTooltipViewComponent {\r\n  @Input() anchorEl: any;\r\n\r\n  @Input() color: UiTooltipColors = 'default';\r\n\r\n  @Input() content: string;\r\n\r\n  @HostBinding('@host') hostTrigger = true;\r\n\r\n  @Input() position: KitPinPosition = 'top-center';\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-tooltip-view',\r\n  templateUrl: `./ui-tooltip-view.component.html`,\r\n  styleUrls: ['./ui-tooltip-view.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('host', [\r\n      transition(':enter, :leave', [\r\n        query('@*', animateChild(), {optional: true}),\r\n      ]),\r\n    ]),\r\n    trigger('fade', [\r\n      transition(':enter', [\r\n        style({opacity: 0}),\r\n        animate('150ms ease-out', style({opacity: 1})),\r\n      ]),\r\n      transition(':leave', [\r\n        style({opacity: 1}),\r\n        animate('150ms ease-out', style({opacity: 0})),\r\n      ]),\r\n    ]),\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiTooltipViewComponent","members":[{"kind":150,"name":"anchorEl","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"any","text":"@Input() anchorEl: any;","signature":"@Input() anchorEl: any"},{"kind":150,"name":"color","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"UiTooltipColors","initializer":"'default'","text":"@Input() color: UiTooltipColors = 'default';","signature":"@Input() color: UiTooltipColors = 'default'"},{"kind":150,"name":"content","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"string","text":"@Input() content: string;","signature":"@Input() content: string"},{"kind":150,"name":"hostTrigger","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('@host')"],"initializer":"true","text":"@HostBinding('@host') hostTrigger = true;","signature":"@HostBinding('@host') hostTrigger = true"},{"kind":150,"name":"position","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"KitPinPosition","initializer":"'top-center'","text":"@Input() position: KitPinPosition = 'top-center';","signature":"@Input() position: KitPinPosition = 'top-center'"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-tooltip-view'"}}}]},{"fileName":"lib/ui-tooltip/ui-tooltip.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { KitClassModule, KitOverlayModule, KitPositionModule } from '@ngx-kit/core';\r\nimport { UiTooltipViewComponent } from './ui-tooltip-view/ui-tooltip-view.component';\r\nimport { UiTooltipDirective } from './ui-tooltip/ui-tooltip.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitOverlayModule,\r\n    KitPositionModule,\r\n    KitClassModule,\r\n  ],\r\n  declarations: [\r\n    UiTooltipDirective,\r\n    UiTooltipViewComponent,\r\n  ],\r\n  exports: [\r\n    UiTooltipDirective,\r\n  ],\r\n  entryComponents: [\r\n    UiTooltipViewComponent,\r\n  ],\r\n})\r\nexport class UiTooltipModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitOverlayModule,\r\n    KitPositionModule,\r\n    KitClassModule,\r\n  ],\r\n  declarations: [\r\n    UiTooltipDirective,\r\n    UiTooltipViewComponent,\r\n  ],\r\n  exports: [\r\n    UiTooltipDirective,\r\n  ],\r\n  entryComponents: [\r\n    UiTooltipViewComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiTooltipModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    UiTooltipDirective,\r\n  ]"}}}]},{"fileName":"lib/ui-tooltip/ui-tooltip.ts","type":"ts","text":"export * from './ui-tooltip.module';\r\nexport * from './ui-tooltip/ui-tooltip.directive';\r\n","declars":[]},{"fileName":"lib/ui-tooltip/ui-tooltip/ui-tooltip.directive.ts","type":"ts","text":"import {\r\n  Directive,\r\n  ElementRef,\r\n  HostListener,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { KitOverlayComponentRef, KitOverlayService } from '@ngx-kit/core';\r\nimport { UiTooltipOptions } from '../meta';\r\nimport { UiTooltipViewComponent } from '../ui-tooltip-view/ui-tooltip-view.component';\r\n\r\n@Directive({\r\n  selector: '[uiTooltip]',\r\n})\r\nexport class UiTooltipDirective implements OnInit, OnChanges, OnDestroy {\r\n  @Input() uiTooltip: string;\r\n\r\n  @Input() uiTooltipOptions: UiTooltipOptions = {};\r\n\r\n  private componentRef: KitOverlayComponentRef<UiTooltipViewComponent>;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private overlayService: KitOverlayService,\r\n    private vcr: ViewContainerRef,\r\n  ) {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.proxyProps();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.hide();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  mouseenterHandler() {\r\n    this.show();\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  mouseleaveHandler() {\r\n    this.hide();\r\n  }\r\n\r\n  private hide() {\r\n    if (this.componentRef) {\r\n      this.componentRef.componentRef.destroy();\r\n    }\r\n  }\r\n\r\n  private proxyProps() {\r\n    if (this.componentRef) {\r\n      this.componentRef.input({\r\n        anchorEl: this.el.nativeElement,\r\n        content: this.uiTooltip,\r\n        color: this.uiTooltipOptions.color || 'default',\r\n        position: this.uiTooltipOptions.position || 'top-center',\r\n      });\r\n    }\r\n  }\r\n\r\n  private show() {\r\n    this.componentRef = this.overlayService.hostComponent<UiTooltipViewComponent>({\r\n      component: UiTooltipViewComponent,\r\n      viewContainerRef: this.vcr,\r\n    });\r\n    this.proxyProps();\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Directive({\r\n  selector: '[uiTooltip]',\r\n})"],"modifiers":["export"],"name":"UiTooltipDirective","members":[{"kind":150,"name":"uiTooltip","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"string","text":"@Input() uiTooltip: string;","signature":"@Input() uiTooltip: string"},{"kind":150,"name":"uiTooltipOptions","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"UiTooltipOptions","initializer":"{}","text":"@Input() uiTooltipOptions: UiTooltipOptions = {};","signature":"@Input() uiTooltipOptions: UiTooltipOptions = {}"},{"kind":150,"name":"componentRef","jsDoc":[],"isInternal":false,"modifiers":["private"],"type":"KitOverlayComponentRef<UiTooltipViewComponent>","text":"private componentRef: KitOverlayComponentRef<UiTooltipViewComponent>;","signature":"private componentRef: KitOverlayComponentRef<UiTooltipViewComponent>"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private el: ElementRef","private overlayService: KitOverlayService","private vcr: ViewContainerRef"],"text":"constructor(\r\n    private el: ElementRef,\r\n    private overlayService: KitOverlayService,\r\n    private vcr: ViewContainerRef,\r\n  ) {\r\n  }","signature":"constructor(private el: ElementRef, private overlayService: KitOverlayService, private vcr: ViewContainerRef)"},{"kind":152,"name":"ngOnChanges","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnChanges() {\r\n    this.proxyProps();\r\n  }","signature":"ngOnChanges()"},{"kind":152,"name":"ngOnDestroy","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnDestroy() {\r\n    this.hide();\r\n  }","signature":"ngOnDestroy()"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n  }","signature":"ngOnInit()"},{"kind":152,"name":"mouseenterHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('mouseenter')"],"parameters":[],"text":"@HostListener('mouseenter')\r\n  mouseenterHandler() {\r\n    this.show();\r\n  }","signature":"@HostListener('mouseenter') mouseenterHandler()"},{"kind":152,"name":"mouseleaveHandler","jsDoc":[],"isInternal":false,"decorators":["@HostListener('mouseleave')"],"parameters":[],"text":"@HostListener('mouseleave')\r\n  mouseleaveHandler() {\r\n    this.hide();\r\n  }","signature":"@HostListener('mouseleave') mouseleaveHandler()"},{"kind":152,"name":"hide","jsDoc":[],"isInternal":false,"modifiers":["private"],"parameters":[],"text":"private hide() {\r\n    if (this.componentRef) {\r\n      this.componentRef.componentRef.destroy();\r\n    }\r\n  }","signature":"private hide()"},{"kind":152,"name":"proxyProps","jsDoc":[],"isInternal":false,"modifiers":["private"],"parameters":[],"text":"private proxyProps() {\r\n    if (this.componentRef) {\r\n      this.componentRef.input({\r\n        anchorEl: this.el.nativeElement,\r\n        content: this.uiTooltip,\r\n        color: this.uiTooltipOptions.color || 'default',\r\n        position: this.uiTooltipOptions.position || 'top-center',\r\n      });\r\n    }\r\n  }","signature":"private proxyProps()"},{"kind":152,"name":"show","jsDoc":[],"isInternal":false,"modifiers":["private"],"parameters":[],"text":"private show() {\r\n    this.componentRef = this.overlayService.hostComponent<UiTooltipViewComponent>({\r\n      component: UiTooltipViewComponent,\r\n      viewContainerRef: this.vcr,\r\n    });\r\n    this.proxyProps();\r\n  }","signature":"private show()"}],"ngMeta":{"type":"Directive","decorator":{"selector":"'[uiTooltip]'"}}}]},{"fileName":"lib/ui-vertical-menu/demo/ui-vertical-menu-demo.component.ts","type":"ts","text":"import { Component } from '@angular/core';\n\n/**\n * @demo\n */\n@Component({\n  templateUrl: './ui-vertical-menu-demo.component.html',\n})\nexport class UiVerticalMenuDemoComponent {\n}\n","declars":[{"kind":230,"kindString":"class","jsDoc":[{"tags":[{"name":"demo"}]}],"isInternal":false,"isDemo":true,"decorators":["@Component({\n  templateUrl: './ui-vertical-menu-demo.component.html',\n})"],"modifiers":["export"],"name":"UiVerticalMenuDemoComponent","members":[],"ngMeta":{"type":"Component","decorator":{}}}]},{"fileName":"lib/ui-vertical-menu/demo/ui-vertical-menu-demo.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { UiVerticalMenuModule } from '../ui-vertical-menu.module';\r\nimport { UiVerticalMenuDemoComponent } from './ui-vertical-menu-demo.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiVerticalMenuModule,\r\n  ],\r\n  declarations: [\r\n    UiVerticalMenuDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiVerticalMenuDemoComponent,\r\n  ],\r\n})\r\nexport class UiVerticalMenuDemoModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UiVerticalMenuModule,\r\n  ],\r\n  declarations: [\r\n    UiVerticalMenuDemoComponent,\r\n  ],\r\n  entryComponents: [\r\n    UiVerticalMenuDemoComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiVerticalMenuDemoModule","members":[],"ngMeta":{"type":"NgModule","decorator":{}}}]},{"fileName":"lib/ui-vertical-menu/ui-vertical-menu-group/ui-vertical-menu-group.component.ts","type":"ts","text":"import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { KitCollapseHostService, KitCollapseItemService } from '@ngx-kit/core';\r\n\r\n@Component({\r\n  selector: 'ui-vertical-menu-group',\r\n  template: `\r\n    <div class=\"title\" (click)=\"toggle()\">\r\n      <span class=\"wrapper\"><ng-content></ng-content></span>\r\n      <button class=\"arrow\">\r\n        <ng-container *ngIf=\"activeState\">&#10005;</ng-container>\r\n        <ng-container *ngIf=\"!activeState\">&#9661;</ng-container>\r\n      </button>\r\n    </div>\r\n    <ng-content select=\"ui-vertical-menu-sub\"></ng-content>\r\n  `,\r\n  styleUrls: ['./ui-vertical-menu-group.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitCollapseItemService,\r\n  ],\r\n})\r\nexport class UiVerticalMenuGroupComponent implements OnInit, OnChanges {\r\n  @Input() active: boolean;\r\n\r\n  activeState = false;\r\n\r\n  constructor(\r\n    private item: KitCollapseItemService,\r\n    private host: KitCollapseHostService,\r\n    private cdr: ChangeDetectorRef,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.host.activeChanges.subscribe(() => {\r\n      this.activeState = this.item.active;\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if ('active' in changes) {\r\n      this.item.active = this.active;\r\n    }\r\n  }\r\n\r\n  toggle() {\r\n    this.item.toggle();\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-vertical-menu-group',\r\n  template: `\r\n    <div class=\"title\" (click)=\"toggle()\">\r\n      <span class=\"wrapper\"><ng-content></ng-content></span>\r\n      <button class=\"arrow\">\r\n        <ng-container *ngIf=\"activeState\">&#10005;</ng-container>\r\n        <ng-container *ngIf=\"!activeState\">&#9661;</ng-container>\r\n      </button>\r\n    </div>\r\n    <ng-content select=\"ui-vertical-menu-sub\"></ng-content>\r\n  `,\r\n  styleUrls: ['./ui-vertical-menu-group.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitCollapseItemService,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiVerticalMenuGroupComponent","members":[{"kind":150,"name":"active","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"boolean","text":"@Input() active: boolean;","signature":"@Input() active: boolean"},{"kind":150,"name":"activeState","jsDoc":[],"isInternal":false,"initializer":"false","text":"activeState = false;","signature":"activeState = false"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private item: KitCollapseItemService","private host: KitCollapseHostService","private cdr: ChangeDetectorRef"],"text":"constructor(\r\n    private item: KitCollapseItemService,\r\n    private host: KitCollapseHostService,\r\n    private cdr: ChangeDetectorRef,\r\n  ) {\r\n  }","signature":"constructor(private item: KitCollapseItemService, private host: KitCollapseHostService, private cdr: ChangeDetectorRef)"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n    this.host.activeChanges.subscribe(() => {\r\n      this.activeState = this.item.active;\r\n      this.cdr.detectChanges();\r\n    });\r\n  }","signature":"ngOnInit()"},{"kind":152,"name":"ngOnChanges","jsDoc":[],"isInternal":false,"parameters":["changes: SimpleChanges"],"text":"ngOnChanges(changes: SimpleChanges) {\r\n    if ('active' in changes) {\r\n      this.item.active = this.active;\r\n    }\r\n  }","signature":"ngOnChanges(changes: SimpleChanges)"},{"kind":152,"name":"toggle","jsDoc":[],"isInternal":false,"parameters":[],"text":"toggle() {\r\n    this.item.toggle();\r\n  }","signature":"toggle()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-vertical-menu-group'"}}}]},{"fileName":"lib/ui-vertical-menu/ui-vertical-menu-item/ui-vertical-menu-item.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component, Input, } from '@angular/core';\r\nimport { KitCollapseItemService } from '@ngx-kit/core';\r\n\r\n@Component({\r\n  selector: 'ui-vertical-menu-item,a[uiVerticalMenuItem]',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-vertical-menu-item.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitCollapseItemService,\r\n  ],\r\n})\r\nexport class UiVerticalMenuItemComponent {\r\n  @Input() uiVerticalMenuItem: void;\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-vertical-menu-item,a[uiVerticalMenuItem]',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-vertical-menu-item.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitCollapseItemService,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiVerticalMenuItemComponent","members":[{"kind":150,"name":"uiVerticalMenuItem","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"void","text":"@Input() uiVerticalMenuItem: void;","signature":"@Input() uiVerticalMenuItem: void"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-vertical-menu-item,a[uiVerticalMenuItem]'"}}}]},{"fileName":"lib/ui-vertical-menu/ui-vertical-menu-sub/ui-vertical-menu-sub.component.ts","type":"ts","text":"import { animate, style, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectionStrategy, Component, HostBinding, Input, } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ui-vertical-menu-sub',\r\n  template: `\r\n    <div class=\"wrapper\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./ui-vertical-menu-sub.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('collapse', [\r\n      transition(':enter', [\r\n        style({height: 0}),\r\n        animate('200ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({height: '*'})),\r\n      ]),\r\n      transition(':leave', [\r\n        style({height: '*'}),\r\n        animate('200ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({height: 0})),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class UiVerticalMenuSubComponent {\r\n  @HostBinding('@collapse') collapseTrigger = true;\r\n\r\n  @Input() uiVerticalMenuSub: void;\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-vertical-menu-sub',\r\n  template: `\r\n    <div class=\"wrapper\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./ui-vertical-menu-sub.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('collapse', [\r\n      transition(':enter', [\r\n        style({height: 0}),\r\n        animate('200ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({height: '*'})),\r\n      ]),\r\n      transition(':leave', [\r\n        style({height: '*'}),\r\n        animate('200ms cubic-bezier(0.0, 0.0, 0.2, 1)', style({height: 0})),\r\n      ]),\r\n    ]),\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiVerticalMenuSubComponent","members":[{"kind":150,"name":"collapseTrigger","jsDoc":[],"isInternal":false,"decorators":["@HostBinding('@collapse')"],"initializer":"true","text":"@HostBinding('@collapse') collapseTrigger = true;","signature":"@HostBinding('@collapse') collapseTrigger = true"},{"kind":150,"name":"uiVerticalMenuSub","jsDoc":[],"isInternal":false,"decorators":["@Input()"],"type":"void","text":"@Input() uiVerticalMenuSub: void;","signature":"@Input() uiVerticalMenuSub: void"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-vertical-menu-sub'"}}}]},{"fileName":"lib/ui-vertical-menu/ui-vertical-menu.module.ts","type":"ts","text":"import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { KitCollapseModule } from '@ngx-kit/core';\r\nimport { UiVerticalMenuGroupComponent } from './ui-vertical-menu-group/ui-vertical-menu-group.component';\r\nimport { UiVerticalMenuItemComponent } from './ui-vertical-menu-item/ui-vertical-menu-item.component';\r\nimport { UiVerticalMenuSubComponent } from './ui-vertical-menu-sub/ui-vertical-menu-sub.component';\r\nimport { UiVerticalMenuComponent } from './ui-vertical-menu/ui-vertical-menu.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitCollapseModule,\r\n  ],\r\n  declarations: [\r\n    UiVerticalMenuComponent,\r\n    UiVerticalMenuItemComponent,\r\n    UiVerticalMenuGroupComponent,\r\n    UiVerticalMenuSubComponent,\r\n  ],\r\n  exports: [\r\n    KitCollapseModule,\r\n    UiVerticalMenuComponent,\r\n    UiVerticalMenuItemComponent,\r\n    UiVerticalMenuGroupComponent,\r\n    UiVerticalMenuSubComponent,\r\n  ],\r\n})\r\nexport class UiVerticalMenuModule {\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KitCollapseModule,\r\n  ],\r\n  declarations: [\r\n    UiVerticalMenuComponent,\r\n    UiVerticalMenuItemComponent,\r\n    UiVerticalMenuGroupComponent,\r\n    UiVerticalMenuSubComponent,\r\n  ],\r\n  exports: [\r\n    KitCollapseModule,\r\n    UiVerticalMenuComponent,\r\n    UiVerticalMenuItemComponent,\r\n    UiVerticalMenuGroupComponent,\r\n    UiVerticalMenuSubComponent,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiVerticalMenuModule","members":[],"ngMeta":{"type":"NgModule","decorator":{"exports":"[\r\n    KitCollapseModule,\r\n    UiVerticalMenuComponent,\r\n    UiVerticalMenuItemComponent,\r\n    UiVerticalMenuGroupComponent,\r\n    UiVerticalMenuSubComponent,\r\n  ]"}}}]},{"fileName":"lib/ui-vertical-menu/ui-vertical-menu.ts","type":"ts","text":"export * from './ui-vertical-menu/ui-vertical-menu.component';\r\nexport * from './ui-vertical-menu-item/ui-vertical-menu-item.component';\r\nexport * from './ui-vertical-menu-group/ui-vertical-menu-group.component';\r\nexport * from './ui-vertical-menu-sub/ui-vertical-menu-sub.component';\r\nexport * from './ui-vertical-menu.module';\r\n","declars":[]},{"fileName":"lib/ui-vertical-menu/ui-vertical-menu/ui-vertical-menu.component.ts","type":"ts","text":"import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, SimpleChanges, } from '@angular/core';\r\nimport { KitCollapseHostService } from '@ngx-kit/core';\r\n\r\n@Component({\r\n  selector: 'ui-vertical-menu',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-vertical-menu.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitCollapseHostService,\r\n  ],\r\n})\r\nexport class UiVerticalMenuComponent implements OnInit, OnChanges {\r\n  /**\r\n   * Allow few panels open at a time.\r\n   */\r\n  @Input() multiple = false;\r\n\r\n  constructor(private host: KitCollapseHostService) {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['multiple']) {\r\n      this.host.multiple = this.multiple;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","declars":[{"kind":230,"kindString":"class","jsDoc":[],"isInternal":false,"isDemo":false,"decorators":["@Component({\r\n  selector: 'ui-vertical-menu',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./ui-vertical-menu.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    KitCollapseHostService,\r\n  ],\r\n})"],"modifiers":["export"],"name":"UiVerticalMenuComponent","members":[{"kind":150,"name":"multiple","jsDoc":[{"comment":"Allow few panels open at a time.","tags":[]}],"isInternal":false,"decorators":["@Input()"],"initializer":"false","text":"@Input() multiple = false;","signature":"@Input() multiple = false"},{"kind":153,"name":"constructor","jsDoc":[],"isInternal":false,"parameters":["private host: KitCollapseHostService"],"text":"constructor(private host: KitCollapseHostService) {\r\n  }","signature":"constructor(private host: KitCollapseHostService)"},{"kind":152,"name":"ngOnChanges","jsDoc":[],"isInternal":false,"parameters":["changes: SimpleChanges"],"text":"ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['multiple']) {\r\n      this.host.multiple = this.multiple;\r\n    }\r\n  }","signature":"ngOnChanges(changes: SimpleChanges)"},{"kind":152,"name":"ngOnInit","jsDoc":[],"isInternal":false,"parameters":[],"text":"ngOnInit() {\r\n  }","signature":"ngOnInit()"}],"ngMeta":{"type":"Component","decorator":{"selector":"'ui-vertical-menu'"}}}]},{"fileName":"schematics/_template/index.ts","type":"ts","text":"import {\r\n  apply,\r\n  branchAndMerge,\r\n  chain,\r\n  mergeWith,\r\n  move,\r\n  Rule,\r\n  SchematicContext,\r\n  SchematicsException,\r\n  template,\r\n  Tree,\r\n  url,\r\n} from '@angular-devkit/schematics';\r\nimport { getWorkspace } from '../config';\r\nimport { parseName } from '../parse-name';\r\nimport * as stringUtils from '../strings';\r\nimport { Schema as ModuleOptions } from './schema';\r\n\r\nexport default function (options: ModuleOptions): Rule {\r\n  return (host: Tree, context: SchematicContext) => {\r\n    const workspace = getWorkspace(host);\r\n    if (!options.project) {\r\n      throw new SchematicsException('Option (project) is required.');\r\n    }\r\n    const project = workspace.projects[options.project];\r\n    if (options.path === undefined) {\r\n      const projectDirName = project.projectType === 'application' ? 'app' : 'lib';\r\n      options.path = `/${project.root}/src/${projectDirName}`;\r\n    }\r\n\r\n    const parsedPath = parseName(options.path, options.name);\r\n    options.name = parsedPath.name;\r\n    options.path = parsedPath.path;\r\n\r\n//    options.path = options.path ? normalize(options.path) : options.path;\r\n\r\n    const templateSource = apply(url('./files'), [\r\n      template({\r\n        ...stringUtils,\r\n        'if-flat': (s: string) => s,\r\n        ...options as object,\r\n      }),\r\n      move(parsedPath.path),\r\n    ]);\r\n    return chain([\r\n      branchAndMerge(chain([\r\n        mergeWith(templateSource),\r\n      ])),\r\n    ])(host, context);\r\n  };\r\n}\r\n","declars":[{"kind":229,"kindString":"function","jsDoc":[],"isInternal":false,"modifiers":["export","default"],"parameters":["options: ModuleOptions"],"type":"Rule","signature":"(options: ModuleOptions): Rule"}]},{"fileName":"schematics/config.ts","type":"ts","text":"/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { experimental } from '@angular-devkit/core';\r\nimport { Rule, SchematicsException, Tree } from '@angular-devkit/schematics';\r\n\r\n// The interfaces below are generated from the Angular CLI configuration schema\r\n// https://github.com/angular/angular-cli/blob/master/packages/@angular/cli/lib/config/schema.json\r\nexport interface AppConfig {\r\n  /**\r\n   * Name of the app.\r\n   */\r\n  name?: string;\r\n  /**\r\n   * Directory where app files are placed.\r\n   */\r\n  appRoot?: string;\r\n  /**\r\n   * The root directory of the app.\r\n   */\r\n  root?: string;\r\n  /**\r\n   * The output directory for build results.\r\n   */\r\n  outDir?: string;\r\n  /**\r\n   * List of application assets.\r\n   */\r\n  assets?: (string | {\r\n    /**\r\n     * The pattern to match.\r\n     */\r\n    glob?: string;\r\n    /**\r\n     * The dir to search within.\r\n     */\r\n    input?: string;\r\n    /**\r\n     * The output path (relative to the outDir).\r\n     */\r\n    output?: string;\r\n  })[];\r\n  /**\r\n   * URL where files will be deployed.\r\n   */\r\n  deployUrl?: string;\r\n  /**\r\n   * Base url for the application being built.\r\n   */\r\n  baseHref?: string;\r\n  /**\r\n   * The runtime platform of the app.\r\n   */\r\n  platform?: ('browser' | 'server');\r\n  /**\r\n   * The name of the start HTML file.\r\n   */\r\n  index?: string;\r\n  /**\r\n   * The name of the main entry-point file.\r\n   */\r\n  main?: string;\r\n  /**\r\n   * The name of the polyfills file.\r\n   */\r\n  polyfills?: string;\r\n  /**\r\n   * The name of the test entry-point file.\r\n   */\r\n  test?: string;\r\n  /**\r\n   * The name of the TypeScript configuration file.\r\n   */\r\n  tsconfig?: string;\r\n  /**\r\n   * The name of the TypeScript configuration file for unit tests.\r\n   */\r\n  testTsconfig?: string;\r\n  /**\r\n   * The prefix to apply to generated selectors.\r\n   */\r\n  prefix?: string;\r\n  /**\r\n   * Experimental support for a service worker from @angular/service-worker.\r\n   */\r\n  serviceWorker?: boolean;\r\n  /**\r\n   * Global styles to be included in the build.\r\n   */\r\n  styles?: (string | {\r\n    input?: string;\r\n    [name: string]: any; // tslint:disable-line:no-any\r\n  })[];\r\n  /**\r\n   * Options to pass to style preprocessors\r\n   */\r\n  stylePreprocessorOptions?: {\r\n    /**\r\n     * Paths to include. Paths will be resolved to project root.\r\n     */\r\n    includePaths?: string[];\r\n  };\r\n  /**\r\n   * Global scripts to be included in the build.\r\n   */\r\n  scripts?: (string | {\r\n    input: string;\r\n    [name: string]: any; // tslint:disable-line:no-any\r\n  })[];\r\n  /**\r\n   * Source file for environment config.\r\n   */\r\n  environmentSource?: string;\r\n  /**\r\n   * Name and corresponding file for environment config.\r\n   */\r\n  environments?: {\r\n    [name: string]: any; // tslint:disable-line:no-any\r\n  };\r\n  appShell?: {\r\n    app: string;\r\n    route: string;\r\n  };\r\n}\r\n\r\nexport interface CliConfig {\r\n  $schema?: string;\r\n  /**\r\n   * The global configuration of the project.\r\n   */\r\n  project?: {\r\n    /**\r\n     * The name of the project.\r\n     */\r\n    name?: string;\r\n    /**\r\n     * Whether or not this project was ejected.\r\n     */\r\n    ejected?: boolean;\r\n  };\r\n  /**\r\n   * Properties of the different applications in this project.\r\n   */\r\n  apps?: AppConfig[];\r\n  /**\r\n   * Configuration for end-to-end tests.\r\n   */\r\n  e2e?: {\r\n    protractor?: {\r\n      /**\r\n       * Path to the config file.\r\n       */\r\n      config?: string;\r\n    };\r\n  };\r\n  /**\r\n   * Properties to be passed to TSLint.\r\n   */\r\n  lint?: {\r\n    /**\r\n     * File glob(s) to lint.\r\n     */\r\n    files?: (string | string[]);\r\n    /**\r\n     * Location of the tsconfig.json project file.\r\n     * Will also use as files to lint if 'files' property not present.\r\n     */\r\n    project: string;\r\n    /**\r\n     * Location of the tslint.json configuration.\r\n     */\r\n    tslintConfig?: string;\r\n    /**\r\n     * File glob(s) to ignore.\r\n     */\r\n    exclude?: (string | string[]);\r\n  }[];\r\n  /**\r\n   * Configuration for unit tests.\r\n   */\r\n  test?: {\r\n    karma?: {\r\n      /**\r\n       * Path to the karma config file.\r\n       */\r\n      config?: string;\r\n    };\r\n    codeCoverage?: {\r\n      /**\r\n       * Globs to exclude from code coverage.\r\n       */\r\n      exclude?: string[];\r\n    };\r\n  };\r\n  /**\r\n   * Specify the default values for generating.\r\n   */\r\n  defaults?: {\r\n    /**\r\n     * The file extension to be used for style files.\r\n     */\r\n    styleExt?: string;\r\n    /**\r\n     * How often to check for file updates.\r\n     */\r\n    poll?: number;\r\n    /**\r\n     * Use lint to fix files after generation\r\n     */\r\n    lintFix?: boolean;\r\n    /**\r\n     * Options for generating a class.\r\n     */\r\n    class?: {\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Options for generating a component.\r\n     */\r\n    component?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n      /**\r\n       * Specifies if the style will be in the ts file.\r\n       */\r\n      inlineStyle?: boolean;\r\n      /**\r\n       * Specifies if the template will be in the ts file.\r\n       */\r\n      inlineTemplate?: boolean;\r\n      /**\r\n       * Specifies the view encapsulation strategy.\r\n       */\r\n      viewEncapsulation?: ('Emulated' | 'Native' | 'None');\r\n      /**\r\n       * Specifies the change detection strategy.\r\n       */\r\n      changeDetection?: ('Default' | 'OnPush');\r\n    };\r\n    /**\r\n     * Options for generating a directive.\r\n     */\r\n    directive?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Options for generating a guard.\r\n     */\r\n    guard?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Options for generating an interface.\r\n     */\r\n    interface?: {\r\n      /**\r\n       * Prefix to apply to interface names. (i.e. I)\r\n       */\r\n      prefix?: string;\r\n    };\r\n    /**\r\n     * Options for generating a module.\r\n     */\r\n    module?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Options for generating a pipe.\r\n     */\r\n    pipe?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Options for generating a service.\r\n     */\r\n    service?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Properties to be passed to the build command.\r\n     */\r\n    build?: {\r\n      /**\r\n       * Output sourcemaps.\r\n       */\r\n      sourcemaps?: boolean;\r\n      /**\r\n       * Base url for the application being built.\r\n       */\r\n      baseHref?: string;\r\n      /**\r\n       * The ssl key used by the server.\r\n       */\r\n      progress?: boolean;\r\n      /**\r\n       * Enable and define the file watching poll time period (milliseconds).\r\n       */\r\n      poll?: number;\r\n      /**\r\n       * Delete output path before build.\r\n       */\r\n      deleteOutputPath?: boolean;\r\n      /**\r\n       * Do not use the real path when resolving modules.\r\n       */\r\n      preserveSymlinks?: boolean;\r\n      /**\r\n       * Show circular dependency warnings on builds.\r\n       */\r\n      showCircularDependencies?: boolean;\r\n      /**\r\n       * Use a separate bundle containing code used across multiple bundles.\r\n       */\r\n      commonChunk?: boolean;\r\n      /**\r\n       * Use file name for lazy loaded chunks.\r\n       */\r\n      namedChunks?: boolean;\r\n    };\r\n    /**\r\n     * Properties to be passed to the serve command.\r\n     */\r\n    serve?: {\r\n      /**\r\n       * The port the application will be served on.\r\n       */\r\n      port?: number;\r\n      /**\r\n       * The host the application will be served on.\r\n       */\r\n      host?: string;\r\n      /**\r\n       * Enables ssl for the application.\r\n       */\r\n      ssl?: boolean;\r\n      /**\r\n       * The ssl key used by the server.\r\n       */\r\n      sslKey?: string;\r\n      /**\r\n       * The ssl certificate used by the server.\r\n       */\r\n      sslCert?: string;\r\n      /**\r\n       * Proxy configuration file.\r\n       */\r\n      proxyConfig?: string;\r\n    };\r\n    /**\r\n     * Properties about schematics.\r\n     */\r\n    schematics?: {\r\n      /**\r\n       * The schematics collection to use.\r\n       */\r\n      collection?: string;\r\n      /**\r\n       * The new app schematic.\r\n       */\r\n      newApp?: string;\r\n    };\r\n  };\r\n  /**\r\n   * Specify which package manager tool to use.\r\n   */\r\n  packageManager?: ('npm' | 'cnpm' | 'yarn' | 'default');\r\n  /**\r\n   * Allow people to disable console warnings.\r\n   */\r\n  warnings?: {\r\n    /**\r\n     * Show a warning when the user enabled the --hmr option.\r\n     */\r\n    hmrWarning?: boolean;\r\n    /**\r\n     * Show a warning when the node version is incompatible.\r\n     */\r\n    nodeDeprecation?: boolean;\r\n    /**\r\n     * Show a warning when the user installed angular-cli.\r\n     */\r\n    packageDeprecation?: boolean;\r\n    /**\r\n     * Show a warning when the global version is newer than the local one.\r\n     */\r\n    versionMismatch?: boolean;\r\n    /**\r\n     * Show a warning when the TypeScript version is incompatible\r\n     */\r\n    typescriptMismatch?: boolean;\r\n  };\r\n}\r\n\r\nexport type WorkspaceSchema = experimental.workspace.WorkspaceSchema;\r\nexport type WorkspaceProject = experimental.workspace.WorkspaceProject;\r\n\r\nexport function getWorkspacePath(host: Tree): string {\r\n  const possibleFiles = ['/angular.json', '/.angular.json'];\r\n  const path = possibleFiles.filter(path => host.exists(path))[0];\r\n\r\n  return path;\r\n}\r\n\r\nexport function getWorkspace(host: Tree): WorkspaceSchema {\r\n  const path = getWorkspacePath(host);\r\n  const configBuffer = host.read(path);\r\n  if (configBuffer === null) {\r\n    throw new SchematicsException(`Could not find (${path})`);\r\n  }\r\n  const config = configBuffer.toString();\r\n\r\n  return JSON.parse(config);\r\n}\r\n\r\nexport function addProjectToWorkspace(\r\n  workspace: WorkspaceSchema,\r\n  name: string,\r\n  project: WorkspaceProject,\r\n): Rule {\r\n  return (host: Tree) => {\r\n\r\n    if (workspace.projects[name]) {\r\n      throw new Error(`Project '${name}' already exists in workspace.`);\r\n    }\r\n\r\n    // Add project to workspace.\r\n    workspace.projects[name] = project;\r\n\r\n    if (!workspace.defaultProject && Object.keys(workspace.projects).length === 1) {\r\n      // Make the new project the default one.\r\n      workspace.defaultProject = name;\r\n    }\r\n\r\n    host.overwrite(getWorkspacePath(host), JSON.stringify(workspace, null, 2));\r\n  };\r\n}\r\n\r\nexport const configPath = '/.angular-cli.json';\r\n\r\nexport function getConfig(host: Tree): CliConfig {\r\n  const configBuffer = host.read(configPath);\r\n  if (configBuffer === null) {\r\n    throw new SchematicsException('Could not find .angular-cli.json');\r\n  }\r\n\r\n  const config = JSON.parse(configBuffer.toString());\r\n\r\n  return config;\r\n}\r\n\r\nexport function getAppFromConfig(config: CliConfig, appIndexOrName: string): AppConfig | null {\r\n  if (!config.apps) {\r\n    return null;\r\n  }\r\n\r\n  if (parseInt(appIndexOrName) >= 0) {\r\n    return config.apps[parseInt(appIndexOrName)];\r\n  }\r\n\r\n  return config.apps.filter((app) => app.name === appIndexOrName)[0];\r\n}\r\n","declars":[{"kind":231,"kindString":"interface","jsDoc":[],"isInternal":false,"name":"AppConfig","members":[{"kind":149,"jsDoc":[{"comment":"Name of the app.","tags":[]}],"isInternal":false,"name":"name","type":"string","text":"name?: string;","signature":"name(): string"},{"kind":149,"jsDoc":[{"comment":"Directory where app files are placed.","tags":[]}],"isInternal":false,"name":"appRoot","type":"string","text":"appRoot?: string;","signature":"appRoot(): string"},{"kind":149,"jsDoc":[{"comment":"The root directory of the app.","tags":[]}],"isInternal":false,"name":"root","type":"string","text":"root?: string;","signature":"root(): string"},{"kind":149,"jsDoc":[{"comment":"The output directory for build results.","tags":[]}],"isInternal":false,"name":"outDir","type":"string","text":"outDir?: string;","signature":"outDir(): string"},{"kind":149,"jsDoc":[{"comment":"List of application assets.","tags":[]}],"isInternal":false,"name":"assets","type":"(string | {\r\n    /**\r\n     * The pattern to match.\r\n     */\r\n    glob?: string;\r\n    /**\r\n     * The dir to search within.\r\n     */\r\n    input?: string;\r\n    /**\r\n     * The output path (relative to the outDir).\r\n     */\r\n    output?: string;\r\n  })[]","text":"assets?: (string | {\r\n    /**\r\n     * The pattern to match.\r\n     */\r\n    glob?: string;\r\n    /**\r\n     * The dir to search within.\r\n     */\r\n    input?: string;\r\n    /**\r\n     * The output path (relative to the outDir).\r\n     */\r\n    output?: string;\r\n  })[];","signature":"assets(): (string | {\r\n    /**\r\n     * The pattern to match.\r\n     */\r\n    glob?: string;\r\n    /**\r\n     * The dir to search within.\r\n     */\r\n    input?: string;\r\n    /**\r\n     * The output path (relative to the outDir).\r\n     */\r\n    output?: string;\r\n  })[]"},{"kind":149,"jsDoc":[{"comment":"URL where files will be deployed.","tags":[]}],"isInternal":false,"name":"deployUrl","type":"string","text":"deployUrl?: string;","signature":"deployUrl(): string"},{"kind":149,"jsDoc":[{"comment":"Base url for the application being built.","tags":[]}],"isInternal":false,"name":"baseHref","type":"string","text":"baseHref?: string;","signature":"baseHref(): string"},{"kind":149,"jsDoc":[{"comment":"The runtime platform of the app.","tags":[]}],"isInternal":false,"name":"platform","type":"('browser' | 'server')","text":"platform?: ('browser' | 'server');","signature":"platform(): ('browser' | 'server')"},{"kind":149,"jsDoc":[{"comment":"The name of the start HTML file.","tags":[]}],"isInternal":false,"name":"index","type":"string","text":"index?: string;","signature":"index(): string"},{"kind":149,"jsDoc":[{"comment":"The name of the main entry-point file.","tags":[]}],"isInternal":false,"name":"main","type":"string","text":"main?: string;","signature":"main(): string"},{"kind":149,"jsDoc":[{"comment":"The name of the polyfills file.","tags":[]}],"isInternal":false,"name":"polyfills","type":"string","text":"polyfills?: string;","signature":"polyfills(): string"},{"kind":149,"jsDoc":[{"comment":"The name of the test entry-point file.","tags":[]}],"isInternal":false,"name":"test","type":"string","text":"test?: string;","signature":"test(): string"},{"kind":149,"jsDoc":[{"comment":"The name of the TypeScript configuration file.","tags":[]}],"isInternal":false,"name":"tsconfig","type":"string","text":"tsconfig?: string;","signature":"tsconfig(): string"},{"kind":149,"jsDoc":[{"comment":"The name of the TypeScript configuration file for unit tests.","tags":[]}],"isInternal":false,"name":"testTsconfig","type":"string","text":"testTsconfig?: string;","signature":"testTsconfig(): string"},{"kind":149,"jsDoc":[{"comment":"The prefix to apply to generated selectors.","tags":[]}],"isInternal":false,"name":"prefix","type":"string","text":"prefix?: string;","signature":"prefix(): string"},{"kind":149,"jsDoc":[{"comment":"Experimental support for a service worker from @angular/service-worker.","tags":[]}],"isInternal":false,"name":"serviceWorker","type":"boolean","text":"serviceWorker?: boolean;","signature":"serviceWorker(): boolean"},{"kind":149,"jsDoc":[{"comment":"Global styles to be included in the build.","tags":[]}],"isInternal":false,"name":"styles","type":"(string | {\r\n    input?: string;\r\n    [name: string]: any; // tslint:disable-line:no-any\r\n  })[]","text":"styles?: (string | {\r\n    input?: string;\r\n    [name: string]: any; // tslint:disable-line:no-any\r\n  })[];","signature":"styles(): (string | {\r\n    input?: string;\r\n    [name: string]: any; // tslint:disable-line:no-any\r\n  })[]"},{"kind":149,"jsDoc":[{"comment":"Options to pass to style preprocessors","tags":[]}],"isInternal":false,"name":"stylePreprocessorOptions","type":"{\r\n    /**\r\n     * Paths to include. Paths will be resolved to project root.\r\n     */\r\n    includePaths?: string[];\r\n  }","text":"stylePreprocessorOptions?: {\r\n    /**\r\n     * Paths to include. Paths will be resolved to project root.\r\n     */\r\n    includePaths?: string[];\r\n  };","signature":"stylePreprocessorOptions(): {\r\n    /**\r\n     * Paths to include. Paths will be resolved to project root.\r\n     */\r\n    includePaths?: string[];\r\n  }"},{"kind":149,"jsDoc":[{"comment":"Global scripts to be included in the build.","tags":[]}],"isInternal":false,"name":"scripts","type":"(string | {\r\n    input: string;\r\n    [name: string]: any; // tslint:disable-line:no-any\r\n  })[]","text":"scripts?: (string | {\r\n    input: string;\r\n    [name: string]: any; // tslint:disable-line:no-any\r\n  })[];","signature":"scripts(): (string | {\r\n    input: string;\r\n    [name: string]: any; // tslint:disable-line:no-any\r\n  })[]"},{"kind":149,"jsDoc":[{"comment":"Source file for environment config.","tags":[]}],"isInternal":false,"name":"environmentSource","type":"string","text":"environmentSource?: string;","signature":"environmentSource(): string"},{"kind":149,"jsDoc":[{"comment":"Name and corresponding file for environment config.","tags":[]}],"isInternal":false,"name":"environments","type":"{\r\n    [name: string]: any; // tslint:disable-line:no-any\r\n  }","text":"environments?: {\r\n    [name: string]: any; // tslint:disable-line:no-any\r\n  };","signature":"environments(): {\r\n    [name: string]: any; // tslint:disable-line:no-any\r\n  }"},{"kind":149,"jsDoc":[],"isInternal":false,"name":"appShell","type":"{\r\n    app: string;\r\n    route: string;\r\n  }","text":"appShell?: {\r\n    app: string;\r\n    route: string;\r\n  };","signature":"appShell(): {\r\n    app: string;\r\n    route: string;\r\n  }"}]},{"kind":231,"kindString":"interface","jsDoc":[],"isInternal":false,"name":"CliConfig","members":[{"kind":149,"jsDoc":[],"isInternal":false,"name":"$schema","type":"string","text":"$schema?: string;","signature":"$schema(): string"},{"kind":149,"jsDoc":[{"comment":"The global configuration of the project.","tags":[]}],"isInternal":false,"name":"project","type":"{\r\n    /**\r\n     * The name of the project.\r\n     */\r\n    name?: string;\r\n    /**\r\n     * Whether or not this project was ejected.\r\n     */\r\n    ejected?: boolean;\r\n  }","text":"project?: {\r\n    /**\r\n     * The name of the project.\r\n     */\r\n    name?: string;\r\n    /**\r\n     * Whether or not this project was ejected.\r\n     */\r\n    ejected?: boolean;\r\n  };","signature":"project(): {\r\n    /**\r\n     * The name of the project.\r\n     */\r\n    name?: string;\r\n    /**\r\n     * Whether or not this project was ejected.\r\n     */\r\n    ejected?: boolean;\r\n  }"},{"kind":149,"jsDoc":[{"comment":"Properties of the different applications in this project.","tags":[]}],"isInternal":false,"name":"apps","type":"AppConfig[]","text":"apps?: AppConfig[];","signature":"apps(): AppConfig[]"},{"kind":149,"jsDoc":[{"comment":"Configuration for end-to-end tests.","tags":[]}],"isInternal":false,"name":"e2e","type":"{\r\n    protractor?: {\r\n      /**\r\n       * Path to the config file.\r\n       */\r\n      config?: string;\r\n    };\r\n  }","text":"e2e?: {\r\n    protractor?: {\r\n      /**\r\n       * Path to the config file.\r\n       */\r\n      config?: string;\r\n    };\r\n  };","signature":"e2e(): {\r\n    protractor?: {\r\n      /**\r\n       * Path to the config file.\r\n       */\r\n      config?: string;\r\n    };\r\n  }"},{"kind":149,"jsDoc":[{"comment":"Properties to be passed to TSLint.","tags":[]}],"isInternal":false,"name":"lint","type":"{\r\n    /**\r\n     * File glob(s) to lint.\r\n     */\r\n    files?: (string | string[]);\r\n    /**\r\n     * Location of the tsconfig.json project file.\r\n     * Will also use as files to lint if 'files' property not present.\r\n     */\r\n    project: string;\r\n    /**\r\n     * Location of the tslint.json configuration.\r\n     */\r\n    tslintConfig?: string;\r\n    /**\r\n     * File glob(s) to ignore.\r\n     */\r\n    exclude?: (string | string[]);\r\n  }[]","text":"lint?: {\r\n    /**\r\n     * File glob(s) to lint.\r\n     */\r\n    files?: (string | string[]);\r\n    /**\r\n     * Location of the tsconfig.json project file.\r\n     * Will also use as files to lint if 'files' property not present.\r\n     */\r\n    project: string;\r\n    /**\r\n     * Location of the tslint.json configuration.\r\n     */\r\n    tslintConfig?: string;\r\n    /**\r\n     * File glob(s) to ignore.\r\n     */\r\n    exclude?: (string | string[]);\r\n  }[];","signature":"lint(): {\r\n    /**\r\n     * File glob(s) to lint.\r\n     */\r\n    files?: (string | string[]);\r\n    /**\r\n     * Location of the tsconfig.json project file.\r\n     * Will also use as files to lint if 'files' property not present.\r\n     */\r\n    project: string;\r\n    /**\r\n     * Location of the tslint.json configuration.\r\n     */\r\n    tslintConfig?: string;\r\n    /**\r\n     * File glob(s) to ignore.\r\n     */\r\n    exclude?: (string | string[]);\r\n  }[]"},{"kind":149,"jsDoc":[{"comment":"Configuration for unit tests.","tags":[]}],"isInternal":false,"name":"test","type":"{\r\n    karma?: {\r\n      /**\r\n       * Path to the karma config file.\r\n       */\r\n      config?: string;\r\n    };\r\n    codeCoverage?: {\r\n      /**\r\n       * Globs to exclude from code coverage.\r\n       */\r\n      exclude?: string[];\r\n    };\r\n  }","text":"test?: {\r\n    karma?: {\r\n      /**\r\n       * Path to the karma config file.\r\n       */\r\n      config?: string;\r\n    };\r\n    codeCoverage?: {\r\n      /**\r\n       * Globs to exclude from code coverage.\r\n       */\r\n      exclude?: string[];\r\n    };\r\n  };","signature":"test(): {\r\n    karma?: {\r\n      /**\r\n       * Path to the karma config file.\r\n       */\r\n      config?: string;\r\n    };\r\n    codeCoverage?: {\r\n      /**\r\n       * Globs to exclude from code coverage.\r\n       */\r\n      exclude?: string[];\r\n    };\r\n  }"},{"kind":149,"jsDoc":[{"comment":"Specify the default values for generating.","tags":[]}],"isInternal":false,"name":"defaults","type":"{\r\n    /**\r\n     * The file extension to be used for style files.\r\n     */\r\n    styleExt?: string;\r\n    /**\r\n     * How often to check for file updates.\r\n     */\r\n    poll?: number;\r\n    /**\r\n     * Use lint to fix files after generation\r\n     */\r\n    lintFix?: boolean;\r\n    /**\r\n     * Options for generating a class.\r\n     */\r\n    class?: {\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Options for generating a component.\r\n     */\r\n    component?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n      /**\r\n       * Specifies if the style will be in the ts file.\r\n       */\r\n      inlineStyle?: boolean;\r\n      /**\r\n       * Specifies if the template will be in the ts file.\r\n       */\r\n      inlineTemplate?: boolean;\r\n      /**\r\n       * Specifies the view encapsulation strategy.\r\n       */\r\n      viewEncapsulation?: ('Emulated' | 'Native' | 'None');\r\n      /**\r\n       * Specifies the change detection strategy.\r\n       */\r\n      changeDetection?: ('Default' | 'OnPush');\r\n    };\r\n    /**\r\n     * Options for generating a directive.\r\n     */\r\n    directive?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Options for generating a guard.\r\n     */\r\n    guard?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Options for generating an interface.\r\n     */\r\n    interface?: {\r\n      /**\r\n       * Prefix to apply to interface names. (i.e. I)\r\n       */\r\n      prefix?: string;\r\n    };\r\n    /**\r\n     * Options for generating a module.\r\n     */\r\n    module?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Options for generating a pipe.\r\n     */\r\n    pipe?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Options for generating a service.\r\n     */\r\n    service?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Properties to be passed to the build command.\r\n     */\r\n    build?: {\r\n      /**\r\n       * Output sourcemaps.\r\n       */\r\n      sourcemaps?: boolean;\r\n      /**\r\n       * Base url for the application being built.\r\n       */\r\n      baseHref?: string;\r\n      /**\r\n       * The ssl key used by the server.\r\n       */\r\n      progress?: boolean;\r\n      /**\r\n       * Enable and define the file watching poll time period (milliseconds).\r\n       */\r\n      poll?: number;\r\n      /**\r\n       * Delete output path before build.\r\n       */\r\n      deleteOutputPath?: boolean;\r\n      /**\r\n       * Do not use the real path when resolving modules.\r\n       */\r\n      preserveSymlinks?: boolean;\r\n      /**\r\n       * Show circular dependency warnings on builds.\r\n       */\r\n      showCircularDependencies?: boolean;\r\n      /**\r\n       * Use a separate bundle containing code used across multiple bundles.\r\n       */\r\n      commonChunk?: boolean;\r\n      /**\r\n       * Use file name for lazy loaded chunks.\r\n       */\r\n      namedChunks?: boolean;\r\n    };\r\n    /**\r\n     * Properties to be passed to the serve command.\r\n     */\r\n    serve?: {\r\n      /**\r\n       * The port the application will be served on.\r\n       */\r\n      port?: number;\r\n      /**\r\n       * The host the application will be served on.\r\n       */\r\n      host?: string;\r\n      /**\r\n       * Enables ssl for the application.\r\n       */\r\n      ssl?: boolean;\r\n      /**\r\n       * The ssl key used by the server.\r\n       */\r\n      sslKey?: string;\r\n      /**\r\n       * The ssl certificate used by the server.\r\n       */\r\n      sslCert?: string;\r\n      /**\r\n       * Proxy configuration file.\r\n       */\r\n      proxyConfig?: string;\r\n    };\r\n    /**\r\n     * Properties about schematics.\r\n     */\r\n    schematics?: {\r\n      /**\r\n       * The schematics collection to use.\r\n       */\r\n      collection?: string;\r\n      /**\r\n       * The new app schematic.\r\n       */\r\n      newApp?: string;\r\n    };\r\n  }","text":"defaults?: {\r\n    /**\r\n     * The file extension to be used for style files.\r\n     */\r\n    styleExt?: string;\r\n    /**\r\n     * How often to check for file updates.\r\n     */\r\n    poll?: number;\r\n    /**\r\n     * Use lint to fix files after generation\r\n     */\r\n    lintFix?: boolean;\r\n    /**\r\n     * Options for generating a class.\r\n     */\r\n    class?: {\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Options for generating a component.\r\n     */\r\n    component?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n      /**\r\n       * Specifies if the style will be in the ts file.\r\n       */\r\n      inlineStyle?: boolean;\r\n      /**\r\n       * Specifies if the template will be in the ts file.\r\n       */\r\n      inlineTemplate?: boolean;\r\n      /**\r\n       * Specifies the view encapsulation strategy.\r\n       */\r\n      viewEncapsulation?: ('Emulated' | 'Native' | 'None');\r\n      /**\r\n       * Specifies the change detection strategy.\r\n       */\r\n      changeDetection?: ('Default' | 'OnPush');\r\n    };\r\n    /**\r\n     * Options for generating a directive.\r\n     */\r\n    directive?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Options for generating a guard.\r\n     */\r\n    guard?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Options for generating an interface.\r\n     */\r\n    interface?: {\r\n      /**\r\n       * Prefix to apply to interface names. (i.e. I)\r\n       */\r\n      prefix?: string;\r\n    };\r\n    /**\r\n     * Options for generating a module.\r\n     */\r\n    module?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Options for generating a pipe.\r\n     */\r\n    pipe?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Options for generating a service.\r\n     */\r\n    service?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Properties to be passed to the build command.\r\n     */\r\n    build?: {\r\n      /**\r\n       * Output sourcemaps.\r\n       */\r\n      sourcemaps?: boolean;\r\n      /**\r\n       * Base url for the application being built.\r\n       */\r\n      baseHref?: string;\r\n      /**\r\n       * The ssl key used by the server.\r\n       */\r\n      progress?: boolean;\r\n      /**\r\n       * Enable and define the file watching poll time period (milliseconds).\r\n       */\r\n      poll?: number;\r\n      /**\r\n       * Delete output path before build.\r\n       */\r\n      deleteOutputPath?: boolean;\r\n      /**\r\n       * Do not use the real path when resolving modules.\r\n       */\r\n      preserveSymlinks?: boolean;\r\n      /**\r\n       * Show circular dependency warnings on builds.\r\n       */\r\n      showCircularDependencies?: boolean;\r\n      /**\r\n       * Use a separate bundle containing code used across multiple bundles.\r\n       */\r\n      commonChunk?: boolean;\r\n      /**\r\n       * Use file name for lazy loaded chunks.\r\n       */\r\n      namedChunks?: boolean;\r\n    };\r\n    /**\r\n     * Properties to be passed to the serve command.\r\n     */\r\n    serve?: {\r\n      /**\r\n       * The port the application will be served on.\r\n       */\r\n      port?: number;\r\n      /**\r\n       * The host the application will be served on.\r\n       */\r\n      host?: string;\r\n      /**\r\n       * Enables ssl for the application.\r\n       */\r\n      ssl?: boolean;\r\n      /**\r\n       * The ssl key used by the server.\r\n       */\r\n      sslKey?: string;\r\n      /**\r\n       * The ssl certificate used by the server.\r\n       */\r\n      sslCert?: string;\r\n      /**\r\n       * Proxy configuration file.\r\n       */\r\n      proxyConfig?: string;\r\n    };\r\n    /**\r\n     * Properties about schematics.\r\n     */\r\n    schematics?: {\r\n      /**\r\n       * The schematics collection to use.\r\n       */\r\n      collection?: string;\r\n      /**\r\n       * The new app schematic.\r\n       */\r\n      newApp?: string;\r\n    };\r\n  };","signature":"defaults(): {\r\n    /**\r\n     * The file extension to be used for style files.\r\n     */\r\n    styleExt?: string;\r\n    /**\r\n     * How often to check for file updates.\r\n     */\r\n    poll?: number;\r\n    /**\r\n     * Use lint to fix files after generation\r\n     */\r\n    lintFix?: boolean;\r\n    /**\r\n     * Options for generating a class.\r\n     */\r\n    class?: {\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Options for generating a component.\r\n     */\r\n    component?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n      /**\r\n       * Specifies if the style will be in the ts file.\r\n       */\r\n      inlineStyle?: boolean;\r\n      /**\r\n       * Specifies if the template will be in the ts file.\r\n       */\r\n      inlineTemplate?: boolean;\r\n      /**\r\n       * Specifies the view encapsulation strategy.\r\n       */\r\n      viewEncapsulation?: ('Emulated' | 'Native' | 'None');\r\n      /**\r\n       * Specifies the change detection strategy.\r\n       */\r\n      changeDetection?: ('Default' | 'OnPush');\r\n    };\r\n    /**\r\n     * Options for generating a directive.\r\n     */\r\n    directive?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Options for generating a guard.\r\n     */\r\n    guard?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Options for generating an interface.\r\n     */\r\n    interface?: {\r\n      /**\r\n       * Prefix to apply to interface names. (i.e. I)\r\n       */\r\n      prefix?: string;\r\n    };\r\n    /**\r\n     * Options for generating a module.\r\n     */\r\n    module?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Options for generating a pipe.\r\n     */\r\n    pipe?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Options for generating a service.\r\n     */\r\n    service?: {\r\n      /**\r\n       * Flag to indicate if a dir is created.\r\n       */\r\n      flat?: boolean;\r\n      /**\r\n       * Specifies if a spec file is generated.\r\n       */\r\n      spec?: boolean;\r\n    };\r\n    /**\r\n     * Properties to be passed to the build command.\r\n     */\r\n    build?: {\r\n      /**\r\n       * Output sourcemaps.\r\n       */\r\n      sourcemaps?: boolean;\r\n      /**\r\n       * Base url for the application being built.\r\n       */\r\n      baseHref?: string;\r\n      /**\r\n       * The ssl key used by the server.\r\n       */\r\n      progress?: boolean;\r\n      /**\r\n       * Enable and define the file watching poll time period (milliseconds).\r\n       */\r\n      poll?: number;\r\n      /**\r\n       * Delete output path before build.\r\n       */\r\n      deleteOutputPath?: boolean;\r\n      /**\r\n       * Do not use the real path when resolving modules.\r\n       */\r\n      preserveSymlinks?: boolean;\r\n      /**\r\n       * Show circular dependency warnings on builds.\r\n       */\r\n      showCircularDependencies?: boolean;\r\n      /**\r\n       * Use a separate bundle containing code used across multiple bundles.\r\n       */\r\n      commonChunk?: boolean;\r\n      /**\r\n       * Use file name for lazy loaded chunks.\r\n       */\r\n      namedChunks?: boolean;\r\n    };\r\n    /**\r\n     * Properties to be passed to the serve command.\r\n     */\r\n    serve?: {\r\n      /**\r\n       * The port the application will be served on.\r\n       */\r\n      port?: number;\r\n      /**\r\n       * The host the application will be served on.\r\n       */\r\n      host?: string;\r\n      /**\r\n       * Enables ssl for the application.\r\n       */\r\n      ssl?: boolean;\r\n      /**\r\n       * The ssl key used by the server.\r\n       */\r\n      sslKey?: string;\r\n      /**\r\n       * The ssl certificate used by the server.\r\n       */\r\n      sslCert?: string;\r\n      /**\r\n       * Proxy configuration file.\r\n       */\r\n      proxyConfig?: string;\r\n    };\r\n    /**\r\n     * Properties about schematics.\r\n     */\r\n    schematics?: {\r\n      /**\r\n       * The schematics collection to use.\r\n       */\r\n      collection?: string;\r\n      /**\r\n       * The new app schematic.\r\n       */\r\n      newApp?: string;\r\n    };\r\n  }"},{"kind":149,"jsDoc":[{"comment":"Specify which package manager tool to use.","tags":[]}],"isInternal":false,"name":"packageManager","type":"('npm' | 'cnpm' | 'yarn' | 'default')","text":"packageManager?: ('npm' | 'cnpm' | 'yarn' | 'default');","signature":"packageManager(): ('npm' | 'cnpm' | 'yarn' | 'default')"},{"kind":149,"jsDoc":[{"comment":"Allow people to disable console warnings.","tags":[]}],"isInternal":false,"name":"warnings","type":"{\r\n    /**\r\n     * Show a warning when the user enabled the --hmr option.\r\n     */\r\n    hmrWarning?: boolean;\r\n    /**\r\n     * Show a warning when the node version is incompatible.\r\n     */\r\n    nodeDeprecation?: boolean;\r\n    /**\r\n     * Show a warning when the user installed angular-cli.\r\n     */\r\n    packageDeprecation?: boolean;\r\n    /**\r\n     * Show a warning when the global version is newer than the local one.\r\n     */\r\n    versionMismatch?: boolean;\r\n    /**\r\n     * Show a warning when the TypeScript version is incompatible\r\n     */\r\n    typescriptMismatch?: boolean;\r\n  }","text":"warnings?: {\r\n    /**\r\n     * Show a warning when the user enabled the --hmr option.\r\n     */\r\n    hmrWarning?: boolean;\r\n    /**\r\n     * Show a warning when the node version is incompatible.\r\n     */\r\n    nodeDeprecation?: boolean;\r\n    /**\r\n     * Show a warning when the user installed angular-cli.\r\n     */\r\n    packageDeprecation?: boolean;\r\n    /**\r\n     * Show a warning when the global version is newer than the local one.\r\n     */\r\n    versionMismatch?: boolean;\r\n    /**\r\n     * Show a warning when the TypeScript version is incompatible\r\n     */\r\n    typescriptMismatch?: boolean;\r\n  };","signature":"warnings(): {\r\n    /**\r\n     * Show a warning when the user enabled the --hmr option.\r\n     */\r\n    hmrWarning?: boolean;\r\n    /**\r\n     * Show a warning when the node version is incompatible.\r\n     */\r\n    nodeDeprecation?: boolean;\r\n    /**\r\n     * Show a warning when the user installed angular-cli.\r\n     */\r\n    packageDeprecation?: boolean;\r\n    /**\r\n     * Show a warning when the global version is newer than the local one.\r\n     */\r\n    versionMismatch?: boolean;\r\n    /**\r\n     * Show a warning when the TypeScript version is incompatible\r\n     */\r\n    typescriptMismatch?: boolean;\r\n  }"}]},{"kind":232,"kindString":"typeAlias","jsDoc":[],"isInternal":false,"name":"WorkspaceSchema","type":"experimental.workspace.WorkspaceSchema","text":"export type WorkspaceSchema = experimental.workspace.WorkspaceSchema;"},{"kind":232,"kindString":"typeAlias","jsDoc":[],"isInternal":false,"name":"WorkspaceProject","type":"experimental.workspace.WorkspaceProject","text":"export type WorkspaceProject = experimental.workspace.WorkspaceProject;"},{"kind":229,"kindString":"function","jsDoc":[],"isInternal":false,"modifiers":["export"],"name":"getWorkspacePath","parameters":["host: Tree"],"type":"string","signature":"getWorkspacePath(host: Tree): string"},{"kind":229,"kindString":"function","jsDoc":[],"isInternal":false,"modifiers":["export"],"name":"getWorkspace","parameters":["host: Tree"],"type":"WorkspaceSchema","signature":"getWorkspace(host: Tree): WorkspaceSchema"},{"kind":229,"kindString":"function","jsDoc":[],"isInternal":false,"modifiers":["export"],"name":"addProjectToWorkspace","parameters":["workspace: WorkspaceSchema","name: string","project: WorkspaceProject"],"type":"Rule","signature":"addProjectToWorkspace(workspace: WorkspaceSchema, name: string, project: WorkspaceProject): Rule"},{"kind":229,"kindString":"function","jsDoc":[],"isInternal":false,"modifiers":["export"],"name":"getConfig","parameters":["host: Tree"],"type":"CliConfig","signature":"getConfig(host: Tree): CliConfig"},{"kind":229,"kindString":"function","jsDoc":[],"isInternal":false,"modifiers":["export"],"name":"getAppFromConfig","parameters":["config: CliConfig","appIndexOrName: string"],"type":"AppConfig | null","signature":"getAppFromConfig(config: CliConfig, appIndexOrName: string): AppConfig | null"}]},{"fileName":"schematics/parse-name.ts","type":"ts","text":"\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n// import { relative, Path } from \"../../../angular_devkit/core/src/virtual-fs\";\r\nimport { Path, basename, dirname, normalize } from '@angular-devkit/core';\r\n\r\nexport interface Location {\r\n  name: string;\r\n  path: Path;\r\n}\r\n\r\nexport function parseName(path: string, name: string): Location {\r\n  const nameWithoutPath = basename(name as Path);\r\n  const namePath = dirname((path + '/' + name) as Path);\r\n\r\n  return {\r\n    name: nameWithoutPath,\r\n    path: normalize('/' + namePath),\r\n  };\r\n}\r\n","declars":[{"kind":231,"kindString":"interface","jsDoc":[],"isInternal":false,"name":"Location","members":[{"kind":149,"jsDoc":[],"isInternal":false,"name":"name","type":"string","text":"name: string;","signature":"name(): string"},{"kind":149,"jsDoc":[],"isInternal":false,"name":"path","type":"Path","text":"path: Path;","signature":"path(): Path"}]},{"kind":229,"kindString":"function","jsDoc":[],"isInternal":false,"modifiers":["export"],"name":"parseName","parameters":["path: string","name: string"],"type":"Location","signature":"parseName(path: string, name: string): Location"}]},{"fileName":"schematics/strings.ts","type":"ts","text":"/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nconst STRING_DASHERIZE_REGEXP = (/[ _]/g);\r\nconst STRING_DECAMELIZE_REGEXP = (/([a-z\\d])([A-Z])/g);\r\nconst STRING_CAMELIZE_REGEXP = (/(-|_|\\.|\\s)+(.)?/g);\r\nconst STRING_UNDERSCORE_REGEXP_1 = (/([a-z\\d])([A-Z]+)/g);\r\nconst STRING_UNDERSCORE_REGEXP_2 = (/-|\\s+/g);\r\n\r\n/**\r\n * Converts a camelized string into all lower case separated by underscores.\r\n *\r\n ```javascript\r\n decamelize('innerHTML');         // 'inner_html'\r\n decamelize('action_name');       // 'action_name'\r\n decamelize('css-class-name');    // 'css-class-name'\r\n decamelize('my favorite items'); // 'my favorite items'\r\n ```\r\n\r\n @method decamelize\r\n @param {String} str The string to decamelize.\r\n @return {String} the decamelized string.\r\n */\r\nexport function decamelize(str: string): string {\r\n  return str.replace(STRING_DECAMELIZE_REGEXP, '$1_$2').toLowerCase();\r\n}\r\n\r\n/**\r\n Replaces underscores, spaces, or camelCase with dashes.\r\n\r\n ```javascript\r\n dasherize('innerHTML');         // 'inner-html'\r\n dasherize('action_name');       // 'action-name'\r\n dasherize('css-class-name');    // 'css-class-name'\r\n dasherize('my favorite items'); // 'my-favorite-items'\r\n ```\r\n\r\n @method dasherize\r\n @param {String} str The string to dasherize.\r\n @return {String} the dasherized string.\r\n */\r\nexport function dasherize(str: string): string {\r\n  return decamelize(str).replace(STRING_DASHERIZE_REGEXP, '-');\r\n}\r\n\r\n/**\r\n Returns the lowerCamelCase form of a string.\r\n\r\n ```javascript\r\n camelize('innerHTML');          // 'innerHTML'\r\n camelize('action_name');        // 'actionName'\r\n camelize('css-class-name');     // 'cssClassName'\r\n camelize('my favorite items');  // 'myFavoriteItems'\r\n camelize('My Favorite Items');  // 'myFavoriteItems'\r\n ```\r\n\r\n @method camelize\r\n @param {String} str The string to camelize.\r\n @return {String} the camelized string.\r\n */\r\nexport function camelize(str: string): string {\r\n  return str\r\n    .replace(STRING_CAMELIZE_REGEXP, (_match: string, _separator: string, chr: string) => {\r\n      return chr ? chr.toUpperCase() : '';\r\n    })\r\n    .replace(/^([A-Z])/, (match: string) => match.toLowerCase());\r\n}\r\n\r\n/**\r\n Returns the UpperCamelCase form of a string.\r\n\r\n ```javascript\r\n 'innerHTML'.classify();          // 'InnerHTML'\r\n 'action_name'.classify();        // 'ActionName'\r\n 'css-class-name'.classify();     // 'CssClassName'\r\n 'my favorite items'.classify();  // 'MyFavoriteItems'\r\n ```\r\n\r\n @method classify\r\n @param {String} str the string to classify\r\n @return {String} the classified string\r\n */\r\nexport function classify(str: string): string {\r\n  return str.split('.').map(part => capitalize(camelize(part))).join('.');\r\n}\r\n\r\n/**\r\n More general than decamelize. Returns the lower\\_case\\_and\\_underscored\r\n form of a string.\r\n\r\n ```javascript\r\n 'innerHTML'.underscore();          // 'inner_html'\r\n 'action_name'.underscore();        // 'action_name'\r\n 'css-class-name'.underscore();     // 'css_class_name'\r\n 'my favorite items'.underscore();  // 'my_favorite_items'\r\n ```\r\n\r\n @method underscore\r\n @param {String} str The string to underscore.\r\n @return {String} the underscored string.\r\n */\r\nexport function underscore(str: string): string {\r\n  return str\r\n    .replace(STRING_UNDERSCORE_REGEXP_1, '$1_$2')\r\n    .replace(STRING_UNDERSCORE_REGEXP_2, '_')\r\n    .toLowerCase();\r\n}\r\n\r\n/**\r\n Returns the Capitalized form of a string\r\n\r\n ```javascript\r\n 'innerHTML'.capitalize()         // 'InnerHTML'\r\n 'action_name'.capitalize()       // 'Action_name'\r\n 'css-class-name'.capitalize()    // 'Css-class-name'\r\n 'my favorite items'.capitalize() // 'My favorite items'\r\n ```\r\n\r\n @method capitalize\r\n @param {String} str The string to capitalize.\r\n @return {String} The capitalized string.\r\n */\r\nexport function capitalize(str: string): string {\r\n  return str.charAt(0).toUpperCase() + str.substr(1);\r\n}\r\n","declars":[{"kind":229,"kindString":"function","jsDoc":[{"comment":"Converts a camelized string into all lower case separated by underscores.\r\n\r\n```javascript\r\ndecamelize('innerHTML');         // 'inner_html'\r\ndecamelize('action_name');       // 'action_name'\r\ndecamelize('css-class-name');    // 'css-class-name'\r\ndecamelize('my favorite items'); // 'my favorite items'\r\n```","tags":[{"name":"method","value":"decamelize"},{"name":"param","value":"The string to decamelize."},{"name":"return","value":"the decamelized string."}]}],"isInternal":false,"modifiers":["export"],"name":"decamelize","parameters":["str: string"],"type":"string","signature":"decamelize(str: string): string"},{"kind":229,"kindString":"function","jsDoc":[{"comment":"Replaces underscores, spaces, or camelCase with dashes.\r\n\r\n```javascript\r\ndasherize('innerHTML');         // 'inner-html'\r\ndasherize('action_name');       // 'action-name'\r\ndasherize('css-class-name');    // 'css-class-name'\r\ndasherize('my favorite items'); // 'my-favorite-items'\r\n```","tags":[{"name":"method","value":"dasherize"},{"name":"param","value":"The string to dasherize."},{"name":"return","value":"the dasherized string."}]}],"isInternal":false,"modifiers":["export"],"name":"dasherize","parameters":["str: string"],"type":"string","signature":"dasherize(str: string): string"},{"kind":229,"kindString":"function","jsDoc":[{"comment":"Returns the lowerCamelCase form of a string.\r\n\r\n```javascript\r\ncamelize('innerHTML');          // 'innerHTML'\r\ncamelize('action_name');        // 'actionName'\r\ncamelize('css-class-name');     // 'cssClassName'\r\ncamelize('my favorite items');  // 'myFavoriteItems'\r\ncamelize('My Favorite Items');  // 'myFavoriteItems'\r\n```","tags":[{"name":"method","value":"camelize"},{"name":"param","value":"The string to camelize."},{"name":"return","value":"the camelized string."}]}],"isInternal":false,"modifiers":["export"],"name":"camelize","parameters":["str: string"],"type":"string","signature":"camelize(str: string): string"},{"kind":229,"kindString":"function","jsDoc":[{"comment":"Returns the UpperCamelCase form of a string.\r\n\r\n```javascript\r\n'innerHTML'.classify();          // 'InnerHTML'\r\n'action_name'.classify();        // 'ActionName'\r\n'css-class-name'.classify();     // 'CssClassName'\r\n'my favorite items'.classify();  // 'MyFavoriteItems'\r\n```","tags":[{"name":"method","value":"classify"},{"name":"param","value":"the string to classify"},{"name":"return","value":"the classified string"}]}],"isInternal":false,"modifiers":["export"],"name":"classify","parameters":["str: string"],"type":"string","signature":"classify(str: string): string"},{"kind":229,"kindString":"function","jsDoc":[{"comment":"More general than decamelize. Returns the lower\\_case\\_and\\_underscored\r\nform of a string.\r\n\r\n```javascript\r\n'innerHTML'.underscore();          // 'inner_html'\r\n'action_name'.underscore();        // 'action_name'\r\n'css-class-name'.underscore();     // 'css_class_name'\r\n'my favorite items'.underscore();  // 'my_favorite_items'\r\n```","tags":[{"name":"method","value":"underscore"},{"name":"param","value":"The string to underscore."},{"name":"return","value":"the underscored string."}]}],"isInternal":false,"modifiers":["export"],"name":"underscore","parameters":["str: string"],"type":"string","signature":"underscore(str: string): string"},{"kind":229,"kindString":"function","jsDoc":[{"comment":"Returns the Capitalized form of a string\r\n\r\n```javascript\r\n'innerHTML'.capitalize()         // 'InnerHTML'\r\n'action_name'.capitalize()       // 'Action_name'\r\n'css-class-name'.capitalize()    // 'Css-class-name'\r\n'my favorite items'.capitalize() // 'My favorite items'\r\n```","tags":[{"name":"method","value":"capitalize"},{"name":"param","value":"The string to capitalize."},{"name":"return","value":"The capitalized string."}]}],"isInternal":false,"modifiers":["export"],"name":"capitalize","parameters":["str: string"],"type":"string","signature":"capitalize(str: string): string"}]},{"fileName":"lib/ui-carousel/README.md","type":"md","text":"### Hammerjs\n\nAdd Hammer.JS from proper working.\n","name":"README","content":"### Hammerjs\n\nAdd Hammer.JS from proper working.\n","meta":{}},{"fileName":"lib/ui-date-picker/README.md","type":"md","text":"Date picker component with without 3rd party libs dependency (works with native js Date).\n\nSupports focus-trap in popup and keyboard navigation.\n\n\n### Hammerjs\n\nAdd Hammer.JS from proper working.\n","name":"README","content":"Date picker component with without 3rd party libs dependency (works with native js Date).\n\nSupports focus-trap in popup and keyboard navigation.\n\n\n### Hammerjs\n\nAdd Hammer.JS from proper working.\n","meta":{}},{"fileName":"lib/ui-loading-bar/README.md","type":"md","text":"1. Import generated module into the root:\n\n```typescript\n...\nimports: [\n  ...\n  UiLoadingBarModule.forRoot(),\n],\n```\n\n2. Use `KitLoadingService` api.\n","name":"README","content":"1. Import generated module into the root:\n\n```typescript\n...\nimports: [\n  ...\n  UiLoadingBarModule.forRoot(),\n],\n```\n\n2. Use `KitLoadingService` api.\n","meta":{}},{"fileName":"lib/ui-modal/README.md","type":"md","text":"Modal window with optional header and footer.\n","name":"README","content":"Modal window with optional header and footer.\n","meta":{}},{"fileName":"lib/ui-notification/README.md","type":"md","text":"### Usage\n\n1. Import generated module into root.\n\n```typescript\n...\nimports: [\n  ...\n  UiNotificationModule.forRoot(),\n],\n```\n\n2. Use `UiNotificationService` api to show notifications.\n\n\n### Hammerjs\n\nAdd Hammer.JS from proper working.\n","name":"README","content":"### Usage\n\n1. Import generated module into root.\n\n```typescript\n...\nimports: [\n  ...\n  UiNotificationModule.forRoot(),\n],\n```\n\n2. Use `UiNotificationService` api to show notifications.\n\n\n### Hammerjs\n\nAdd Hammer.JS from proper working.\n","meta":{}},{"fileName":"lib/ui-slider/README.md","type":"md","text":"### Hammerjs\n\nAdd Hammer.JS from proper working.\n","name":"README","content":"### Hammerjs\n\nAdd Hammer.JS from proper working.\n","meta":{}},{"fileName":"README.md","type":"md","text":"---\ntitle: Introduction\napiPriority: 1\n---\n\n# Ngx-kit Collection\n\nSet of Angular components based on ngx-kit and packed into Angular-cli schematics.\n\nAll 3rd-party ui-kits has their own limitations and overheads. But projects has own business and design goals, and often the best way to reach this goals - craft a component from a scratch.\n\nThe best interface for ui-components is a possibility to change the source code.\n\n**@ngx-kit/collection** it is a set of prepared and simplified components. Just generate the code by Angular-cli into your project or kit and modify it if needed.\n\n\n## Usage\n\nRequirements:\n* angular 6+\n* angular-cli 6+\n\nInstall ngx-kit core and collection: \n\n```\nng add @ngx-kit/core\n```\n \nGenerate code:\n\n```\nng g @ngx-kit/collection:ui-button ui-button\n```\n\nImport generated module:\n\n```typescript\n@NgModule({\n  ...\n  imports: [\n    ...\n    UiButtonModule,\n  ],\n})\n```\n\nUse the component:\n\n```html\n<button uiButton>Hello!</button>\n```\n","name":"README","content":"\n# Ngx-kit Collection\n\nSet of Angular components based on ngx-kit and packed into Angular-cli schematics.\n\nAll 3rd-party ui-kits has their own limitations and overheads. But projects has own business and design goals, and often the best way to reach this goals - craft a component from a scratch.\n\nThe best interface for ui-components is a possibility to change the source code.\n\n**@ngx-kit/collection** it is a set of prepared and simplified components. Just generate the code by Angular-cli into your project or kit and modify it if needed.\n\n\n## Usage\n\nRequirements:\n* angular 6+\n* angular-cli 6+\n\nInstall ngx-kit core and collection: \n\n```\nng add @ngx-kit/core\n```\n \nGenerate code:\n\n```\nng g @ngx-kit/collection:ui-button ui-button\n```\n\nImport generated module:\n\n```typescript\n@NgModule({\n  ...\n  imports: [\n    ...\n    UiButtonModule,\n  ],\n})\n```\n\nUse the component:\n\n```html\n<button uiButton>Hello!</button>\n```\n","meta":{"title":"Introduction","apiPriority":1}},{"fileName":"lib/ui-accordion/demo/ui-accordion-demo.component.html","type":"html","text":"<div>\r\n  <h3>Default accordion</h3>\r\n  <ui-accordion>\r\n    <ui-accordion-panel>\r\n      <ui-accordion-title>Panel 1</ui-accordion-title>\r\n      <ui-accordion-content *kitCollapse>\r\n        Panel 1 content\r\n      </ui-accordion-content>\r\n    </ui-accordion-panel>\r\n    <ui-accordion-panel>\r\n      <ui-accordion-title>Panel 2</ui-accordion-title>\r\n      <ui-accordion-content *kitCollapse>\r\n        Panel 2 content\r\n      </ui-accordion-content>\r\n    </ui-accordion-panel>\r\n    <ui-accordion-panel>\r\n      <ui-accordion-title>Panel 3</ui-accordion-title>\r\n      <ui-accordion-content *kitCollapse>\r\n        Panel 3 content\r\n      </ui-accordion-content>\r\n    </ui-accordion-panel>\r\n  </ui-accordion>\r\n</div>\r\n\r\n<div>\r\n  <h3>Multiple accordion</h3>\r\n  <ui-accordion [multiple]=\"true\">\r\n    <ui-accordion-panel>\r\n      <ui-accordion-title>Panel 1</ui-accordion-title>\r\n      <ui-accordion-content *kitCollapse>\r\n        Panel 1 content\r\n      </ui-accordion-content>\r\n    </ui-accordion-panel>\r\n    <ui-accordion-panel>\r\n      <ui-accordion-title>Panel 2</ui-accordion-title>\r\n      <ui-accordion-content *kitCollapse>\r\n        Panel 2 content\r\n      </ui-accordion-content>\r\n    </ui-accordion-panel>\r\n    <ui-accordion-panel>\r\n      <ui-accordion-title>Panel 3</ui-accordion-title>\r\n      <ui-accordion-content *kitCollapse>\r\n        Panel 3 content\r\n      </ui-accordion-content>\r\n    </ui-accordion-panel>\r\n  </ui-accordion>\r\n</div>\r\n\r\n<div>\r\n  <h3>Activate first</h3>\r\n  <ui-accordion [activateFirst]=\"true\">\r\n    <ui-accordion-panel>\r\n      <ui-accordion-title>Panel 1</ui-accordion-title>\r\n      <ui-accordion-content *kitCollapse>\r\n        Panel 1 content\r\n      </ui-accordion-content>\r\n    </ui-accordion-panel>\r\n    <ui-accordion-panel>\r\n      <ui-accordion-title>Panel 2</ui-accordion-title>\r\n      <ui-accordion-content *kitCollapse>\r\n        Panel 2 content\r\n      </ui-accordion-content>\r\n    </ui-accordion-panel>\r\n    <ui-accordion-panel>\r\n      <ui-accordion-title>Panel 3</ui-accordion-title>\r\n      <ui-accordion-content *kitCollapse>\r\n        Panel 3 content\r\n      </ui-accordion-content>\r\n    </ui-accordion-panel>\r\n  </ui-accordion>\r\n</div>\r\n\r\n<div>\r\n  <h3>Generated from data</h3>\r\n  <ui-accordion>\r\n    <ui-accordion-panel *ngFor=\"let panel of panels\">\r\n      <ui-accordion-title>{{ panel.title }}</ui-accordion-title>\r\n      <ui-accordion-content *kitCollapse>\r\n        {{ panel.content }}\r\n      </ui-accordion-content>\r\n    </ui-accordion-panel>\r\n  </ui-accordion>\r\n</div>\r\n"},{"fileName":"lib/ui-accordion/ui-accordion-content/ui-accordion-content.component.scss","type":"scss","text":":host {\r\n  display: block;\r\n  overflow: hidden;\r\n}\r\n\r\n.content {\r\n  padding: 8px 16px;\r\n}\r\n"},{"fileName":"lib/ui-accordion/ui-accordion-panel/ui-accordion-panel.component.scss","type":"scss","text":":host {\r\n  display: block;\r\n}\r\n"},{"fileName":"lib/ui-accordion/ui-accordion-title/ui-accordion-title.component.scss","type":"scss","text":":host {\r\n  background: #eeeeee;\r\n  cursor: pointer;\r\n  display: block;\r\n  padding: 8px 16px;\r\n  transition-duration: .25s;\r\n  transition-property: background;\r\n  user-select: none;\r\n}\r\n"},{"fileName":"lib/ui-accordion/ui-accordion/ui-accordion.component.scss","type":"scss","text":":host {\r\n  display: block;\r\n}\r\n"},{"fileName":"lib/ui-alert/demo/ui-alert-demo.component.html","type":"html","text":"<div>\r\n  <h3>Default alert</h3>\r\n  <ui-alert>Message text</ui-alert>\r\n</div>\r\n\r\n<div>\r\n  <h3>Color</h3>\r\n  <ui-alert color=\"default\">Default message text</ui-alert>\r\n  <ui-alert color=\"primary\">Primary message text</ui-alert>\r\n</div>\r\n\r\n<div>\r\n  <h3>Title</h3>\r\n  <ui-alert>\r\n    <ui-alert-title>Message title</ui-alert-title>\r\n    Message description\r\n  </ui-alert>\r\n</div>\r\n\r\n<div>\r\n  <h3>Closable</h3>\r\n  <ui-alert [closable]=\"true\" [(isOpen)]=\"isOpen\">Closable message text</ui-alert>\r\n  <button *ngIf=\"!isOpen\" (click)=\"isOpen = true\">Reopen</button>\r\n</div>\r\n"},{"fileName":"lib/ui-alert/ui-alert/ui-alert.component.html","type":"html","text":"<div *ngIf=\"isOpen\"\r\n     class=\"alert\"\r\n     [kitClass]=\"{color: color}\"\r\n     [@fadeOut]>\r\n  <button *ngIf=\"closable\" (click)=\"closeAlert()\" class=\"close\">x</button>\r\n  <div *ngIf=\"title\" class=\"title\">\r\n    <ng-container *ngTemplateOutlet=\"title.contentRef\"></ng-container>\r\n  </div>\r\n  <ng-content></ng-content>\r\n</div>\r\n"},{"fileName":"lib/ui-alert/ui-alert/ui-alert.component.scss","type":"scss","text":":host {\r\n  display: block;\r\n}\r\n\r\n.alert {\r\n  border-radius: 3px;\r\n  display: block;\r\n  margin: 8px 0;\r\n  padding: 8px 16px;\r\n  &.color-default {\r\n    background: #eeeeee;\r\n    border: 1px solid #dddddd;\r\n  }\r\n  &.color-primary {\r\n    background: #86cce9;\r\n    border: #00bbfa;\r\n  }\r\n}\r\n\r\n.title {\r\n  display: block;\r\n  font-size: 1.2rem;\r\n  margin: 4px 0 8px;\r\n}\r\n\r\n.close {\r\n  background: transparent;\r\n  border: 0;\r\n  cursor: pointer;\r\n  float: right;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n"},{"fileName":"lib/ui-autocomplete/demo/ui-autocomplete-demo.component.html","type":"html","text":"<div>\r\n  <h3>Default autocomplete</h3>\r\n  <div>\r\n    Value: {{ value1 | json }}\r\n  </div>\r\n  <input uiAutocomplete\r\n         [options]=\"options\"\r\n         (search)=\"searchOptions($event)\"\r\n         [(ngModel)]=\"value1\"\r\n         placeholder=\"Start typing name of month…\">\r\n</div>\r\n\r\n<div>\r\n  <h3>Select mode</h3>\r\n  <p>`ngModel` will be updated only after option submit.</p>\r\n  <div>\r\n    Value: {{ value2 | json }}\r\n  </div>\r\n  <input uiAutocomplete\r\n         [options]=\"options\"\r\n         [selectMode]=\"true\"\r\n         (search)=\"searchOptions($event)\"\r\n         [(ngModel)]=\"value2\"\r\n         placeholder=\"Start typing name of month…\">\r\n</div>\r\n\r\n<div>\r\n  <h3>Custom option object</h3>\r\n  <p>Using `value: any, label: string` for options allows to use different `ngModel` and input value.</p>\r\n  <p>Also you could any other data to the options and use it in a custom template.</p>\r\n  <div>\r\n    Value: {{ value3 | json }}\r\n  </div>\r\n  <input uiAutocomplete\r\n         [options]=\"objOptions\"\r\n         [selectMode]=\"true\"\r\n         (search)=\"searchObjOptions($event)\"\r\n         [(ngModel)]=\"value3\"\r\n         placeholder=\"Start typing name of month…\">\r\n</div>\r\n\r\n<div>\r\n  <h3>Show options on focus</h3>\r\n  <p>Display options on input focus.</p>\r\n  <div>\r\n    Value: {{ value4 | json }}\r\n  </div>\r\n  <input uiAutocomplete\r\n         [options]=\"options\"\r\n         [emitSearchOnFocus]=\"true\"\r\n         [selectMode]=\"true\"\r\n         (search)=\"searchFocusOptions($event)\"\r\n         [(ngModel)]=\"value4\"\r\n         placeholder=\"Start typing name of month…\">\r\n</div>\r\n\r\n<div>\r\n  <h3>Search emit debounce</h3>\r\n  <p>Handle `(search)` output Observable with debounce and cancelling previous request.</p>\r\n  <div>\r\n    Value: {{ value5 | json }}\r\n  </div>\r\n  <input uiAutocomplete\r\n         [options]=\"options\"\r\n         [debounce]=\"750\"\r\n         (search)=\"searchOptions($event)\"\r\n         [(ngModel)]=\"value5\"\r\n         placeholder=\"Start typing name of month…\">\r\n</div>\r\n\r\n<div>\r\n  <h3>Custom option template</h3>\r\n  <div>\r\n    Value: {{ value6 | json }}\r\n  </div>\r\n  <input uiAutocomplete\r\n         [options]=\"options\"\r\n         [optionTemplate]=\"optionTemplate\"\r\n         (search)=\"searchOptions($event)\"\r\n         [(ngModel)]=\"value6\"\r\n         placeholder=\"Start typing name of month…\">\r\n  <ng-template #optionTemplate let-option let-index=\"index\">\r\n    {{ index + 1 }}. <strong>{{ option }}</strong>\r\n  </ng-template>\r\n</div>\r\n"},{"fileName":"lib/ui-autocomplete/ui-autocomplete-options/ui-autocomplete-options.component.html","type":"html","text":"<div *ngIf=\"anchor\"\r\n     kitPinPosition\r\n     position=\"bottom\"\r\n     [anchor]=\"anchor\">\r\n  <div class=\"options\"\r\n       [@fade]=\"true\">\r\n    <button *ngFor=\"let option of options; let index = index\"\r\n            (click)=\"select.emit(index)\"\r\n            [class.-selected]=\"index === selected\">\r\n      <ng-container *ngIf=\"!optionTemplate\">{{ optionsLabels[index] }}</ng-container>\r\n      <ng-container *ngIf=\"optionTemplate\">\r\n        <ng-container *ngTemplateOutlet=\"optionTemplate; context: {$implicit: option, index: index}\"></ng-container>\r\n      </ng-container>\r\n    </button>\r\n  </div>\r\n</div>\r\n"},{"fileName":"lib/ui-autocomplete/ui-autocomplete-options/ui-autocomplete-options.component.scss","type":"scss","text":".options {\r\n  background: #ffffff;\r\n  border-radius: 3px;\r\n  box-shadow: 0 0 25px 5px rgba(0, 0, 0, .1);\r\n  box-sizing: border-box;\r\n  margin-top: 4px;\r\n  max-height: 90%;\r\n  overflow-y: auto;\r\n  transform-origin: top;\r\n  width: 100%;\r\n}\r\n\r\nbutton {\r\n  background: transparent;\r\n  border: 0;\r\n  cursor: pointer;\r\n  display: block;\r\n  padding: 8px;\r\n  text-align: left;\r\n  width: 100%;\r\n  &:hover {\r\n    background: #eeeeee;\r\n  }\r\n  &.-selected {\r\n    background: #2399e5;\r\n    color: #ffffff;\r\n  }\r\n}\r\n"},{"fileName":"lib/ui-badge/demo/ui-badge-demo.component.html","type":"html","text":"<div>\r\n  <h3>Default badge</h3>\r\n  <ui-badge [count]=\"150\"></ui-badge>\r\n</div>\r\n\r\n<div>\r\n  <h3>Color</h3>\r\n  <ui-badge [count]=\"1\" color=\"default\"></ui-badge>\r\n  <ui-badge [count]=\"2\" color=\"primary\"></ui-badge>\r\n</div>\r\n\r\n<div>\r\n  <h3>Size</h3>\r\n  <ui-badge [count]=\"66\" size=\"s\"></ui-badge>\r\n  <ui-badge [count]=\"66\" size=\"m\"></ui-badge>\r\n  <ui-badge [count]=\"66\" size=\"l\"></ui-badge>\r\n</div>\r\n\r\n<div>\r\n  <h3>Position</h3>\r\n  <ui-badge [count]=\"54\" position=\"inline\"></ui-badge>\r\n  <div [ngStyle]=\"{width: '50px', height: '50px', background: '#eee', margin: '16px', position: 'relative'}\">\r\n    <ui-badge [count]=\"55\" position=\"top-right\"></ui-badge>\r\n    <ui-badge [count]=\"56\" position=\"bottom-right\"></ui-badge>\r\n    <ui-badge [count]=\"57\" position=\"bottom-left\"></ui-badge>\r\n    <ui-badge [count]=\"58\" position=\"top-left\"></ui-badge>\r\n  </div>\r\n</div>\r\n"},{"fileName":"lib/ui-badge/ui-badge/ui-badge.component.scss","type":"scss","text":":host {\r\n  border-radius: 1rem;\r\n  line-height: 1;\r\n  min-width: 1px;\r\n  text-align: center;\r\n  &.color {\r\n    &-default {\r\n      background: #cccccc;\r\n      color: #404040;\r\n    }\r\n    &-primary {\r\n      background: #2399e5;\r\n      color: #ffffff;\r\n    }\r\n  }\r\n  &.size {\r\n    &-s {\r\n      font-size: .8rem;\r\n      padding: 2px 4px;\r\n    }\r\n    &-m {\r\n      font-size: .9rem;\r\n      padding: 2px 8px;\r\n    }\r\n    &-l {\r\n      font-size: 1.1rem;\r\n      padding: 4px 8px;\r\n    }\r\n  }\r\n  &.position {\r\n    @mixin corner {\r\n      display: block;\r\n      position: absolute;\r\n    }\r\n    &-inline {\r\n      display: inline-block;\r\n    }\r\n    &-top-right {\r\n      @include corner;\r\n      right: 0;\r\n      top: 0;\r\n      transform: translate(50%, -50%);\r\n    }\r\n    &-bottom-right {\r\n      @include corner;\r\n      bottom: 0;\r\n      right: 0;\r\n      transform: translate(50%, 50%);\r\n    }\r\n    &-bottom-left {\r\n      @include corner;\r\n      bottom: 0;\r\n      left: 0;\r\n      transform: translate(-50%, 50%);\r\n    }\r\n    &-top-left {\r\n      @include corner;\r\n      left: 0;\r\n      top: 0;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  }\r\n}\r\n"},{"fileName":"lib/ui-breadcrumbs/demo/ui-breadcrumbs-demo.component.html","type":"html","text":"<div>\r\n  <ui-breadcrumbs>\r\n    <a *kitRef uiBreadcrumbsItem href=\"javascript:void(0)\">Item 1</a>\r\n    <button *kitRef uiBreadcrumbsItem>Item 2</button>\r\n    <span *kitRef uiBreadcrumbsItem>Item 3</span>\r\n    <ui-breadcrumbs-item *kitRef>Item 4</ui-breadcrumbs-item>\r\n  </ui-breadcrumbs>\r\n</div>\r\n\r\n<div>\r\n  <h3>Icon</h3>\r\n  <ui-breadcrumbs>\r\n    <a *kitRef uiBreadcrumbsItem href=\"javascript:void(0)\">Item 1</a>\r\n    <a *kitRef uiBreadcrumbsItem href=\"javascript:void(0)\">Item 1</a>\r\n    <a *kitRef uiBreadcrumbsItem icon=\"star\" href=\"javascript:void(0)\">Item 1</a>\r\n  </ui-breadcrumbs>\r\n</div>\r\n"},{"fileName":"lib/ui-breadcrumbs/ui-breadcrumbs-item/ui-breadcrumbs-item.component.html","type":"html","text":"<kit-icon *ngIf=\"icon\"\r\n          [name]=\"icon\"\r\n          class=\"icon\">\r\n</kit-icon>\r\n<span class=\"content\">\r\n  <ng-content></ng-content>\r\n</span>\r\n"},{"fileName":"lib/ui-breadcrumbs/ui-breadcrumbs-item/ui-breadcrumbs-item.component.scss","type":"scss","text":":host {\r\n  background: transparent;\r\n  border: 0;\r\n  color: #2399e5;\r\n  font-size: 1rem;\r\n  padding: 0;\r\n  text-decoration: none;\r\n}\r\n\r\n.icon {\r\n  margin-right: 4px;\r\n}\r\n"},{"fileName":"lib/ui-breadcrumbs/ui-breadcrumbs/ui-breadcrumbs.component.html","type":"html","text":"<ng-container *ngFor=\"let item of items; let last = last\">\r\n  <ng-container *ngTemplateOutlet=\"item.template\"></ng-container>\r\n  <span *ngIf=\"!last\" class=\"separator\">\r\n    /\r\n  </span>\r\n</ng-container>\r\n"},{"fileName":"lib/ui-breadcrumbs/ui-breadcrumbs/ui-breadcrumbs.component.scss","type":"scss","text":".separator {\r\n  padding: 0 8px;\r\n}\r\n"},{"fileName":"lib/ui-button/demo/ui-button-demo.component.html","type":"html","text":"<div>\r\n  <h3>Default button</h3>\r\n  <button uiButton>Click!</button>\r\n</div>\r\n\r\n<div>\r\n  <h3>Color</h3>\r\n  <button uiButton color=\"default\">Default color</button>\r\n  <button uiButton color=\"primary\">Primary color</button>\r\n</div>\r\n\r\n<div>\r\n  <h3>Size</h3>\r\n  <button uiButton size=\"s\">Size=s</button>\r\n  <button uiButton size=\"m\">Size=m</button>\r\n  <button uiButton size=\"l\">Size=l</button>\r\n</div>\r\n\r\n<div>\r\n  <h3>Icon</h3>\r\n  <button uiButton icon=\"star\"></button>\r\n  <button uiButton icon=\"star\">Labeled</button>\r\n</div>\r\n\r\n<h2>Buttons group</h2>\r\n\r\n<div>\r\n  <ui-button-group>\r\n    <button uiButton>Grouped 1</button>\r\n    <button uiButton>Grouped 2</button>\r\n    <button uiButton>Grouped 3</button>\r\n  </ui-button-group>\r\n</div>\r\n\r\n<div>\r\n  <h3>Vertical</h3>\r\n  <ui-button-group direction=\"column\">\r\n    <button uiButton>Vert Grouped 1</button>\r\n    <button uiButton>Vert Grouped 2</button>\r\n    <button uiButton>Vert Grouped 3</button>\r\n  </ui-button-group>\r\n</div>\r\n\r\n<div>\r\n  <h3>Selectable</h3>\r\n  <ui-button-group>\r\n    <button uiButton kitCheck [(ngModel)]=\"radioModel\" [value]=\"1\">Radio button 1</button>\r\n    <button uiButton kitCheck [(ngModel)]=\"radioModel\" [value]=\"2\">Radio button 2</button>\r\n    <button uiButton kitCheck [(ngModel)]=\"radioModel\" [value]=\"3\">Radio button 3</button>\r\n  </ui-button-group>\r\n</div>\r\n\r\n<div>\r\n  <h3>Multiple</h3>\r\n  <ui-button-group>\r\n    <button uiButton kitCheck [(ngModel)]=\"checkboxModel1\">Checkbox button 1</button>\r\n    <button uiButton kitCheck [(ngModel)]=\"checkboxModel2\">Checkbox button 2</button>\r\n    <button uiButton kitCheck [(ngModel)]=\"checkboxModel3\">Checkbox button 3</button>\r\n  </ui-button-group>\r\n</div>\r\n"},{"fileName":"lib/ui-button/demo/ui-button-demo.component.scss","type":"scss","text":"div > button {\r\n  margin: 0 8px 8px 0;\r\n}\r\n"},{"fileName":"lib/ui-button/ui-button-group/ui-button-group.component.scss","type":"scss","text":":host {\r\n  display: flex;\r\n  &.direction {\r\n    &-row {\r\n      flex-direction: row;\r\n    }\r\n    &-column {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n}\r\n"},{"fileName":"lib/ui-button/ui-button/ui-button.component.html","type":"html","text":"<kit-icon *ngIf=\"icon\"\r\n          [name]=\"icon\"\r\n          class=\"icon\">\r\n</kit-icon>\r\n<span class=\"content\">\r\n  <ng-content></ng-content>\r\n</span>\r\n"},{"fileName":"lib/ui-button/ui-button/ui-button.component.scss","type":"scss","text":"$borderRadius: 3px;\r\n\r\n:host {\r\n  background-image: none;\r\n  border: 0;\r\n  border-radius: $borderRadius;\r\n  box-sizing: border-box;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  font-weight: 400;\r\n  line-height: 1.42857;\r\n  margin-bottom: 0;\r\n  position: relative;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  transition-duration: .3s;\r\n  transition-property: background;\r\n  user-select: none;\r\n  vertical-align: middle;\r\n  white-space: nowrap;\r\n  &.color {\r\n    &-default {\r\n      background: #cccccc;\r\n      color: #333333;\r\n      &:hover {\r\n        background: #bbbbbb;\r\n      }\r\n      &.checked {\r\n        background: #aaaaaa;\r\n      }\r\n    }\r\n    &-primary {\r\n      background: #2399e5;\r\n      color: #ffffff;\r\n      &:hover {\r\n        background: #248acd;\r\n      }\r\n      &.checked {\r\n        background: #1e80cd;\r\n      }\r\n    }\r\n  }\r\n  &.size {\r\n    &-s {\r\n      font-size: .85rem;\r\n      padding: 2px 6px;\r\n    }\r\n    &-m {\r\n      font-size: 1rem;\r\n      padding: 4px 12px;\r\n    }\r\n    &-l {\r\n      font-size: 1.15rem;\r\n      padding: 8px 20px;\r\n    }\r\n  }\r\n  &.groupDirection {\r\n    &-row {\r\n      border-radius: 0;\r\n      &:first-child {\r\n        border-bottom-left-radius: $borderRadius;\r\n        border-top-left-radius: $borderRadius;\r\n      }\r\n      &:last-child {\r\n        border-bottom-right-radius: $borderRadius;\r\n        border-top-right-radius: $borderRadius;\r\n      }\r\n    }\r\n    &-column {\r\n      border-radius: 0;\r\n      &:first-child {\r\n        border-top-left-radius: $borderRadius;\r\n        border-top-right-radius: $borderRadius;\r\n      }\r\n      &:last-child {\r\n        border-bottom-left-radius: $borderRadius;\r\n        border-bottom-right-radius: $borderRadius;\r\n      }\r\n    }\r\n  }\r\n  .icon + .content:not(:empty) {\r\n    padding-left: 8px;\r\n  }\r\n}\r\n"},{"fileName":"lib/ui-carousel/demo/ui-carousel-demo.component.html","type":"html","text":"<div>\r\n  <ui-carousel>\r\n    <ui-carousel-slide *kitSlide [style.background]=\"'#F7A1A1'\">Slide 1 Content</ui-carousel-slide>\r\n    <ui-carousel-slide *kitSlide [style.background]=\"'#00D791'\">Slide 2 Content</ui-carousel-slide>\r\n    <ui-carousel-slide *kitSlide [style.background]=\"'#24B7EC'\">Slide 3 Content</ui-carousel-slide>\r\n  </ui-carousel>\r\n</div>\r\n\r\n<div>\r\n  <h3>Generated</h3>\r\n  <ui-carousel>\r\n    <ng-container *ngFor=\"let slide of slides\">\r\n      <ui-carousel-slide *kitSlide [style.background]=\"slide.color\">{{ slide.content }}</ui-carousel-slide>\r\n    </ng-container>\r\n  </ui-carousel>\r\n</div>\r\n"},{"fileName":"lib/ui-carousel/ui-carousel-slide/ui-carousel-slide.component.scss","type":"scss","text":":host {\r\n  display: block;\r\n  padding: 16px;\r\n}\r\n"},{"fileName":"lib/ui-carousel/ui-carousel/ui-carousel.component.scss","type":"scss","text":".wrapper {\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n"},{"fileName":"lib/ui-checkbox/demo/ui-checkbox-demo.component.html","type":"html","text":"<div>\r\n  <label>\r\n    <input type=\"checkbox\"\r\n           uiCheckbox\r\n           [(ngModel)]=\"checkboxModel\">\r\n    Checkbox label\r\n  </label>\r\n\r\n  <div>\r\n    Model: {{ checkboxModel | json }}\r\n  </div>\r\n</div>\r\n"},{"fileName":"lib/ui-checkbox/ui-checkbox/ui-checkbox.component.html","type":"html","text":"<ng-template #checkTemplate>\r\n  <label [attr.for]=\"idBinding\"\r\n         class=\"check\"\r\n         [class.-checked]=\"isChecked()\"\r\n         [class.-focused]=\"focused\"\r\n         [class.-has-errors]=\"hasErrors\"\r\n         [class.-disabled]=\"disabled\">\r\n  </label>\r\n</ng-template>\r\n"},{"fileName":"lib/ui-checkbox/ui-checkbox/ui-checkbox.component.scss","type":"scss","text":"$boxSize: 16px;\r\n$borderWidth: 1px;\r\n\r\n:host {\r\n  clip: rect(0 0 0 0);\r\n  clip-path: inset(100%);\r\n  height: 1px;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  width: 1px;\r\n}\r\n\r\n.check {\r\n  cursor: pointer;\r\n  margin-left: $boxSize + 8px;\r\n  position: relative;\r\n  &.-checked {\r\n    &::before {\r\n      background: #2399e5;\r\n      border-color: #2399e5;\r\n    }\r\n    &::after {\r\n      border-bottom: 2px solid #ffffff;\r\n      border-right: 2px solid #ffffff;\r\n      content: \"\";\r\n      height: $boxSize / 2;\r\n      left: $boxSize / 3 + $borderWidth;\r\n      margin-left: - $boxSize - 8px;\r\n      position: absolute;\r\n      top: 50%;\r\n      transform: translateY(-50%) rotate(45deg) scale(1);\r\n      width: $boxSize / 4;\r\n    }\r\n  }\r\n  &.-focused {\r\n    &::before {\r\n      border-color: #2399e5;\r\n      box-shadow: 0 1px 5px rgba(0, 0, 0, .1);\r\n    }\r\n  }\r\n  &.-has-errors {\r\n    &::before {\r\n      border-color: #ff0c09;\r\n    }\r\n    &.-checked::before {\r\n      background: #ff0c09;\r\n    }\r\n  }\r\n  &.-disabled {\r\n    cursor: default;\r\n    &.-checked {\r\n      &::before {\r\n        background: #9da8b4;\r\n        border-color: #9da8b4;\r\n      }\r\n      &::after {\r\n        border-bottom: 2px solid #ffffff;\r\n        border-right: 2px solid #ffffff;\r\n      }\r\n    }\r\n    &::before {\r\n      background: #f6f6f6;\r\n      border-color: #becad6;\r\n    }\r\n  }\r\n  &::before {\r\n    background-color: #ffffff;\r\n    border: $borderWidth solid #becad6;\r\n    border-radius: 2px;\r\n    box-shadow: none;\r\n    content: \"\";\r\n    display: inline-block;\r\n    height: $boxSize;\r\n    left: 0;\r\n    margin-left: - $boxSize - 8px;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    transition: all 250ms cubic-bezier(.27, .01, .38, 1.06);\r\n    width: $boxSize;\r\n  }\r\n}\r\n\r\n"},{"fileName":"lib/ui-custom-select/demo/ui-custom-select-demo.component.html","type":"html","text":"<div>\r\n  <ui-custom-select [(ngModel)]=\"model\" [options]=\"options\"></ui-custom-select>\r\n</div>\r\n"},{"fileName":"lib/ui-custom-select/ui-custom-select/ui-custom-select.component.html","type":"html","text":"<span class=\"current\"\n      kitOverlayToggle\n      #toggle=\"toggle\">\n  {{ viewState?.label }}\n</span>\n<span class=\"pointer\">&#9661;</span>\n\n<div *kitOverlay=\"toggle.state\"\n     kitPinPosition\n     position=\"bottom\"\n     [anchor]=\"nativeEl\"\n     [@popupHost]=\"true\">\n  <div class=\"popup\"\n       [@popup]=\"true\"\n       (kitOutsideClick)=\"toggle.close()\"\n       [skip]=\"[nativeEl]\">\n    <div *ngFor=\"let option of options\"\n         class=\"option\"\n         (click)=\"select(option.value)\">\n      {{ option.label }}\n    </div>\n  </div>\n</div>\n"},{"fileName":"lib/ui-custom-select/ui-custom-select/ui-custom-select.component.scss","type":"scss","text":":host {\r\n  border: 2px solid #d6d6d6;\r\n  border-radius: 2px;\r\n  box-shadow: 0 0 6px 1px rgba(50, 50, 50, .1);\r\n  box-sizing: border-box;\r\n  color: #4a505a;\r\n  display: inline-flex;\r\n  padding: 4px 8px;\r\n  transition: all .3s;\r\n  width: 100%;\r\n  &:hover {\r\n    border-color: #acadb0;\r\n    outline: none;\r\n  }\r\n  &:focus {\r\n    border-color: #2399e5;\r\n    outline: none;\r\n  }\r\n}\r\n\r\n.current {\r\n  flex-grow: 1;\r\n}\r\n\r\n.pointer {\r\n  color: #aaaaaa;\r\n  cursor: default;\r\n}\r\n\r\n.popup {\r\n  background: #ffffff;\r\n  border-radius: 3px;\r\n  box-shadow: 0 0 25px 5px rgba(0, 0, 0, .1);\r\n  box-sizing: border-box;\r\n  margin: 4px 0;\r\n  width: 100%;\r\n}\r\n\r\n.option {\r\n  cursor: default;\r\n  display: block;\r\n  padding: 4px 8px;\r\n  &:hover {\r\n    background: #2399e5;\r\n    color: #ffffff;\r\n  }\r\n}\r\n"},{"fileName":"lib/ui-date-picker/demo/ui-date-picker-demo.component.html","type":"html","text":"<div>\r\n  <h3>Default</h3>\r\n  <ui-date-picker [(ngModel)]=\"model\" [style.width.px]=\"300\"></ui-date-picker>\r\n  {{ model | date }}\r\n</div>\r\n\r\n<div>\r\n  <h3>Date-picker in popup</h3>\r\n  <input [(ngModel)]=\"model\"\r\n         kitOverlayToggle\r\n         kitInputDate\r\n         format=\"MMMM DD YYYY\"\r\n         #toggle1=\"toggle\"\r\n         aria-haspopup=\"true\">\r\n  {{ toggle1.state | json }}\r\n  <ui-date-picker-popup *kitOverlay=\"toggle1.state\"\r\n                        [toggle]=\"toggle1\">\r\n    <ui-date-picker [(ngModel)]=\"model\"\r\n                    (ngModelChange)=\"toggle1.close()\"\r\n                    [style.width.px]=\"300\">\r\n    </ui-date-picker>\r\n  </ui-date-picker-popup>\r\n</div>\r\n\r\n<div>\r\n  <h3>Date-picker in popup (separated toggle)</h3>\r\n  <input [(ngModel)]=\"model\"\r\n         kitAnchor\r\n         kitInputDate\r\n         format=\"MMMM DD YYYY\"\r\n         #anchor2=\"anchor\"\r\n         aria-haspopup=\"true\">\r\n  <button kitOverlayToggle #toggle2=\"toggle\">Calendar</button>\r\n  <ui-date-picker-popup *kitOverlay=\"toggle2.state\"\r\n                        [anchor]=\"anchor2\"\r\n                        [toggle]=\"toggle2\">\r\n    <ui-date-picker [(ngModel)]=\"model\"\r\n                    (ngModelChange)=\"toggle2.close()\"\r\n                    [style.width.px]=\"300\">\r\n    </ui-date-picker>\r\n  </ui-date-picker-popup>\r\n</div>\r\n"},{"fileName":"lib/ui-date-picker/ui-date-picker-popup/ui-date-picker-popup.component.html","type":"html","text":"<div kitPinPosition\r\n     position=\"bottom-left\"\r\n     [anchor]=\"anchor || toggle\">\r\n  <div class=\"popup\"\r\n       [@fade]=\"true\"\r\n       (kitOutsideClick)=\"toggle.close()\"\r\n       [skip]=\"[toggle]\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n"},{"fileName":"lib/ui-date-picker/ui-date-picker-popup/ui-date-picker-popup.component.scss","type":"scss","text":".popup {\r\n  background: #ffffff;\r\n  border: 1px solid #eeeeee;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, .2);\r\n  padding: 12px;\r\n  transform-origin: top left;\r\n}\r\n"},{"fileName":"lib/ui-date-picker/ui-date-picker/ui-date-picker.component.html","type":"html","text":"<div class=\"head\">\r\n  <button (click)=\"modYear(-1)\">&lArr;</button>\r\n  <button (click)=\"modMonth(-1)\">&larr;</button>\r\n  <div class=\"title\">{{ monthCursor | async | date:'MMMM, y' }}</div>\r\n  <button (click)=\"modMonth(1)\">&rarr;</button>\r\n  <button (click)=\"modYear(1)\">&rArr;</button>\r\n</div>\r\n<table class=\"grid\" kitFocus=\"grid\" #grid tabindex=\"0\">\r\n  <thead>\r\n  <tr>\r\n    <th class=\"weekday\" *ngFor=\"let weekday of weekdays\">{{ weekday | date:'EEE' }}</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr *ngFor=\"let line of datesGrid | async\">\r\n    <td *ngFor=\"let item of line\">\r\n      <div class=\"date\"\r\n            [kitClass]=\"{active: item.active, focus: item.focus, outside: item.outside}\"\r\n            [attr.aria-label]=\"item.date | date:'MMMM d, y'\"\r\n            [attr.aria-selected]=\"item.selected\"\r\n            role=\"gridcell\"\r\n            (click)=\"setDate(item.date)\">\r\n        {{ item.date | date:'d' }}\r\n      </div>\r\n    </td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n"},{"fileName":"lib/ui-date-picker/ui-date-picker/ui-date-picker.component.scss","type":"scss","text":".focus {\r\n  border-radius: 2px;\r\n  box-shadow: #2399e5 0 0 0 1px inset;\r\n  outline: none;\r\n}\r\n\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.head {\r\n  display: flex;\r\n  flex-direction: row;\r\n  .title {\r\n    flex-grow: 1;\r\n    text-align: center;\r\n  }\r\n  button {\r\n    background: transparent;\r\n    border: 0;\r\n    &:focus {\r\n      @extend .focus;\r\n    }\r\n  }\r\n}\r\n\r\n.grid {\r\n  border: 0;\r\n  padding: 4px;\r\n  width: 100%;\r\n  button {\r\n    width: 100%;\r\n  }\r\n  tr {\r\n    border: 0;\r\n  }\r\n  td, th {\r\n    background: transparent;\r\n    border: 0;\r\n    margin: 0;\r\n    padding: 4px;\r\n    width: 14.29%;\r\n  }\r\n  &:focus {\r\n    @extend .focus;\r\n  }\r\n}\r\n\r\n.date {\r\n  border-radius: 2px;\r\n  box-sizing: border-box;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  padding: 2px;\r\n  text-align: center;\r\n  width: 100%;\r\n  &.outside {\r\n    color: #b5b5b5;\r\n  }\r\n  &.focus {\r\n    @extend .focus;\r\n  }\r\n  &.active {\r\n    background: #2399e5;\r\n    box-shadow: 0 0 6px rgba(0, 0, 0, .3);\r\n    color: #ffffff;\r\n  }\r\n  &:focus {\r\n    @extend .focus;\r\n  }\r\n}\r\n"},{"fileName":"lib/ui-dialog/demo/ui-dialog-demo.component.html","type":"html","text":"<div>\r\n  <h3>Alert dialog</h3>\r\n  <button (click)=\"alert()\">Alert</button>\r\n\r\n  <h4>Custom template</h4>\r\n  <button (click)=\"alertWithTemplate(alertTemplate)\">Alert</button>\r\n  <ng-template #alertTemplate>\r\n    <strong>Custom alert body template.</strong>\r\n  </ng-template>\r\n\r\n  <h4>Handle submit</h4>\r\n  <button (click)=\"alertWithHandler()\">Alert</button>\r\n</div>\r\n\r\n<div>\r\n  <h3>Confirm dialog</h3>\r\n  <button (click)=\"confirm()\">Confirm</button>\r\n</div>\r\n\r\n<div>\r\n  <h3>Prompt dialog</h3>\r\n  <button (click)=\"prompt(promptTemplate)\">Prompt</button>\r\n  <ng-template #promptTemplate let-form>\r\n    <label>\r\n      Model:\r\n      <input [(ngModel)]=\"form.model\" name=\"model\">\r\n    </label>\r\n  </ng-template>\r\n</div>\r\n\r\n<div>\r\n  <h3>Color</h3>\r\n  <button (click)=\"alertWithColor('default')\">Default alert</button>\r\n  <button (click)=\"alertWithColor('primary')\">Primary alert</button>\r\n</div>\r\n"},{"fileName":"lib/ui-dialog/ui-dialog/ui-dialog.component.html","type":"html","text":"<div class=\"dialog\"\n     [kitClass]=\"{color: options?.color}\"\n     [@fade]>\n  <div class=\"header\">\n    {{ options?.header }}\n  </div>\n  <div class=\"body\">\n    <ng-container *ngIf=\"options?.message\">\n      {{ options?.message }}\n    </ng-container>\n    <ng-container *ngIf=\"options?.template\">\n      <ng-container *ngTemplateOutlet=\"options?.template; context: {$implicit: result}\"></ng-container>\n    </ng-container>\n  </div>\n  <div class=\"footer\">\n    <button *ngIf=\"options?.type === 'confirm' || options?.type === 'prompt'\"\n            (click)=\"cancelHandler()\">\n      Cancel\n    </button>\n    <button (click)=\"submitHandler()\">Okay</button>\n  </div>\n</div>\n"},{"fileName":"lib/ui-dialog/ui-dialog/ui-dialog.component.scss","type":"scss","text":":host {\r\n  align-items: center;\r\n  bottom: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  left: 0;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n}\r\n\r\n.dialog {\r\n  background: #ffffff;\r\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, .25);\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-height: 90%;\r\n  max-width: 90%;\r\n  min-width: 400px;\r\n  &.color {\r\n    &-primary {\r\n      .header {\r\n        background: #2399e5;\r\n        color: #ffffff;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.header {\r\n  background: #bfbfbf;\r\n  padding: 16px;\r\n}\r\n\r\n.body {\r\n  flex-grow: 1;\r\n  overflow: auto;\r\n  padding: 16px;\r\n}\r\n\r\n.footer {\r\n  border-top: 1px solid #eeeeee;\r\n  display: block;\r\n  padding: 16px;\r\n  text-align: right;\r\n}\r\n"},{"fileName":"lib/ui-drawer/demo/ui-drawer-demo.component.html","type":"html","text":"<div>\r\n  Drawer uses KitModal and follows the same behavior as UiModal.\r\n</div>\r\n\r\n<div>\r\n  <h3>Default drawer</h3>\r\n  <button (click)=\"display1 = true\">Show drawer</button>\r\n\r\n  <kit-modal (close)=\"display1 = false\">\r\n    <ui-drawer *kitOverlay=\"display1\">\r\n      <div class=\"content\">\r\n        <h1>Drawer Title</h1>\r\n        <p>\r\n          Drawer content.\r\n        </p>\r\n      </div>\r\n    </ui-drawer>\r\n  </kit-modal>\r\n</div>\r\n\r\n<div>\r\n  <h3>Position</h3>\r\n  <button (click)=\"display2_t = true\">Top</button>\r\n  <button (click)=\"display2_r = true\">Right</button>\r\n  <button (click)=\"display2_b = true\">Bottom</button>\r\n  <button (click)=\"display2_l = true\">Left</button>\r\n\r\n  <kit-modal (close)=\"display2_t = false\">\r\n    <ui-drawer *kitOverlay=\"display2_t\"\r\n               position=\"top\">\r\n      <div class=\"content-vertical\">\r\n        <h1>Top Drawer Title</h1>\r\n        <p>\r\n          Drawer content.\r\n        </p>\r\n      </div>\r\n    </ui-drawer>\r\n  </kit-modal>\r\n\r\n  <kit-modal (close)=\"display2_r = false\">\r\n    <ui-drawer *kitOverlay=\"display2_r\"\r\n               position=\"right\">\r\n      <div class=\"content-vertical\">\r\n        <h1>Right Drawer Title</h1>\r\n        <p>\r\n          Drawer content.\r\n        </p>\r\n      </div>\r\n    </ui-drawer>\r\n  </kit-modal>\r\n\r\n  <kit-modal (close)=\"display2_b = false\">\r\n    <ui-drawer *kitOverlay=\"display2_b\"\r\n               position=\"bottom\">\r\n      <div class=\"content-vertical\">\r\n        <h1>Bottom Drawer Title</h1>\r\n        <p>\r\n          Drawer content.\r\n        </p>\r\n      </div>\r\n    </ui-drawer>\r\n  </kit-modal>\r\n\r\n  <kit-modal (close)=\"display2_l = false\">\r\n    <ui-drawer *kitOverlay=\"display2_l\"\r\n               position=\"left\">\r\n      <div class=\"content-vertical\">\r\n        <h1>Left Drawer Title</h1>\r\n        <p>\r\n          Drawer content.\r\n        </p>\r\n      </div>\r\n    </ui-drawer>\r\n  </kit-modal>\r\n</div>\r\n"},{"fileName":"lib/ui-drawer/demo/ui-drawer-demo.component.scss","type":"scss","text":".content {\r\n  padding: 32px;\r\n  width: 350px;\r\n}\r\n\r\n.content-vertical {\r\n  padding: 32px;\r\n}\r\n"},{"fileName":"lib/ui-drawer/ui-drawer/ui-drawer.component.html","type":"html","text":"<div class=\"drawer\"\r\n     [@slide]=\"position\"\r\n     [kitClass]=\"{position: position}\">\r\n  <div class=\"content\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n"},{"fileName":"lib/ui-drawer/ui-drawer/ui-drawer.component.scss","type":"scss","text":".drawer {\r\n  background: #ffffff;\r\n  box-shadow: 0 0 20px rgba(0, 0, 0, .3);\r\n  position: fixed;\r\n  &.position {\r\n    &-top {\r\n      left: 0;\r\n      right: 0;\r\n      top: 0;\r\n    }\r\n    &-right {\r\n      bottom: 0;\r\n      right: 0;\r\n      top: 0;\r\n    }\r\n    &-bottom {\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n    }\r\n    &-left {\r\n      bottom: 0;\r\n      left: 0;\r\n      top: 0;\r\n    }\r\n  }\r\n}\r\n"},{"fileName":"lib/ui-dropdown/demo/ui-dropdown-demo.component.html","type":"html","text":"<h1>Dropdown</h1>\r\n\r\n<div>\r\n  <button kitOverlayToggle\r\n          #toggle=\"toggle\">\r\n    Click ME!\r\n  </button>\r\n  <ui-dropdown *kitOverlay=\"toggle.state\"\r\n               [toggle]=\"toggle\">\r\n    <button uiDropdownItem>Item 1</button>\r\n    <button uiDropdownItem>Item 2</button>\r\n    <button uiDropdownItem>Item 3</button>\r\n  </ui-dropdown>\r\n</div>\r\n"},{"fileName":"lib/ui-dropdown/ui-dropdown-item/ui-dropdown-item.component.scss","type":"scss","text":":host {\r\n  background: #ffffff;\r\n  border: 0;\r\n  cursor: pointer;\r\n  display: block;\r\n  min-width: 80px;\r\n  outline: none;\r\n  padding: 4px 8px;\r\n  &:hover {\r\n    background: #eeeeee;\r\n  }\r\n  &:active {\r\n    color: #444444;\r\n  }\r\n}\r\n"},{"fileName":"lib/ui-dropdown/ui-dropdown/ui-dropdown.component.html","type":"html","text":"<div kitPinPosition\r\n     [position]=\"position\"\r\n     [anchor]=\"toggle\">\r\n  <div class=\"dropdown\"\r\n       [@fade]=\"true\"\r\n       (kitOutsideClick)=\"toggle.close()\"\r\n       [skip]=\"[toggle.nativeEl]\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n"},{"fileName":"lib/ui-dropdown/ui-dropdown/ui-dropdown.component.scss","type":"scss","text":".dropdown {\r\n  background: #ffffff;\r\n  border-radius: 3px;\r\n  box-shadow: 0 0 6px 1px rgba(50, 50, 50, .1);\r\n  box-sizing: border-box;\r\n  margin-top: 4px;\r\n  transform-origin: top;\r\n}\r\n"},{"fileName":"lib/ui-file/demo/ui-file-demo.component.html","type":"html","text":"<div>\r\n  <button uiFileHolder>\r\n    Pick a file\r\n    <input uiFile\r\n           type=\"file\"\r\n           (select)=\"files = $event\">\r\n  </button>\r\n\r\n  <div style=\"overflow: hidden\">\r\n    Files:\r\n    <div *ngFor=\"let file of files\">\r\n      > {{ file.file.name }} | {{ file.file.size }} | {{ file.file.lastModifiedDate }} | {{ file.data }}\r\n    </div>\r\n  </div>\r\n</div>\r\n"},{"fileName":"lib/ui-file/ui-file/ui-file.component.scss","type":"scss","text":":host {\r\n  bottom: 0;\r\n  left: 0;\r\n  opacity: 0;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n}\r\n"},{"fileName":"lib/ui-form/demo/ui-form-demo.component.html","type":"html","text":"<div>\r\n  <h3>Default form</h3>\r\n  <form uiForm>\r\n    <ui-form-field label=\"Email\">\r\n      <input [(ngModel)]=\"form1.email\"\r\n             name=\"email\"\r\n             required\r\n             email>\r\n      <span *kitFormError=\"'required'\">Field is required</span>\r\n      <span *kitFormError=\"'email'\">Enter a valid email</span>\r\n    </ui-form-field>\r\n    <ui-form-field label=\"Name\">\r\n      <input [(ngModel)]=\"form1.name\"\r\n             name=\"name\">\r\n    </ui-form-field>\r\n    <button kitFormTouch>Submit</button>\r\n  </form>\r\n</div>\r\n\r\n<div>\r\n  <h3>Form with reactive controls</h3>\r\n  <form uiForm\r\n        [formGroup]=\"form2\">\r\n    <ui-form-field label=\"Email\"\r\n                   [required]=\"true\">\r\n      <input formControlName=\"email\">\r\n      <span *kitFormError=\"'required'\">Field is required</span>\r\n      <span *kitFormError=\"'email'\">Enter a valid email</span>\r\n    </ui-form-field>\r\n    <ui-form-field label=\"Name\">\r\n      <input formControlName=\"name\">\r\n    </ui-form-field>\r\n    <button kitFormTouch>Submit</button>\r\n  </form>\r\n</div>\r\n\r\n<div>\r\n  <h3>Form with aligned layout</h3>\r\n  <p>Add class `layout-aligned` to `uiForm` or `uiFormField`.</p>\r\n  <form uiForm\r\n        class=\"layout-aligned\">\r\n    <ui-form-field label=\"Email\">\r\n      <input [(ngModel)]=\"form3.email\"\r\n             name=\"email\"\r\n             required\r\n             email>\r\n      <span *kitFormError=\"'required'\">Field is required</span>\r\n      <span *kitFormError=\"'email'\">Enter a valid email</span>\r\n    </ui-form-field>\r\n    <ui-form-field label=\"Name\">\r\n      <input [(ngModel)]=\"form3.name\"\r\n             name=\"name\">\r\n    </ui-form-field>\r\n    <button kitFormTouch>Submit</button>\r\n  </form>\r\n</div>\r\n\r\n<div>\r\n  <h3>Form with inline layout</h3>\r\n  <p>Add class `layout-inline` to `uiForm` or `uiFormField`.</p>\r\n  <form uiForm\r\n        class=\"layout-inline\">\r\n    <ui-form-field label=\"Email\">\r\n      <input [(ngModel)]=\"form4.email\"\r\n             name=\"email\"\r\n             required\r\n             email>\r\n      <span *kitFormError=\"'required'\">Field is required</span>\r\n      <span *kitFormError=\"'email'\">Enter a valid email</span>\r\n    </ui-form-field>\r\n    <ui-form-field label=\"Name\">\r\n      <input [(ngModel)]=\"form4.name\"\r\n             name=\"name\">\r\n    </ui-form-field>\r\n    <button kitFormTouch>Submit</button>\r\n  </form>\r\n</div>\r\n"},{"fileName":"lib/ui-form/ui-form-field/ui-form-field.component.html","type":"html","text":"<label [for]=\"formFieldService.controls.length === 1 ? formFieldService.control?.id : ''\">\r\n  {{ label }}\r\n  <span *ngIf=\"required || formFieldService.isRequired()\"\r\n        class=\"required\"\r\n        title=\"Required\">*</span>\r\n</label>\r\n<div class=\"control\">\r\n  <ng-content></ng-content>\r\n  <div *ngIf=\"errorRefs\"\r\n       class=\"errors\">\r\n    <ng-container *ngFor=\"let ref of errorRefs\">\r\n      <div *ngIf=\"hasError(ref.name)\"\r\n           @error\r\n           class=\"error\">\r\n        <ng-container *ngTemplateOutlet=\"ref.templateRef\"></ng-container>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n"},{"fileName":"lib/ui-form/ui-form-field/ui-form-field.component.scss","type":"scss","text":":host {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n:host-context([uiForm].layout-aligned,ui-form-field.layout-aligned) {\r\n  display: flex;\r\n  flex-direction: row;\r\n  label {\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n    width: 150px;\r\n    .required {\r\n      margin-right: 4px;\r\n    }\r\n  }\r\n  .control {\r\n    padding-left: 8px;\r\n  }\r\n}\r\n\r\n:host-context([uiForm].layout-inline,ui-form-field.layout-inline) {\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-bottom: 0;\r\n  margin-right: 16px;\r\n  label {\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n    .required {\r\n      margin-right: 4px;\r\n    }\r\n  }\r\n  .control {\r\n    padding-left: 8px;\r\n  }\r\n}\r\n\r\nlabel {\r\n  .required {\r\n    color: #ff0c09;\r\n  }\r\n}\r\n\r\n.errors {\r\n  align-items: flex-start;\r\n  display: flex;\r\n  flex-direction: column;\r\n  .error {\r\n    color: #ff0c09;\r\n  }\r\n}\r\n"},{"fileName":"lib/ui-form/ui-form/ui-form.component.html","type":"html","text":"<ng-content></ng-content>\r\n"},{"fileName":"lib/ui-form/ui-form/ui-form.component.scss","type":"scss","text":":host {\r\n  &.layout {\r\n    &-inline {\r\n      align-items: flex-start;\r\n      display: flex;\r\n      flex-flow: row wrap;\r\n    }\r\n  }\r\n}\r\n"},{"fileName":"lib/ui-loading-bar/demo/ui-loading-bar-demo.component.html","type":"html","text":"<div>\r\n  <h3>Global progress</h3>\r\n  <button (click)=\"start()\">Start</button>\r\n  <button (click)=\"end()\">End</button>\r\n</div>\r\n\r\n<div>\r\n  <h3>Local progress</h3>\r\n  <div [ngStyle]=\"{position: 'relative', background: '#eee', height: '50px', marginBottom: '16px', overflow: 'hidden'}\">\r\n    <ui-loading-bar id=\"local\" [ngStyle]=\"{position: 'absolute'}\"></ui-loading-bar>\r\n  </div>\r\n\r\n  <button (click)=\"startLocal()\">Start</button>\r\n  <button (click)=\"endLocal()\">End</button>\r\n</div>\r\n"},{"fileName":"lib/ui-loading-bar/ui-loading-bar/ui-loading-bar.component.html","type":"html","text":"<div [@bar]=\"barState\" class=\"bar\"></div>\r\n"},{"fileName":"lib/ui-loading-bar/ui-loading-bar/ui-loading-bar.component.scss","type":"scss","text":":host {\r\n  left: 0;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  z-index: 1;\r\n}\r\n\r\n.bar {\r\n  background: #2399e5;\r\n  box-shadow: -7px 2px 11px 0 #2399e5;\r\n  height: 2px;\r\n  min-height: 1px;\r\n}\r\n"},{"fileName":"lib/ui-modal/demo/ui-modal-demo-binding-modal.component.html","type":"html","text":"<ui-modal header=\"Modal title\"\r\n          (close)=\"close()\">\r\n  <div>\r\n    Input value: {{ inputField }}\r\n  </div>\r\n  <ui-modal-footer>\r\n    <button (click)=\"closeWith('1')\">Emit 1 and close</button>\r\n    <button (click)=\"closeWith('2')\">Emit 2 and close</button>\r\n    <button (click)=\"closeWith('3')\">Emit 3 and close</button>\r\n  </ui-modal-footer>\r\n</ui-modal>\r\n"},{"fileName":"lib/ui-modal/demo/ui-modal-demo-can-close-modal.component.html","type":"html","text":"<ui-modal header=\"Modal title\"\r\n          (close)=\"close()\">\r\n  <label>\r\n    <input type=\"checkbox\" [(ngModel)]=\"closable\"> Can close\r\n  </label>\r\n  <ui-modal-footer>\r\n    <button (click)=\"close()\">Close</button>\r\n  </ui-modal-footer>\r\n</ui-modal>\r\n"},{"fileName":"lib/ui-modal/demo/ui-modal-demo-modal.component.html","type":"html","text":"<ui-modal header=\"Modal title\"\r\n          (close)=\"close()\">\r\n  Modal body\r\n  <ui-modal-footer>\r\n    <button (click)=\"close()\">Close</button>\r\n  </ui-modal-footer>\r\n</ui-modal>\r\n"},{"fileName":"lib/ui-modal/demo/ui-modal-demo.component.html","type":"html","text":"<div>\r\n  <h3>Default modal</h3>\r\n  <button (click)=\"display1 = true\">Show modal</button>\r\n\r\n  <kit-modal (close)=\"display1 = false\">\r\n    <ui-modal *kitOverlay=\"display1\"\r\n              header=\"Modal title\">\r\n      Modal body\r\n      <ui-modal-footer>\r\n        <button (click)=\"display1 = false\">Close</button>\r\n      </ui-modal-footer>\r\n    </ui-modal>\r\n  </kit-modal>\r\n</div>\r\n\r\n\r\n<div>\r\n  <h3>Show modal component using the service</h3>\r\n  <p>Declare modal in the stand-alone component and control it with service.</p>\r\n  <p>Do not forget to define the modal component in `entryComponents`.</p>\r\n  <button (click)=\"show2()\">Show modal</button>\r\n</div>\r\n\r\n<div>\r\n  <h3>Show modal component using template</h3>\r\n  <p>Declare modal in the stand-alone component and control it in the template.</p>\r\n  <button (click)=\"display3 = true\">Show modal</button>\r\n\r\n  <kit-modal (close)=\"display3 = false\">\r\n    <ui-modal-demo-modal *kitOverlay=\"display3\"></ui-modal-demo-modal>\r\n  </kit-modal>\r\n</div>\r\n\r\n<div>\r\n  <h3>Data-binding</h3>\r\n  <p>Interaction with service-hosted modal.</p>\r\n  <div>Input: <input [(ngModel)]=\"inputField\"></div>\r\n  <div>Output: {{ outputField }}</div>\r\n  <button (click)=\"show4()\">Show modal</button>\r\n</div>\r\n\r\n<div>\r\n  <h3>canClose guard</h3>\r\n  <p>Prevent closing by guard-method.</p>\r\n  <p>Works only for service-hosted modals.</p>\r\n  <button (click)=\"show5()\">Show modal</button>\r\n</div>\r\n"},{"fileName":"lib/ui-modal/ui-modal-footer/ui-modal-footer.component.scss","type":"scss","text":":host {\r\n  border-top: 1px solid #eeeeee;\r\n  display: block;\r\n  padding: 16px;\r\n}\r\n"},{"fileName":"lib/ui-modal/ui-modal/ui-modal.component.html","type":"html","text":"<div class=\"modal\"\r\n     [@fade]=\"true\">\r\n  <div *ngIf=\"header\" class=\"header\">\r\n    <div class=\"title\">{{ header }}</div>\r\n    <div>\r\n      <button class=\"close\" (click)=\"close()\">X</button>\r\n    </div>\r\n  </div>\r\n  <div class=\"body\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n  <ng-content select=\"ui-modal-footer\"></ng-content>\r\n</div>\r\n"},{"fileName":"lib/ui-modal/ui-modal/ui-modal.component.scss","type":"scss","text":":host {\r\n  align-items: center;\r\n  bottom: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  left: 0;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n}\r\n\r\n.modal {\r\n  background: #ffffff;\r\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, .25);\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-height: 90%;\r\n  max-width: 90%;\r\n  min-width: 400px;\r\n}\r\n\r\n.header {\r\n  align-items: center;\r\n  background: #bfbfbf;\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 16px;\r\n  .title {\r\n    flex-grow: 1;\r\n  }\r\n  .close {\r\n    background: transparent;\r\n    border: none;\r\n    color: #ffffff;\r\n  }\r\n}\r\n\r\n.body {\r\n  flex-grow: 1;\r\n  overflow: auto;\r\n  padding: 16px;\r\n}\r\n"},{"fileName":"lib/ui-notification/demo/ui-notification-demo.component.html","type":"html","text":"<div>\n  <h3>Default</h3>\n  <button (click)=\"open({})\">Open default</button>\n</div>\n\n<div>\n  <h3>Position</h3>\n  <button (click)=\"open({position: 'top-right'})\">Set top-right and open</button>\n  <button (click)=\"open({position: 'bottom-right'})\">Set bottom-right and open</button>\n  <button (click)=\"open({position: 'bottom-left'})\">Set bottom-left and open</button>\n  <button (click)=\"open({position: 'top-left'})\">Set top-left and open</button>\n</div>\n\n<div>\n  <h3>Duration</h3>\n  <button (click)=\"open({duration: 2000})\">Set duration=2000 and open</button>\n  <button (click)=\"open({duration: 4000})\">Set duration=4000 and open</button>\n  <button (click)=\"open({duration: 10000})\">Set duration=10000 and open</button>\n</div>\n"},{"fileName":"lib/ui-notification/ui-notification-host/ui-notification-host.component.html","type":"html","text":"<div class=\"wrapper\" [kitClass]=\"{position: position | async}\">\r\n  <div *ngFor=\"let item of items | async\"\r\n       [@item]=\"position | async\"\r\n       class=\"item\"\r\n       (tap)=\"close(item.__id)\"\r\n       (swipe)=\"close(item.__id)\">\r\n    <h3 *ngIf=\"item.params.title\" class=\"title\">{{ item.params.title }}</h3>\r\n    <div class=\"message\">{{ item.params.message }}</div>\r\n  </div>\r\n</div>\r\n"},{"fileName":"lib/ui-notification/ui-notification-host/ui-notification-host.component.scss","type":"scss","text":".wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: fixed;\r\n  &.position {\r\n    &-top-right {\r\n      align-items: flex-end;\r\n      right: 0;\r\n      top: 0;\r\n    }\r\n    &-bottom-right {\r\n      align-items: flex-end;\r\n      bottom: 0;\r\n      right: 0;\r\n    }\r\n    &-bottom-left {\r\n      align-items: flex-start;\r\n      bottom: 0;\r\n      left: 0;\r\n    }\r\n    &-top-left {\r\n      align-items: flex-start;\r\n      left: 0;\r\n      top: 0;\r\n    }\r\n  }\r\n}\r\n\r\n.item {\r\n  background: rgba(0, 0, 0, .6);\r\n  border-radius: 3px;\r\n  box-shadow: 0 0 15px 0 rgba(50, 50, 50, .3);\r\n  color: #ffffff;\r\n  margin: 8px;\r\n  min-width: 150px;\r\n  padding: 16px;\r\n  .title {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n}\r\n"},{"fileName":"lib/ui-popup/demo/ui-popup-demo.component.html","type":"html","text":"<ng-template #contentTmpl>\r\n  <div class=\"content\">\r\n    Popup content<br>\r\n    Popup content<br>\r\n    Popup content\r\n  </div>\r\n</ng-template>\r\n\r\n<div>\r\n  <h3>Default</h3>\r\n  <button kitOverlayToggle trigger=\"hover\" #toggle=\"toggle\">Hover to see popup</button>\r\n  <ui-popup *kitOverlay=\"toggle.state\"\r\n            [toggle]=\"toggle\">\r\n    <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\r\n  </ui-popup>\r\n</div>\r\n\r\n<div>\r\n  <h3>Position</h3>\r\n  <button kitOverlayToggle trigger=\"hover\" #toggle_p1=\"toggle\">Top-center</button>\r\n  <ui-popup *kitOverlay=\"toggle_p1.state\"\r\n            [toggle]=\"toggle_p1\"\r\n            position=\"top-center\">\r\n    <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\r\n  </ui-popup>\r\n\r\n  <button kitOverlayToggle trigger=\"hover\" #toggle_tr=\"toggle\">Top-right</button>\r\n  <ui-popup *kitOverlay=\"toggle_tr.state\"\r\n            [toggle]=\"toggle_tr\"\r\n            position=\"top-right\">\r\n    <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\r\n  </ui-popup>\r\n\r\n  <button kitOverlayToggle trigger=\"hover\" #toggle_tl=\"toggle\">Top-left</button>\r\n  <ui-popup *kitOverlay=\"toggle_tl.state\"\r\n            [toggle]=\"toggle_tl\"\r\n            position=\"top-left\">\r\n    <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\r\n  </ui-popup>\r\n\r\n  <button kitOverlayToggle trigger=\"hover\" #toggle_p2=\"toggle\">Right-center</button>\r\n  <ui-popup *kitOverlay=\"toggle_p2.state\"\r\n            [toggle]=\"toggle_p2\"\r\n            position=\"right-center\">\r\n    <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\r\n  </ui-popup>\r\n\r\n  <button kitOverlayToggle trigger=\"hover\" #toggle_rt=\"toggle\">Right-top</button>\r\n  <ui-popup *kitOverlay=\"toggle_rt.state\"\r\n            [toggle]=\"toggle_rt\"\r\n            position=\"right-top\">\r\n    <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\r\n  </ui-popup>\r\n\r\n  <button kitOverlayToggle trigger=\"hover\" #toggle_rb=\"toggle\">Right-bottom</button>\r\n  <ui-popup *kitOverlay=\"toggle_rb.state\"\r\n            [toggle]=\"toggle_rb\"\r\n            position=\"right-bottom\">\r\n    <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\r\n  </ui-popup>\r\n\r\n  <button kitOverlayToggle trigger=\"hover\" #toggle_p3=\"toggle\">Bottom-center</button>\r\n  <ui-popup *kitOverlay=\"toggle_p3.state\"\r\n            [toggle]=\"toggle_p3\"\r\n            position=\"bottom-center\">\r\n    <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\r\n  </ui-popup>\r\n\r\n  <button kitOverlayToggle trigger=\"hover\" #toggle_br=\"toggle\">Bottom-right</button>\r\n  <ui-popup *kitOverlay=\"toggle_br.state\"\r\n            [toggle]=\"toggle_br\"\r\n            position=\"bottom-right\">\r\n    <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\r\n  </ui-popup>\r\n\r\n  <button kitOverlayToggle trigger=\"hover\" #toggle_bl=\"toggle\">Bottom-left</button>\r\n  <ui-popup *kitOverlay=\"toggle_bl.state\"\r\n            [toggle]=\"toggle_bl\"\r\n            position=\"bottom-left\">\r\n    <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\r\n  </ui-popup>\r\n\r\n  <button kitOverlayToggle trigger=\"hover\" #toggle_p4=\"toggle\">Left-center</button>\r\n  <ui-popup *kitOverlay=\"toggle_p4.state\"\r\n            [toggle]=\"toggle_p4\"\r\n            position=\"left-center\">\r\n    <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\r\n  </ui-popup>\r\n\r\n  <button kitOverlayToggle trigger=\"hover\" #toggle_lt=\"toggle\">Left-top</button>\r\n  <ui-popup *kitOverlay=\"toggle_lt.state\"\r\n            [toggle]=\"toggle_lt\"\r\n            position=\"left-top\">\r\n    <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\r\n  </ui-popup>\r\n\r\n  <button kitOverlayToggle trigger=\"hover\" #toggle_lb=\"toggle\">Left-bottom</button>\r\n  <ui-popup *kitOverlay=\"toggle_lb.state\"\r\n            [toggle]=\"toggle_lb\"\r\n            position=\"left-bottom\">\r\n    <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\r\n  </ui-popup>\r\n</div>\r\n\r\n<div>\r\n  <h3>Trigger - click</h3>\r\n  <button kitOverlayToggle #toggle_c=\"toggle\">Click to see Popup</button>\r\n  <ui-popup *kitOverlay=\"toggle_c.state\"\r\n            [toggle]=\"toggle_c\">\r\n    <ng-container *ngTemplateOutlet=\"contentTmpl\"></ng-container>\r\n  </ui-popup>\r\n</div>\r\n"},{"fileName":"lib/ui-popup/demo/ui-popup-demo.component.scss","type":"scss","text":"button {\r\n  margin-right: 16px;\r\n}\r\n\r\n.content {\r\n  min-width: 160px;\r\n  padding: 12px 16px;\r\n}\r\n"},{"fileName":"lib/ui-popup/ui-popup/ui-popup.component.html","type":"html","text":"<div kitPinPosition\r\n     [anchor]=\"toggle\"\r\n     [position]=\"position\">\r\n  <div class=\"popup\"\r\n       [kitClass]=\"{position: position}\"\r\n       [@fade]=\"true\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n"},{"fileName":"lib/ui-popup/ui-popup/ui-popup.component.scss","type":"scss","text":"$offset: 8px;\r\n\r\n.popup {\r\n  background: #ffffff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, .2);\r\n  &.position {\r\n    &-top-center {\r\n      margin-bottom: $offset;\r\n      transform-origin: bottom;\r\n    }\r\n    &-top-right {\r\n      margin-bottom: $offset;\r\n      transform-origin: bottom right;\r\n    }\r\n    &-top-left {\r\n      margin-bottom: $offset;\r\n      transform-origin: bottom left;\r\n    }\r\n    &-right-center {\r\n      margin-left: $offset;\r\n      transform-origin: left;\r\n    }\r\n    &-right-top {\r\n      margin-left: $offset;\r\n      transform-origin: left top;\r\n    }\r\n    &-right-bottom {\r\n      margin-left: $offset;\r\n      transform-origin: left bottom;\r\n    }\r\n    &-bottom-center {\r\n      margin-top: $offset;\r\n      transform-origin: top;\r\n    }\r\n    &-bottom-right {\r\n      margin-top: $offset;\r\n      transform-origin: top right;\r\n    }\r\n    &-bottom-left {\r\n      margin-top: $offset;\r\n      transform-origin: top left;\r\n    }\r\n    &-left-center {\r\n      margin-right: $offset;\r\n      transform-origin: right;\r\n    }\r\n    &-left-top {\r\n      margin-right: $offset;\r\n      transform-origin: right top;\r\n    }\r\n    &-left-bottom {\r\n      margin-right: $offset;\r\n      transform-origin: right bottom;\r\n    }\r\n  }\r\n}\r\n"},{"fileName":"lib/ui-radio/demo/ui-radio-demo.component.html","type":"html","text":"<div>\r\n  <label>\r\n    <input type=\"radio\"\r\n           uiRadio\r\n           [(ngModel)]=\"radioModel\"\r\n           value=\"A\">\r\n    Option A\r\n  </label>\r\n  <label>\r\n    <input type=\"radio\"\r\n           uiRadio\r\n           [(ngModel)]=\"radioModel\"\r\n           value=\"B\">\r\n    Option B\r\n  </label>\r\n  <label>\r\n    <input type=\"radio\"\r\n           uiRadio\r\n           [(ngModel)]=\"radioModel\"\r\n           value=\"C\">\r\n    Option C\r\n  </label>\r\n\r\n  <div>\r\n    Model: {{ radioModel | json }}\r\n  </div>\r\n\r\n</div>\r\n"},{"fileName":"lib/ui-radio/ui-radio/ui-radio.component.html","type":"html","text":"<ng-template #checkTemplate>\r\n  <label [attr.for]=\"idBinding\"\r\n         class=\"option\"\r\n         [class.-checked]=\"isChecked()\"\r\n         [class.-focused]=\"focused\"\r\n         [class.-has-errors]=\"hasErrors\"\r\n         [class.-disabled]=\"disabled\">\r\n  </label>\r\n</ng-template>\r\n"},{"fileName":"lib/ui-radio/ui-radio/ui-radio.component.scss","type":"scss","text":":host {\r\n  clip: rect(0 0 0 0);\r\n  clip-path: inset(100%);\r\n  height: 1px;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  width: 1px;\r\n}\r\n\r\n$boxSize: 16px;\r\n$borderWidth: 1px;\r\n\r\n.option {\r\n  cursor: pointer;\r\n  margin-left: $boxSize + 8px;\r\n  position: relative;\r\n  &.-checked {\r\n    &::before {\r\n      background: #2399e5;\r\n      border-color: #2399e5;\r\n    }\r\n    &::after {\r\n      background: #ffffff;\r\n      border-radius: 50%;\r\n      content: \"\";\r\n      height: $boxSize / 2;\r\n      left: $boxSize / 4 + $borderWidth;\r\n      margin-left: - $boxSize - 8px;\r\n      position: absolute;\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n      width: $boxSize / 2;\r\n    }\r\n  }\r\n  &.-focused {\r\n    &::before {\r\n      border-color: #2399e5;\r\n      box-shadow: 0 1px 5px rgba(0, 0, 0, .1);\r\n    }\r\n  }\r\n  &.-has-errors {\r\n    &::before {\r\n      border-color: #ff0c09;\r\n    }\r\n    &.-checked::before {\r\n      background: #ff0c09;\r\n    }\r\n  }\r\n  &.-disabled {\r\n    cursor: default;\r\n    &.-checked {\r\n      &::before {\r\n        background: #9da8b4;\r\n        border-color: #9da8b4;\r\n      }\r\n      &::after {\r\n        background: #ffffff;\r\n      }\r\n    }\r\n    &::before {\r\n      background: #f6f6f6;\r\n      border-color: #becad6;\r\n    }\r\n  }\r\n  &::before {\r\n    background-color: #ffffff;\r\n    border: $borderWidth solid #becad6;\r\n    border-radius: 50%;\r\n    box-shadow: none;\r\n    content: \"\";\r\n    display: inline-block;\r\n    height: $boxSize;\r\n    left: 0;\r\n    margin-left: - $boxSize - 8px;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    transition: all 250ms cubic-bezier(.27, .01, .38, 1.06);\r\n    width: $boxSize;\r\n  }\r\n}\r\n\r\n"},{"fileName":"lib/ui-rating/demo/ui-rating-demo.component.html","type":"html","text":"<div>\r\n  <h3>Star character</h3>\r\n  <ui-rating [value]=\"3\"></ui-rating>\r\n</div>\r\n\r\n<div>\r\n  <h3>Star icon</h3>\r\n  <ui-rating [value]=\"3\" icon=\"star\"></ui-rating>\r\n</div>\r\n"},{"fileName":"lib/ui-rating/ui-rating/ui-rating.component.html","type":"html","text":"<ng-container *ngIf=\"icon\">\r\n  <kit-icon *kitRepeat=\"total; let index = index\"\r\n            [name]=\"icon\"\r\n            class=\"icon\"\r\n            [class.active]=\"index < value\">\r\n  </kit-icon>\r\n</ng-container>\r\n<ng-container *ngIf=\"!icon\">\r\n        <span *kitRepeat=\"total; let index = index\"\r\n              class=\"icon\"\r\n              [class.active]=\"index < value\"\r\n              [innerHtml]=\"symbol\">\r\n        </span>\r\n</ng-container>\r\n"},{"fileName":"lib/ui-rating/ui-rating/ui-rating.component.scss","type":"scss","text":".icon {\r\n  color: #cccccc;\r\n  height: 20px;\r\n  width: 20px;\r\n  &.active {\r\n    color: #e8ba03;\r\n  }\r\n}\r\n"},{"fileName":"lib/ui-scroll/demo/ui-scroll-demo.component.html","type":"html","text":"<div>\r\n  <h3>Default scroll</h3>\r\n  <div style=\"border: 1px solid #00bbfa; height: 200px; overflow: hidden;\">\r\n    <ui-scroll>\r\n      <p>Some scroll content</p>\r\n      <p>Some scroll content</p>\r\n      <p>Some scroll content</p>\r\n      <p>Some scroll content</p>\r\n      <p>Some scroll content</p>\r\n      <p>Some scroll content</p>\r\n      <p>Some scroll content</p>\r\n      <p>Some scroll content</p>\r\n      <p>Some scroll content</p>\r\n      <p>Some scroll content</p>\r\n      <p>Some scroll content</p>\r\n      <p>Some scroll content</p>\r\n      <p>Some scroll content</p>\r\n      <p>Some scroll content</p>\r\n      <p>Some scroll content</p>\r\n      <p>Some scroll content</p>\r\n      <p>Some scroll content</p>\r\n      <p>Some scroll content</p>\r\n      <p>Some scroll content</p>\r\n      <p>Some scroll content</p>\r\n      <p>Some scroll content</p>\r\n    </ui-scroll>\r\n  </div>\r\n</div>\r\n\r\n<div>\r\n  <h3>Vertical scroll</h3>\r\n  <div style=\"border: 1px solid #00bbfa; width: 500px\">\r\n    <ui-scroll>\r\n      <div style=\"width: 2000px;\">\r\n        Some long content Some long content Some long content Some long content Some long content Some long content Some\r\n        long content\r\n        Some long content Some long content Some long content Some long content Some long content Some long content Some\r\n        long content\r\n        Some long content Some long content Some long content Some long content Some long content Some long content Some\r\n        long content\r\n      </div>\r\n    </ui-scroll>\r\n  </div>\r\n</div>\r\n"},{"fileName":"lib/ui-scroll/ui-scroll/ui-scroll.component.html","type":"html","text":"<div #vBarWrapper\r\n     class=\"v-bar-wrapper\"\r\n     [class.-active]=\"(hover || state.dragging) && state.vBar.active\">\r\n  <div #vBar\r\n       class=\"bar\"\r\n       [style.height.px]=\"state.vBar.size\"\r\n       [style.top.px]=\"state.vBar.position\">\r\n  </div>\r\n</div>\r\n\r\n<div #hBarWrapper\r\n     class=\"h-bar-wrapper\"\r\n     [class.-active]=\"(hover || state.dragging) && state.hBar.active\">\r\n  <div #hBar\r\n       class=\"bar\"\r\n       [style.width.px]=\"state.hBar.size\"\r\n       [style.left.px]=\"state.hBar.position\">\r\n  </div>\r\n</div>\r\n\r\n<div #vWrapper\r\n     class=\"v-wrapper\"\r\n     [style.marginBottom.px]=\"-state.nativeScrollbarWidth\"\r\n     [style.paddingRight.px]=\"state.nativeScrollbarWidth\"\r\n     (scroll)=\"updateVBar()\">\r\n  <div #hWrapper\r\n       class=\"h-wrapper\"\r\n       [style.marginRight.px]=\"-state.nativeScrollbarWidth\"\r\n       [style.paddingBottom.px]=\"state.nativeScrollbarWidth\"\r\n       (scroll)=\"updateHBar()\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n"},{"fileName":"lib/ui-scroll/ui-scroll/ui-scroll.component.scss","type":"scss","text":"$barSize: 6px;\r\n\r\n:host {\r\n  display: flex;\r\n  max-height: 100%;\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n\r\n.v-bar-wrapper {\r\n  background: rgba(0, 0, 0, .15);\r\n  border-radius: 3px;\r\n  bottom: 1px;\r\n  opacity: 0;\r\n  position: absolute;\r\n  right: 1px;\r\n  top: 1px;\r\n  transition-duration: 250ms;\r\n  transition-property: opacity;\r\n  width: $barSize;\r\n  .bar {\r\n    background: rgba(0, 0, 0, .4);\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n    position: absolute;\r\n    width: $barSize;\r\n  }\r\n  &.-active {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.h-bar-wrapper {\r\n  background: rgba(0, 0, 0, .15);\r\n  border-radius: 3px;\r\n  bottom: 1px;\r\n  height: $barSize;\r\n  left: 1px;\r\n  opacity: 0;\r\n  position: absolute;\r\n  right: 1px;\r\n  transition-duration: 250ms;\r\n  transition-property: opacity;\r\n  .bar {\r\n    background: rgba(0, 0, 0, .4);\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n    height: $barSize;\r\n    position: absolute;\r\n  }\r\n  &.-active {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.v-wrapper {\r\n  box-sizing: content-box;\r\n  max-height: inherit;\r\n  min-width: 100%;\r\n  overflow-x: hidden;\r\n  overflow-y: scroll;\r\n}\r\n\r\n.h-wrapper {\r\n  box-sizing: border-box;\r\n  min-height: 100%;\r\n  overflow-x: scroll;\r\n  overflow-y: hidden;\r\n}\r\n"},{"fileName":"lib/ui-select/demo/ui-select-demo.component.html","type":"html","text":"<div>\r\n  <select uiSelect [(ngModel)]=\"selectModel\">\r\n    <option value=\"1\">1</option>\r\n    <option value=\"2\">2</option>\r\n    <option value=\"3\">3</option>\r\n  </select>\r\n\r\n  {{ selectModel }}\r\n</div>\r\n"},{"fileName":"lib/ui-select/ui-select/ui-select.component.scss","type":"scss","text":":host {\r\n  background: #f7f7f7;\r\n  border: 1px solid #d6d6d6;\r\n  border-radius: 2px;\r\n  box-shadow: 0 0 2px 0 rgba(50, 50, 50, .1);\r\n  box-sizing: border-box;\r\n  color: #4a505a;\r\n  padding: 4px 8px;\r\n  transition: all .3s;\r\n  width: 100%;\r\n  &:hover {\r\n    border-color: #acadb0;\r\n    outline: none;\r\n  }\r\n  &:focus {\r\n    border-color: #2399e5;\r\n    outline: none;\r\n  }\r\n}\r\n"},{"fileName":"lib/ui-slider/demo/ui-slider-demo.component.html","type":"html","text":"<div>\n  <h3>Default slider</h3>\n  <div>\n    Range: from 0 to 10, step: 1, {{ value1 | json }}<br>\n    <ui-slider [(ngModel)]=\"value1\" [min]=\"0\" [max]=\"10\" [step]=\"1\"></ui-slider>\n  </div>\n\n  <div>\n    Range: from -1000 to 1000, step: 2, value: {{ value2 | json }}<br>\n    <ui-slider [(ngModel)]=\"value2\" [min]=\"-1000\" [max]=\"1000\" [step]=\"2\"></ui-slider>\n  </div>\n\n  <div>\n    Range: from 50 to 150, step: 5, {{ value3 | json }} (without fill)<br>\n    <ui-slider [(ngModel)]=\"value3\"\n               [min]=\"50\"\n               [max]=\"150\"\n               [step]=\"5\"\n               [fill]=\"false\">\n    </ui-slider>\n  </div>\n</div>\n\n<div>\n  <h3>Range slider</h3>\n  Range: from -1000 to 1600, step: 50, value: {{ rangeValue | json }}<br>\n  <ui-slider [(ngModel)]=\"rangeValue\" [range]=\"true\" [min]=\"-1000\" [max]=\"1600\" [step]=\"50\"></ui-slider>\n</div>\n"},{"fileName":"lib/ui-slider/ui-slider/ui-slider.component.html","type":"html","text":"<div class=\"slider\"\r\n     #sliderRef\r\n     (pan)=\"handleMove($event)\"\r\n     (tap)=\"handleMove($event)\">\r\n  <div class=\"bg\"></div>\r\n  <div [style.left.px]=\"fillLeft\"\r\n       [style.right.px]=\"fillRight\"\r\n       class=\"fill\"></div>\r\n  <div *ngIf=\"range\"\r\n       [style.left.px]=\"leftPointerLeft\"\r\n       class=\"pointer\"\r\n       tabindex=\"0\"></div>\r\n  <div class=\"pointer\"\r\n       [style.left.px]=\"mainPointerLeft\"\r\n       tabindex=\"0\"></div>\r\n</div>\r\n"},{"fileName":"lib/ui-slider/ui-slider/ui-slider.component.scss","type":"scss","text":"$height: 4px;\r\n$pointer: 10px;\r\n$pad: 4px;\r\n\r\n.slider {\r\n  height: $height;\r\n  padding: $pad 0;\r\n  position: relative;\r\n}\r\n\r\n.bg {\r\n  background: #dddddd;\r\n  height: $height;\r\n}\r\n\r\n.fill {\r\n  background: #2399e5;\r\n  bottom: $pad;\r\n  height: $height;\r\n  left: 0;\r\n  position: absolute;\r\n  top: $pad;\r\n}\r\n\r\n.pointer {\r\n  background: #ffffff;\r\n  border: 1px solid #2399e5;\r\n  border-radius: 50%;\r\n  box-shadow: 1px 1px 8px rgba(0, 0, 0, .3);\r\n  box-sizing: border-box;\r\n  cursor: pointer;\r\n  height: $pointer;\r\n  position: absolute;\r\n  top: ($height - $pointer) / 2 + $pad;\r\n  transform: translateX(-50%);\r\n  width: $pointer;\r\n  &:focus {\r\n    background: #f9f9f9;\r\n    box-shadow: 1px 1px 11px rgba(0, 0, 0, .4);\r\n    outline: none;\r\n  }\r\n}\r\n"},{"fileName":"lib/ui-tabs/demo/ui-tabs-demo.component.html","type":"html","text":"<div>\r\n  <h3>Default</h3>\r\n  <ui-tabs>\r\n    <ui-tabs-nav>\r\n      <ui-tabs-tab [id]=\"1\">Tab 1</ui-tabs-tab>\r\n      <ui-tabs-tab [id]=\"2\">Tab 2</ui-tabs-tab>\r\n      <ui-tabs-tab [id]=\"3\">Tab 3</ui-tabs-tab>\r\n    </ui-tabs-nav>\r\n    <ui-tabs-content *kitSlide=\"1\">Tab 1 Content</ui-tabs-content>\r\n    <ui-tabs-content *kitSlide=\"2\">Tab 2 Content</ui-tabs-content>\r\n    <ui-tabs-content *kitSlide=\"3\">Tab 3 Content</ui-tabs-content>\r\n  </ui-tabs>\r\n</div>\r\n\r\n<div>\r\n  <h3>Generated</h3>\r\n  <ui-tabs>\r\n    <ui-tabs-nav>\r\n      <ui-tabs-tab *ngFor=\"let tab of tabs; let id = index\" [id]=\"id\">{{ tab.tab }}</ui-tabs-tab>\r\n    </ui-tabs-nav>\r\n    <ng-container *ngFor=\"let tab of tabs; let id = index\">\r\n      <ui-tabs-content *kitSlide=\"id\">{{ tab.content }}</ui-tabs-content>\r\n    </ng-container>\r\n  </ui-tabs>\r\n</div>\r\n"},{"fileName":"lib/ui-tabs/ui-tabs-content/ui-tabs-content.component.scss","type":"scss","text":":host {\r\n  display: block;\r\n  padding: 16px;\r\n}\r\n"},{"fileName":"lib/ui-tabs/ui-tabs-nav/ui-tabs-nav.component.scss","type":"scss","text":":host {\r\n  background: #eeeeee;\r\n  color: #333333;\r\n  display: flex;\r\n  flex-direction: row;\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n"},{"fileName":"lib/ui-tabs/ui-tabs-tab/ui-tabs-tab.component.scss","type":"scss","text":":host {\r\n  border-bottom: 1px solid #eeeeee;\r\n  cursor: pointer;\r\n  padding: 8px;\r\n  transition-duration: .25s;\r\n  transition-property: background, border;\r\n  user-select: none;\r\n  &:hover {\r\n    background: #e4e4e4;\r\n    border-bottom-color: #eeeeee;\r\n  }\r\n  &.active {\r\n    border-bottom-color: #2399e5;\r\n  }\r\n}\r\n"},{"fileName":"lib/ui-tabs/ui-tabs/ui-tabs.component.scss","type":"scss","text":".wrapper {\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n"},{"fileName":"lib/ui-text/demo/ui-text-demo.component.html","type":"html","text":"<div>\r\n  <h3>Input</h3>\r\n  <input type=\"text\" uiText [(ngModel)]=\"inputModel\">\r\n  {{ inputModel }}\r\n</div>\r\n\r\n<div>\r\n  <h3>Textarea</h3>\r\n  <textarea uiText [(ngModel)]=\"textareaModel\"></textarea>\r\n  {{ textareaModel }}\r\n</div>\r\n"},{"fileName":"lib/ui-text/ui-text/ui-text.component.scss","type":"scss","text":":host {\r\n  background: #f7f7f7;\r\n  border: 1px solid #d6d6d6;\r\n  border-radius: 2px;\r\n  box-shadow: 0 0 2px 0 rgba(50, 50, 50, .1);\r\n  box-sizing: border-box;\r\n  color: #4a505a;\r\n  padding: 4px 8px;\r\n  transition: all .3s;\r\n  width: 100%;\r\n  &:hover {\r\n    border-color: #acadb0;\r\n    outline: none;\r\n  }\r\n  &:focus {\r\n    border-color: #2399e5;\r\n    box-shadow: 0 1px 5px rgba(0, 0, 0, .1);\r\n    outline: none;\r\n  }\r\n  &.-has-errors {\r\n    border-color: #ff0c09;\r\n    &:hover, &:focus {\r\n      border-color: #ff0c09;\r\n    }\r\n  }\r\n}\r\n"},{"fileName":"lib/ui-toggle/demo/ui-toggle-demo.component.html","type":"html","text":"<div>\r\n  <label>\r\n    <input type=\"checkbox\"\r\n           uiToggle\r\n           [(ngModel)]=\"toggleModel\">\r\n    Toggle label\r\n  </label>\r\n\r\n  <div>\r\n    Model: {{ toggleModel | json }}\r\n  </div>\r\n</div>\r\n"},{"fileName":"lib/ui-toggle/ui-toggle/ui-toggle.component.html","type":"html","text":"<ng-template #checkTemplate>\r\n  <label [attr.for]=\"idBinding\"\r\n         class=\"toggle\"\r\n         [class.-checked]=\"isChecked()\"\r\n         [class.-focused]=\"focused\"\r\n         [class.-has-errors]=\"hasErrors\"\r\n         [class.-disabled]=\"disabled\">\r\n  </label>\r\n</ng-template>\r\n"},{"fileName":"lib/ui-toggle/ui-toggle/ui-toggle.component.scss","type":"scss","text":":host {\r\n  clip: rect(0 0 0 0);\r\n  clip-path: inset(100%);\r\n  height: 1px;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  width: 1px;\r\n}\r\n\r\n$boxSize: 40px;\r\n$borderWidth: 1px;\r\n\r\n.toggle {\r\n  cursor: pointer;\r\n  margin-left: $boxSize + 8px;\r\n  position: relative;\r\n  &::before {\r\n    background-color: #ffffff;\r\n    border: $borderWidth solid #becad6;\r\n    border-radius: $boxSize;\r\n    box-shadow: none;\r\n    content: \"\";\r\n    display: block;\r\n    height: $boxSize / 2;\r\n    left: 0;\r\n    margin-left: - $boxSize - 8px;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    transition: all 250ms cubic-bezier(.27, .01, .38, 1.06);\r\n    width: $boxSize;\r\n  }\r\n  &::after {\r\n    background: #becad6;\r\n    border-radius: ($boxSize / 2 - 4px) / 2;\r\n    content: \"\";\r\n    height: $boxSize / 2 - 4px;\r\n    left: $borderWidth + 2px;\r\n    margin-left: - $boxSize - 8px;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    transition: all 300ms cubic-bezier(.27, .01, .38, 1.06);\r\n    width: $boxSize / 2 - 4px;\r\n  }\r\n  &.-checked {\r\n    &::before {\r\n      background: #2399e5;\r\n      border-color: #2399e5;\r\n    }\r\n    &::after {\r\n      background: #ffffff;\r\n      margin-left: - $boxSize / 2 - 8px;\r\n    }\r\n    &:active {\r\n      &::after {\r\n        margin-left: - $boxSize / 2 - 12px;\r\n      }\r\n    }\r\n  }\r\n  &.-focused {\r\n    &::before {\r\n      border-color: #2399e5;\r\n      box-shadow: 0 1px 5px rgba(0, 0, 0, .1);\r\n    }\r\n  }\r\n  &.-has-errors {\r\n    &::before {\r\n      border-color: #ff0c09;\r\n    }\r\n    &.-checked::before {\r\n      background: #ff0c09;\r\n    }\r\n  }\r\n  &.-disabled {\r\n    cursor: default;\r\n    &.-checked {\r\n      &::before {\r\n        background: #9da8b4;\r\n        border-color: #9da8b4;\r\n      }\r\n      &::after {\r\n        background: #ffffff;\r\n      }\r\n    }\r\n    &::before {\r\n      background: #f6f6f6;\r\n      border-color: #becad6;\r\n    }\r\n  }\r\n  &:active {\r\n    &::after {\r\n      width: $boxSize / 2;\r\n    }\r\n  }\r\n}\r\n\r\n"},{"fileName":"lib/ui-tooltip/demo/ui-tooltip-demo.component.html","type":"html","text":"<div>\r\n  <h3>Default</h3>\r\n  <span uiTooltip=\"hello\">Tooltip here!</span>\r\n</div>\r\n\r\n<div>\r\n  <h3>Color</h3>\r\n  <span uiTooltip=\"hello\" [uiTooltipOptions]=\"{color: 'default'}\">Default</span>\r\n  <span uiTooltip=\"hello\" [uiTooltipOptions]=\"{color: 'primary'}\">Primary</span>\r\n</div>\r\n\r\n<div>\r\n  <h3>Position</h3>\r\n  <span uiTooltip=\"Tooltip text\" [uiTooltipOptions]=\"{position: 'top-center'}\">Top-center</span>\r\n  <span uiTooltip=\"Tooltip text\" [uiTooltipOptions]=\"{position: 'top-left'}\">Top-left</span>\r\n  <span uiTooltip=\"Tooltip text\" [uiTooltipOptions]=\"{position: 'top-right'}\">Top-right</span>\r\n  <span uiTooltip=\"Tooltip text\" [uiTooltipOptions]=\"{position: 'right-center'}\">Right-center</span>\r\n  <span uiTooltip=\"Tooltip text\" [uiTooltipOptions]=\"{position: 'right-top'}\">Right-top</span>\r\n  <span uiTooltip=\"Tooltip text\" [uiTooltipOptions]=\"{position: 'right-bottom'}\">Right-bottom</span>\r\n  <span uiTooltip=\"Tooltip text\" [uiTooltipOptions]=\"{position: 'bottom-center'}\">Bottom-center</span>\r\n  <span uiTooltip=\"Tooltip text\" [uiTooltipOptions]=\"{position: 'bottom-left'}\">Bottom-left</span>\r\n  <span uiTooltip=\"Tooltip text\" [uiTooltipOptions]=\"{position: 'bottom-right'}\">Bottom-right</span>\r\n  <span uiTooltip=\"Tooltip text\" [uiTooltipOptions]=\"{position: 'left-center'}\">Left-center</span>\r\n  <span uiTooltip=\"Tooltip text\" [uiTooltipOptions]=\"{position: 'left-top'}\">Left-top</span>\r\n  <span uiTooltip=\"Tooltip text\" [uiTooltipOptions]=\"{position: 'left-bottom'}\">Left-bottom</span>\r\n</div>\r\n"},{"fileName":"lib/ui-tooltip/demo/ui-tooltip-demo.component.scss","type":"scss","text":"span {\r\n  border: 1px solid #bbbbbb;\r\n  display: inline-block;\r\n  margin: 4px;\r\n  padding: 8px 16px;\r\n}\r\n"},{"fileName":"lib/ui-tooltip/ui-tooltip-view/ui-tooltip-view.component.html","type":"html","text":"<div *ngIf=\"anchorEl\"\r\n     kitPinPosition\r\n     [anchor]=\"anchorEl\"\r\n     [position]=\"position\">\r\n  <span [kitClass]=\"{color: color, position: position}\"\r\n        [@fade]=\"true\">\r\n    {{ content }}\r\n  </span>\r\n</div>\r\n"},{"fileName":"lib/ui-tooltip/ui-tooltip-view/ui-tooltip-view.component.scss","type":"scss","text":"$offset: 2px;\r\n\r\nspan {\r\n  border-radius: 3px;\r\n  box-shadow: 0 0 6px 0 rgba(50, 50, 50, .1);\r\n  padding: 4px 8px;\r\n  &.color {\r\n    &-default {\r\n      background: rgba(0, 0, 0, .6);\r\n      color: #ffffff;\r\n    }\r\n    &-primary {\r\n      background: rgba(35, 153, 229, .8);\r\n      color: #ffffff;\r\n    }\r\n  }\r\n  &.position {\r\n    &-top-center, &-top-left, &-top-right {\r\n      margin-bottom: $offset;\r\n    }\r\n    &-right-center, &-right-top, &-right-bottom {\r\n      margin-left: $offset;\r\n    }\r\n    &-bottom-center, &-bottom-left, &-bottom-right {\r\n      margin-top: $offset;\r\n    }\r\n    &-left-center, &-left-top, &-left-bottom {\r\n      margin-right: $offset;\r\n    }\r\n  }\r\n}\r\n"},{"fileName":"lib/ui-vertical-menu/demo/ui-vertical-menu-demo.component.html","type":"html","text":"<div>\r\n  <h3>Default</h3>\r\n  <ui-vertical-menu>\r\n    <ui-vertical-menu-item>Item 1</ui-vertical-menu-item>\r\n    <ui-vertical-menu-item>Item 2</ui-vertical-menu-item>\r\n    <a href=\"javascript:void(0)\" uiVerticalMenuItem>Item 3</a>\r\n    <ui-vertical-menu-group>\r\n      Group 1\r\n      <ui-vertical-menu-sub *kitCollapse>\r\n        <ui-vertical-menu-item>Gr 1 Item 1</ui-vertical-menu-item>\r\n        <ui-vertical-menu-item>Gr 1 Item 2</ui-vertical-menu-item>\r\n      </ui-vertical-menu-sub>\r\n    </ui-vertical-menu-group>\r\n    <ui-vertical-menu-group>\r\n      Group 2\r\n      <ui-vertical-menu-sub *kitCollapse>\r\n        <ui-vertical-menu-item>Gr 2 Item 1</ui-vertical-menu-item>\r\n        <ui-vertical-menu-item>Gr 2 Item 2</ui-vertical-menu-item>\r\n      </ui-vertical-menu-sub>\r\n    </ui-vertical-menu-group>\r\n  </ui-vertical-menu>\r\n</div>\r\n\r\n<div>\r\n  <h3>Multiple</h3>\r\n  <ui-vertical-menu [multiple]=\"true\">\r\n    <ui-vertical-menu-item>Item 1</ui-vertical-menu-item>\r\n    <ui-vertical-menu-item>Item 2</ui-vertical-menu-item>\r\n    <a href=\"javascript:void(0)\" uiVerticalMenuItem>Item 3</a>\r\n    <ui-vertical-menu-group>\r\n      Group 1\r\n      <ui-vertical-menu-sub *kitCollapse>\r\n        <ui-vertical-menu-item>Gr 1 Item 1</ui-vertical-menu-item>\r\n        <ui-vertical-menu-item>Gr 1 Item 2</ui-vertical-menu-item>\r\n      </ui-vertical-menu-sub>\r\n    </ui-vertical-menu-group>\r\n    <ui-vertical-menu-group [active]=\"true\">\r\n      Group 2\r\n      <ui-vertical-menu-sub *kitCollapse>\r\n        <ui-vertical-menu-item>Gr 2 Item 1</ui-vertical-menu-item>\r\n        <ui-vertical-menu-item>Gr 2 Item 2</ui-vertical-menu-item>\r\n      </ui-vertical-menu-sub>\r\n    </ui-vertical-menu-group>\r\n    <ui-vertical-menu-group [active]=\"true\">\r\n      Group 3\r\n      <ui-vertical-menu-sub *kitCollapse>\r\n        <ui-vertical-menu-item>Gr 3 Item 1</ui-vertical-menu-item>\r\n        <ui-vertical-menu-item>Gr 3 Item 2</ui-vertical-menu-item>\r\n      </ui-vertical-menu-sub>\r\n    </ui-vertical-menu-group>\r\n  </ui-vertical-menu>\r\n</div>\r\n"},{"fileName":"lib/ui-vertical-menu/ui-vertical-menu-group/ui-vertical-menu-group.component.scss","type":"scss","text":":host {\r\n  border-bottom: 1px solid #eeeeee;\r\n  display: block;\r\n  &:last-child {\r\n    border-bottom: 0;\r\n  }\r\n}\r\n\r\n.title {\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 8px 16px;\r\n  .wrapper {\r\n    flex-grow: 1;\r\n  }\r\n  .arrow {\r\n    background: transparent;\r\n    border: 0;\r\n  }\r\n}\r\n"},{"fileName":"lib/ui-vertical-menu/ui-vertical-menu-item/ui-vertical-menu-item.component.scss","type":"scss","text":":host {\r\n  border-bottom: 1px solid #eeeeee;\r\n  color: #333333;\r\n  cursor: pointer;\r\n  display: block;\r\n  padding: 8px 16px;\r\n  text-decoration: none;\r\n  &:last-child {\r\n    border-bottom: 0;\r\n  }\r\n}\r\n"},{"fileName":"lib/ui-vertical-menu/ui-vertical-menu-sub/ui-vertical-menu-sub.component.scss","type":"scss","text":":host {\r\n  display: block;\r\n  overflow: hidden;\r\n}\r\n\r\n.wrapper {\r\n  background: #f3f3f3;\r\n}\r\n"},{"fileName":"lib/ui-vertical-menu/ui-vertical-menu/ui-vertical-menu.component.scss","type":"scss","text":":host {\r\n  background: #fbfbfb;\r\n  border: 1px solid #eeeeee;\r\n  display: block;\r\n}\r\n"}],"filesMap":{"lib":{"collection-lib.module.ts":"lib/collection-lib.module.ts","demo.module.ts":"lib/demo.module.ts","ui-accordion":{"demo":{"ui-accordion-demo.component.ts":"lib/ui-accordion/demo/ui-accordion-demo.component.ts","ui-accordion-demo.module.ts":"lib/ui-accordion/demo/ui-accordion-demo.module.ts","ui-accordion-demo.component.html":"lib/ui-accordion/demo/ui-accordion-demo.component.html"},"ui-accordion-content":{"ui-accordion-content.component.ts":"lib/ui-accordion/ui-accordion-content/ui-accordion-content.component.ts","ui-accordion-content.component.scss":"lib/ui-accordion/ui-accordion-content/ui-accordion-content.component.scss"},"ui-accordion-panel":{"ui-accordion-panel.component.ts":"lib/ui-accordion/ui-accordion-panel/ui-accordion-panel.component.ts","ui-accordion-panel.component.scss":"lib/ui-accordion/ui-accordion-panel/ui-accordion-panel.component.scss"},"ui-accordion-title":{"ui-accordion-title.component.ts":"lib/ui-accordion/ui-accordion-title/ui-accordion-title.component.ts","ui-accordion-title.component.scss":"lib/ui-accordion/ui-accordion-title/ui-accordion-title.component.scss"},"ui-accordion.module.ts":"lib/ui-accordion/ui-accordion.module.ts","ui-accordion.ts":"lib/ui-accordion/ui-accordion.ts","ui-accordion":{"ui-accordion.component.ts":"lib/ui-accordion/ui-accordion/ui-accordion.component.ts","ui-accordion.component.scss":"lib/ui-accordion/ui-accordion/ui-accordion.component.scss"}},"ui-alert":{"demo":{"ui-alert-demo.component.ts":"lib/ui-alert/demo/ui-alert-demo.component.ts","ui-alert-demo.module.ts":"lib/ui-alert/demo/ui-alert-demo.module.ts","ui-alert-demo.component.html":"lib/ui-alert/demo/ui-alert-demo.component.html"},"ui-alert-title":{"ui-alert-title.component.ts":"lib/ui-alert/ui-alert-title/ui-alert-title.component.ts"},"ui-alert.module.ts":"lib/ui-alert/ui-alert.module.ts","ui-alert.ts":"lib/ui-alert/ui-alert.ts","ui-alert":{"ui-alert.component.ts":"lib/ui-alert/ui-alert/ui-alert.component.ts","ui-alert.component.html":"lib/ui-alert/ui-alert/ui-alert.component.html","ui-alert.component.scss":"lib/ui-alert/ui-alert/ui-alert.component.scss"}},"ui-autocomplete":{"demo":{"ui-autocomplete-demo.component.ts":"lib/ui-autocomplete/demo/ui-autocomplete-demo.component.ts","ui-autocomplete-demo.module.ts":"lib/ui-autocomplete/demo/ui-autocomplete-demo.module.ts","ui-autocomplete-demo.component.html":"lib/ui-autocomplete/demo/ui-autocomplete-demo.component.html"},"meta.ts":"lib/ui-autocomplete/meta.ts","ui-autocomplete-options":{"ui-autocomplete-options.component.ts":"lib/ui-autocomplete/ui-autocomplete-options/ui-autocomplete-options.component.ts","ui-autocomplete-options.component.html":"lib/ui-autocomplete/ui-autocomplete-options/ui-autocomplete-options.component.html","ui-autocomplete-options.component.scss":"lib/ui-autocomplete/ui-autocomplete-options/ui-autocomplete-options.component.scss"},"ui-autocomplete.module.ts":"lib/ui-autocomplete/ui-autocomplete.module.ts","ui-autocomplete.ts":"lib/ui-autocomplete/ui-autocomplete.ts","ui-autocomplete":{"ui-autocomplete.directive.ts":"lib/ui-autocomplete/ui-autocomplete/ui-autocomplete.directive.ts"}},"ui-badge":{"demo":{"ui-badge-demo.component.ts":"lib/ui-badge/demo/ui-badge-demo.component.ts","ui-badge-demo.module.ts":"lib/ui-badge/demo/ui-badge-demo.module.ts","ui-badge-demo.component.html":"lib/ui-badge/demo/ui-badge-demo.component.html"},"meta.ts":"lib/ui-badge/meta.ts","ui-badge.module.ts":"lib/ui-badge/ui-badge.module.ts","ui-badge.ts":"lib/ui-badge/ui-badge.ts","ui-badge":{"ui-badge.component.ts":"lib/ui-badge/ui-badge/ui-badge.component.ts","ui-badge.component.scss":"lib/ui-badge/ui-badge/ui-badge.component.scss"}},"ui-breadcrumbs":{"demo":{"ui-breadcrumbs-demo.component.ts":"lib/ui-breadcrumbs/demo/ui-breadcrumbs-demo.component.ts","ui-breadcrumbs-demo.module.ts":"lib/ui-breadcrumbs/demo/ui-breadcrumbs-demo.module.ts","ui-breadcrumbs-demo.component.html":"lib/ui-breadcrumbs/demo/ui-breadcrumbs-demo.component.html"},"ui-breadcrumbs-item":{"ui-breadcrumbs-item.component.ts":"lib/ui-breadcrumbs/ui-breadcrumbs-item/ui-breadcrumbs-item.component.ts","ui-breadcrumbs-item.component.html":"lib/ui-breadcrumbs/ui-breadcrumbs-item/ui-breadcrumbs-item.component.html","ui-breadcrumbs-item.component.scss":"lib/ui-breadcrumbs/ui-breadcrumbs-item/ui-breadcrumbs-item.component.scss"},"ui-breadcrumbs.module.ts":"lib/ui-breadcrumbs/ui-breadcrumbs.module.ts","ui-breadcrumbs.ts":"lib/ui-breadcrumbs/ui-breadcrumbs.ts","ui-breadcrumbs":{"ui-breadcrumbs.component.ts":"lib/ui-breadcrumbs/ui-breadcrumbs/ui-breadcrumbs.component.ts","ui-breadcrumbs.component.html":"lib/ui-breadcrumbs/ui-breadcrumbs/ui-breadcrumbs.component.html","ui-breadcrumbs.component.scss":"lib/ui-breadcrumbs/ui-breadcrumbs/ui-breadcrumbs.component.scss"}},"ui-button":{"demo":{"ui-button-demo.component.ts":"lib/ui-button/demo/ui-button-demo.component.ts","ui-button-demo.module.ts":"lib/ui-button/demo/ui-button-demo.module.ts","ui-button-demo.component.html":"lib/ui-button/demo/ui-button-demo.component.html","ui-button-demo.component.scss":"lib/ui-button/demo/ui-button-demo.component.scss"},"meta.ts":"lib/ui-button/meta.ts","ui-button-group":{"ui-button-group.component.ts":"lib/ui-button/ui-button-group/ui-button-group.component.ts","ui-button-group.component.scss":"lib/ui-button/ui-button-group/ui-button-group.component.scss"},"ui-button.module.ts":"lib/ui-button/ui-button.module.ts","ui-button.ts":"lib/ui-button/ui-button.ts","ui-button":{"ui-button.component.ts":"lib/ui-button/ui-button/ui-button.component.ts","ui-button.component.html":"lib/ui-button/ui-button/ui-button.component.html","ui-button.component.scss":"lib/ui-button/ui-button/ui-button.component.scss"}},"ui-carousel":{"demo":{"ui-carousel-demo.component.ts":"lib/ui-carousel/demo/ui-carousel-demo.component.ts","ui-carousel-demo.module.ts":"lib/ui-carousel/demo/ui-carousel-demo.module.ts","ui-carousel-demo.component.html":"lib/ui-carousel/demo/ui-carousel-demo.component.html"},"ui-carousel-slide":{"ui-carousel-slide.component.ts":"lib/ui-carousel/ui-carousel-slide/ui-carousel-slide.component.ts","ui-carousel-slide.component.scss":"lib/ui-carousel/ui-carousel-slide/ui-carousel-slide.component.scss"},"ui-carousel.module.ts":"lib/ui-carousel/ui-carousel.module.ts","ui-carousel.ts":"lib/ui-carousel/ui-carousel.ts","ui-carousel":{"ui-carousel.component.ts":"lib/ui-carousel/ui-carousel/ui-carousel.component.ts","ui-carousel.component.scss":"lib/ui-carousel/ui-carousel/ui-carousel.component.scss"},"README.md":"lib/ui-carousel/README.md"},"ui-checkbox":{"demo":{"ui-checkbox-demo.component.ts":"lib/ui-checkbox/demo/ui-checkbox-demo.component.ts","ui-checkbox-demo.module.ts":"lib/ui-checkbox/demo/ui-checkbox-demo.module.ts","ui-checkbox-demo.component.html":"lib/ui-checkbox/demo/ui-checkbox-demo.component.html"},"ui-checkbox.module.ts":"lib/ui-checkbox/ui-checkbox.module.ts","ui-checkbox.ts":"lib/ui-checkbox/ui-checkbox.ts","ui-checkbox":{"ui-checkbox.component.ts":"lib/ui-checkbox/ui-checkbox/ui-checkbox.component.ts","ui-checkbox.component.html":"lib/ui-checkbox/ui-checkbox/ui-checkbox.component.html","ui-checkbox.component.scss":"lib/ui-checkbox/ui-checkbox/ui-checkbox.component.scss"}},"ui-custom-select":{"demo":{"ui-custom-select-demo.component.ts":"lib/ui-custom-select/demo/ui-custom-select-demo.component.ts","ui-custom-select-demo.module.ts":"lib/ui-custom-select/demo/ui-custom-select-demo.module.ts","ui-custom-select-demo.component.html":"lib/ui-custom-select/demo/ui-custom-select-demo.component.html"},"meta.ts":"lib/ui-custom-select/meta.ts","ui-custom-select.module.ts":"lib/ui-custom-select/ui-custom-select.module.ts","ui-custom-select.ts":"lib/ui-custom-select/ui-custom-select.ts","ui-custom-select":{"ui-custom-select.component.ts":"lib/ui-custom-select/ui-custom-select/ui-custom-select.component.ts","ui-custom-select.component.html":"lib/ui-custom-select/ui-custom-select/ui-custom-select.component.html","ui-custom-select.component.scss":"lib/ui-custom-select/ui-custom-select/ui-custom-select.component.scss"}},"ui-date-picker":{"demo":{"ui-date-picker-demo.component.ts":"lib/ui-date-picker/demo/ui-date-picker-demo.component.ts","ui-date-picker-demo.module.ts":"lib/ui-date-picker/demo/ui-date-picker-demo.module.ts","ui-date-picker-demo.component.html":"lib/ui-date-picker/demo/ui-date-picker-demo.component.html"},"ui-date-picker-popup":{"ui-date-picker-popup.component.ts":"lib/ui-date-picker/ui-date-picker-popup/ui-date-picker-popup.component.ts","ui-date-picker-popup.component.html":"lib/ui-date-picker/ui-date-picker-popup/ui-date-picker-popup.component.html","ui-date-picker-popup.component.scss":"lib/ui-date-picker/ui-date-picker-popup/ui-date-picker-popup.component.scss"},"ui-date-picker.module.ts":"lib/ui-date-picker/ui-date-picker.module.ts","ui-date-picker.ts":"lib/ui-date-picker/ui-date-picker.ts","ui-date-picker":{"ui-date-picker.component.ts":"lib/ui-date-picker/ui-date-picker/ui-date-picker.component.ts","ui-date-picker.component.html":"lib/ui-date-picker/ui-date-picker/ui-date-picker.component.html","ui-date-picker.component.scss":"lib/ui-date-picker/ui-date-picker/ui-date-picker.component.scss"},"README.md":"lib/ui-date-picker/README.md"},"ui-dialog":{"demo":{"ui-dialog-demo.component.ts":"lib/ui-dialog/demo/ui-dialog-demo.component.ts","ui-dialog-demo.module.ts":"lib/ui-dialog/demo/ui-dialog-demo.module.ts","ui-dialog-demo.component.html":"lib/ui-dialog/demo/ui-dialog-demo.component.html"},"meta.ts":"lib/ui-dialog/meta.ts","ui-dialog.module.ts":"lib/ui-dialog/ui-dialog.module.ts","ui-dialog.service.ts":"lib/ui-dialog/ui-dialog.service.ts","ui-dialog.ts":"lib/ui-dialog/ui-dialog.ts","ui-dialog":{"ui-dialog.component.ts":"lib/ui-dialog/ui-dialog/ui-dialog.component.ts","ui-dialog.component.html":"lib/ui-dialog/ui-dialog/ui-dialog.component.html","ui-dialog.component.scss":"lib/ui-dialog/ui-dialog/ui-dialog.component.scss"}},"ui-drawer":{"demo":{"ui-drawer-demo.component.ts":"lib/ui-drawer/demo/ui-drawer-demo.component.ts","ui-drawer-demo.module.ts":"lib/ui-drawer/demo/ui-drawer-demo.module.ts","ui-drawer-demo.component.html":"lib/ui-drawer/demo/ui-drawer-demo.component.html","ui-drawer-demo.component.scss":"lib/ui-drawer/demo/ui-drawer-demo.component.scss"},"meta.ts":"lib/ui-drawer/meta.ts","ui-drawer.module.ts":"lib/ui-drawer/ui-drawer.module.ts","ui-drawer.ts":"lib/ui-drawer/ui-drawer.ts","ui-drawer":{"ui-drawer.component.ts":"lib/ui-drawer/ui-drawer/ui-drawer.component.ts","ui-drawer.component.html":"lib/ui-drawer/ui-drawer/ui-drawer.component.html","ui-drawer.component.scss":"lib/ui-drawer/ui-drawer/ui-drawer.component.scss"}},"ui-dropdown":{"demo":{"ui-dropdown-demo.component.ts":"lib/ui-dropdown/demo/ui-dropdown-demo.component.ts","ui-dropdown-demo.module.ts":"lib/ui-dropdown/demo/ui-dropdown-demo.module.ts","ui-dropdown-demo.component.html":"lib/ui-dropdown/demo/ui-dropdown-demo.component.html"},"ui-dropdown-item":{"ui-dropdown-item.component.ts":"lib/ui-dropdown/ui-dropdown-item/ui-dropdown-item.component.ts","ui-dropdown-item.component.scss":"lib/ui-dropdown/ui-dropdown-item/ui-dropdown-item.component.scss"},"ui-dropdown.module.ts":"lib/ui-dropdown/ui-dropdown.module.ts","ui-dropdown.ts":"lib/ui-dropdown/ui-dropdown.ts","ui-dropdown":{"ui-dropdown.component.ts":"lib/ui-dropdown/ui-dropdown/ui-dropdown.component.ts","ui-dropdown.component.html":"lib/ui-dropdown/ui-dropdown/ui-dropdown.component.html","ui-dropdown.component.scss":"lib/ui-dropdown/ui-dropdown/ui-dropdown.component.scss"}},"ui-file":{"demo":{"ui-file-demo.component.ts":"lib/ui-file/demo/ui-file-demo.component.ts","ui-file-demo.module.ts":"lib/ui-file/demo/ui-file-demo.module.ts","ui-file-demo.component.html":"lib/ui-file/demo/ui-file-demo.component.html"},"meta.ts":"lib/ui-file/meta.ts","ui-file-holder":{"ui-file-holder.directive.ts":"lib/ui-file/ui-file-holder/ui-file-holder.directive.ts"},"ui-file.module.ts":"lib/ui-file/ui-file.module.ts","ui-file.ts":"lib/ui-file/ui-file.ts","ui-file":{"ui-file.component.ts":"lib/ui-file/ui-file/ui-file.component.ts","ui-file.component.scss":"lib/ui-file/ui-file/ui-file.component.scss"}},"ui-form":{"demo":{"ui-form-demo.component.ts":"lib/ui-form/demo/ui-form-demo.component.ts","ui-form-demo.module.ts":"lib/ui-form/demo/ui-form-demo.module.ts","ui-form-demo.component.html":"lib/ui-form/demo/ui-form-demo.component.html"},"meta.ts":"lib/ui-form/meta.ts","ui-form-field":{"ui-form-field.component.ts":"lib/ui-form/ui-form-field/ui-form-field.component.ts","ui-form-field.component.html":"lib/ui-form/ui-form-field/ui-form-field.component.html","ui-form-field.component.scss":"lib/ui-form/ui-form-field/ui-form-field.component.scss"},"ui-form.module.ts":"lib/ui-form/ui-form.module.ts","ui-form.ts":"lib/ui-form/ui-form.ts","ui-form":{"ui-form.component.ts":"lib/ui-form/ui-form/ui-form.component.ts","ui-form.component.html":"lib/ui-form/ui-form/ui-form.component.html","ui-form.component.scss":"lib/ui-form/ui-form/ui-form.component.scss"}},"ui-loading-bar":{"demo":{"ui-loading-bar-demo.component.ts":"lib/ui-loading-bar/demo/ui-loading-bar-demo.component.ts","ui-loading-bar-demo.module.ts":"lib/ui-loading-bar/demo/ui-loading-bar-demo.module.ts","ui-loading-bar-demo.component.html":"lib/ui-loading-bar/demo/ui-loading-bar-demo.component.html"},"ui-loading-bar.module.ts":"lib/ui-loading-bar/ui-loading-bar.module.ts","ui-loading-bar.ts":"lib/ui-loading-bar/ui-loading-bar.ts","ui-loading-bar":{"ui-loading-bar.component.ts":"lib/ui-loading-bar/ui-loading-bar/ui-loading-bar.component.ts","ui-loading-bar.component.html":"lib/ui-loading-bar/ui-loading-bar/ui-loading-bar.component.html","ui-loading-bar.component.scss":"lib/ui-loading-bar/ui-loading-bar/ui-loading-bar.component.scss"},"README.md":"lib/ui-loading-bar/README.md"},"ui-modal":{"demo":{"ui-modal-demo-binding-modal.component.ts":"lib/ui-modal/demo/ui-modal-demo-binding-modal.component.ts","ui-modal-demo-can-close-modal.component.ts":"lib/ui-modal/demo/ui-modal-demo-can-close-modal.component.ts","ui-modal-demo-modal.component.ts":"lib/ui-modal/demo/ui-modal-demo-modal.component.ts","ui-modal-demo.component.ts":"lib/ui-modal/demo/ui-modal-demo.component.ts","ui-modal-demo.module.ts":"lib/ui-modal/demo/ui-modal-demo.module.ts","ui-modal-demo-binding-modal.component.html":"lib/ui-modal/demo/ui-modal-demo-binding-modal.component.html","ui-modal-demo-can-close-modal.component.html":"lib/ui-modal/demo/ui-modal-demo-can-close-modal.component.html","ui-modal-demo-modal.component.html":"lib/ui-modal/demo/ui-modal-demo-modal.component.html","ui-modal-demo.component.html":"lib/ui-modal/demo/ui-modal-demo.component.html"},"ui-modal-footer":{"ui-modal-footer.component.ts":"lib/ui-modal/ui-modal-footer/ui-modal-footer.component.ts","ui-modal-footer.component.scss":"lib/ui-modal/ui-modal-footer/ui-modal-footer.component.scss"},"ui-modal.module.ts":"lib/ui-modal/ui-modal.module.ts","ui-modal.ts":"lib/ui-modal/ui-modal.ts","ui-modal":{"ui-modal.component.ts":"lib/ui-modal/ui-modal/ui-modal.component.ts","ui-modal.component.html":"lib/ui-modal/ui-modal/ui-modal.component.html","ui-modal.component.scss":"lib/ui-modal/ui-modal/ui-modal.component.scss"},"README.md":"lib/ui-modal/README.md"},"ui-notification":{"demo":{"ui-notification-demo.component.ts":"lib/ui-notification/demo/ui-notification-demo.component.ts","ui-notification-demo.module.ts":"lib/ui-notification/demo/ui-notification-demo.module.ts","ui-notification-demo.component.html":"lib/ui-notification/demo/ui-notification-demo.component.html"},"meta.ts":"lib/ui-notification/meta.ts","ui-notification-host":{"ui-notification-host.component.ts":"lib/ui-notification/ui-notification-host/ui-notification-host.component.ts","ui-notification-host.component.html":"lib/ui-notification/ui-notification-host/ui-notification-host.component.html","ui-notification-host.component.scss":"lib/ui-notification/ui-notification-host/ui-notification-host.component.scss"},"ui-notification.module.ts":"lib/ui-notification/ui-notification.module.ts","ui-notification.service.ts":"lib/ui-notification/ui-notification.service.ts","ui-notification.ts":"lib/ui-notification/ui-notification.ts","README.md":"lib/ui-notification/README.md"},"ui-popup":{"demo":{"ui-popup-demo.component.ts":"lib/ui-popup/demo/ui-popup-demo.component.ts","ui-popup-demo.module.ts":"lib/ui-popup/demo/ui-popup-demo.module.ts","ui-popup-demo.component.html":"lib/ui-popup/demo/ui-popup-demo.component.html","ui-popup-demo.component.scss":"lib/ui-popup/demo/ui-popup-demo.component.scss"},"ui-popup.module.ts":"lib/ui-popup/ui-popup.module.ts","ui-popup.ts":"lib/ui-popup/ui-popup.ts","ui-popup":{"ui-popup.component.ts":"lib/ui-popup/ui-popup/ui-popup.component.ts","ui-popup.component.html":"lib/ui-popup/ui-popup/ui-popup.component.html","ui-popup.component.scss":"lib/ui-popup/ui-popup/ui-popup.component.scss"}},"ui-radio":{"demo":{"ui-radio-demo.component.ts":"lib/ui-radio/demo/ui-radio-demo.component.ts","ui-radio-demo.module.ts":"lib/ui-radio/demo/ui-radio-demo.module.ts","ui-radio-demo.component.html":"lib/ui-radio/demo/ui-radio-demo.component.html"},"ui-radio.module.ts":"lib/ui-radio/ui-radio.module.ts","ui-radio.ts":"lib/ui-radio/ui-radio.ts","ui-radio":{"ui-radio.component.ts":"lib/ui-radio/ui-radio/ui-radio.component.ts","ui-radio.component.html":"lib/ui-radio/ui-radio/ui-radio.component.html","ui-radio.component.scss":"lib/ui-radio/ui-radio/ui-radio.component.scss"}},"ui-rating":{"demo":{"ui-rating-demo.component.ts":"lib/ui-rating/demo/ui-rating-demo.component.ts","ui-rating-demo.module.ts":"lib/ui-rating/demo/ui-rating-demo.module.ts","ui-rating-demo.component.html":"lib/ui-rating/demo/ui-rating-demo.component.html"},"ui-rating.module.ts":"lib/ui-rating/ui-rating.module.ts","ui-rating.ts":"lib/ui-rating/ui-rating.ts","ui-rating":{"ui-rating.component.ts":"lib/ui-rating/ui-rating/ui-rating.component.ts","ui-rating.component.html":"lib/ui-rating/ui-rating/ui-rating.component.html","ui-rating.component.scss":"lib/ui-rating/ui-rating/ui-rating.component.scss"}},"ui-scroll":{"demo":{"ui-scroll-demo.component.ts":"lib/ui-scroll/demo/ui-scroll-demo.component.ts","ui-scroll-demo.module.ts":"lib/ui-scroll/demo/ui-scroll-demo.module.ts","ui-scroll-demo.component.html":"lib/ui-scroll/demo/ui-scroll-demo.component.html"},"ui-scroll.module.ts":"lib/ui-scroll/ui-scroll.module.ts","ui-scroll.ts":"lib/ui-scroll/ui-scroll.ts","ui-scroll":{"ui-scroll.component.ts":"lib/ui-scroll/ui-scroll/ui-scroll.component.ts","ui-scroll.component.html":"lib/ui-scroll/ui-scroll/ui-scroll.component.html","ui-scroll.component.scss":"lib/ui-scroll/ui-scroll/ui-scroll.component.scss"}},"ui-select":{"demo":{"ui-select-demo.component.ts":"lib/ui-select/demo/ui-select-demo.component.ts","ui-select-demo.module.ts":"lib/ui-select/demo/ui-select-demo.module.ts","ui-select-demo.component.html":"lib/ui-select/demo/ui-select-demo.component.html"},"ui-select.module.ts":"lib/ui-select/ui-select.module.ts","ui-select.ts":"lib/ui-select/ui-select.ts","ui-select":{"ui-select.component.ts":"lib/ui-select/ui-select/ui-select.component.ts","ui-select.component.scss":"lib/ui-select/ui-select/ui-select.component.scss"}},"ui-slider":{"demo":{"ui-slider-demo.component.ts":"lib/ui-slider/demo/ui-slider-demo.component.ts","ui-slider-demo.module.ts":"lib/ui-slider/demo/ui-slider-demo.module.ts","ui-slider-demo.component.html":"lib/ui-slider/demo/ui-slider-demo.component.html"},"ui-slider.module.ts":"lib/ui-slider/ui-slider.module.ts","ui-slider.ts":"lib/ui-slider/ui-slider.ts","ui-slider":{"ui-slider.component.ts":"lib/ui-slider/ui-slider/ui-slider.component.ts","ui-slider.component.html":"lib/ui-slider/ui-slider/ui-slider.component.html","ui-slider.component.scss":"lib/ui-slider/ui-slider/ui-slider.component.scss"},"README.md":"lib/ui-slider/README.md"},"ui-tabs":{"demo":{"ui-tabs-demo.component.ts":"lib/ui-tabs/demo/ui-tabs-demo.component.ts","ui-tabs-demo.module.ts":"lib/ui-tabs/demo/ui-tabs-demo.module.ts","ui-tabs-demo.component.html":"lib/ui-tabs/demo/ui-tabs-demo.component.html"},"ui-tabs-content":{"ui-tabs-content.component.ts":"lib/ui-tabs/ui-tabs-content/ui-tabs-content.component.ts","ui-tabs-content.component.scss":"lib/ui-tabs/ui-tabs-content/ui-tabs-content.component.scss"},"ui-tabs-nav":{"ui-tabs-nav.component.ts":"lib/ui-tabs/ui-tabs-nav/ui-tabs-nav.component.ts","ui-tabs-nav.component.scss":"lib/ui-tabs/ui-tabs-nav/ui-tabs-nav.component.scss"},"ui-tabs-tab":{"ui-tabs-tab.component.ts":"lib/ui-tabs/ui-tabs-tab/ui-tabs-tab.component.ts","ui-tabs-tab.component.scss":"lib/ui-tabs/ui-tabs-tab/ui-tabs-tab.component.scss"},"ui-tabs.module.ts":"lib/ui-tabs/ui-tabs.module.ts","ui-tabs.ts":"lib/ui-tabs/ui-tabs.ts","ui-tabs":{"ui-tabs.component.ts":"lib/ui-tabs/ui-tabs/ui-tabs.component.ts","ui-tabs.component.scss":"lib/ui-tabs/ui-tabs/ui-tabs.component.scss"}},"ui-text":{"demo":{"ui-text-demo.component.ts":"lib/ui-text/demo/ui-text-demo.component.ts","ui-text-demo.module.ts":"lib/ui-text/demo/ui-text-demo.module.ts","ui-text-demo.component.html":"lib/ui-text/demo/ui-text-demo.component.html"},"ui-text.module.ts":"lib/ui-text/ui-text.module.ts","ui-text.ts":"lib/ui-text/ui-text.ts","ui-text":{"ui-text.component.ts":"lib/ui-text/ui-text/ui-text.component.ts","ui-text.component.scss":"lib/ui-text/ui-text/ui-text.component.scss"}},"ui-toggle":{"demo":{"ui-toggle-demo.component.ts":"lib/ui-toggle/demo/ui-toggle-demo.component.ts","ui-toggle-demo.module.ts":"lib/ui-toggle/demo/ui-toggle-demo.module.ts","ui-toggle-demo.component.html":"lib/ui-toggle/demo/ui-toggle-demo.component.html"},"ui-toggle.module.ts":"lib/ui-toggle/ui-toggle.module.ts","ui-toggle.ts":"lib/ui-toggle/ui-toggle.ts","ui-toggle":{"ui-toggle.component.ts":"lib/ui-toggle/ui-toggle/ui-toggle.component.ts","ui-toggle.component.html":"lib/ui-toggle/ui-toggle/ui-toggle.component.html","ui-toggle.component.scss":"lib/ui-toggle/ui-toggle/ui-toggle.component.scss"}},"ui-tooltip":{"demo":{"ui-tooltip-demo.component.ts":"lib/ui-tooltip/demo/ui-tooltip-demo.component.ts","ui-tooltip-demo.module.ts":"lib/ui-tooltip/demo/ui-tooltip-demo.module.ts","ui-tooltip-demo.component.html":"lib/ui-tooltip/demo/ui-tooltip-demo.component.html","ui-tooltip-demo.component.scss":"lib/ui-tooltip/demo/ui-tooltip-demo.component.scss"},"meta.ts":"lib/ui-tooltip/meta.ts","ui-tooltip-view":{"ui-tooltip-view.component.ts":"lib/ui-tooltip/ui-tooltip-view/ui-tooltip-view.component.ts","ui-tooltip-view.component.html":"lib/ui-tooltip/ui-tooltip-view/ui-tooltip-view.component.html","ui-tooltip-view.component.scss":"lib/ui-tooltip/ui-tooltip-view/ui-tooltip-view.component.scss"},"ui-tooltip.module.ts":"lib/ui-tooltip/ui-tooltip.module.ts","ui-tooltip.ts":"lib/ui-tooltip/ui-tooltip.ts","ui-tooltip":{"ui-tooltip.directive.ts":"lib/ui-tooltip/ui-tooltip/ui-tooltip.directive.ts"}},"ui-vertical-menu":{"demo":{"ui-vertical-menu-demo.component.ts":"lib/ui-vertical-menu/demo/ui-vertical-menu-demo.component.ts","ui-vertical-menu-demo.module.ts":"lib/ui-vertical-menu/demo/ui-vertical-menu-demo.module.ts","ui-vertical-menu-demo.component.html":"lib/ui-vertical-menu/demo/ui-vertical-menu-demo.component.html"},"ui-vertical-menu-group":{"ui-vertical-menu-group.component.ts":"lib/ui-vertical-menu/ui-vertical-menu-group/ui-vertical-menu-group.component.ts","ui-vertical-menu-group.component.scss":"lib/ui-vertical-menu/ui-vertical-menu-group/ui-vertical-menu-group.component.scss"},"ui-vertical-menu-item":{"ui-vertical-menu-item.component.ts":"lib/ui-vertical-menu/ui-vertical-menu-item/ui-vertical-menu-item.component.ts","ui-vertical-menu-item.component.scss":"lib/ui-vertical-menu/ui-vertical-menu-item/ui-vertical-menu-item.component.scss"},"ui-vertical-menu-sub":{"ui-vertical-menu-sub.component.ts":"lib/ui-vertical-menu/ui-vertical-menu-sub/ui-vertical-menu-sub.component.ts","ui-vertical-menu-sub.component.scss":"lib/ui-vertical-menu/ui-vertical-menu-sub/ui-vertical-menu-sub.component.scss"},"ui-vertical-menu.module.ts":"lib/ui-vertical-menu/ui-vertical-menu.module.ts","ui-vertical-menu.ts":"lib/ui-vertical-menu/ui-vertical-menu.ts","ui-vertical-menu":{"ui-vertical-menu.component.ts":"lib/ui-vertical-menu/ui-vertical-menu/ui-vertical-menu.component.ts","ui-vertical-menu.component.scss":"lib/ui-vertical-menu/ui-vertical-menu/ui-vertical-menu.component.scss"}}},"schematics":{"_template":{"index.ts":"schematics/_template/index.ts"},"config.ts":"schematics/config.ts","parse-name.ts":"schematics/parse-name.ts","strings.ts":"schematics/strings.ts"},"README.md":"README.md"}}